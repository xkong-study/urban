{"ast":null,"code":"import _slicedToArray from \"/Users/kong/Desktop/urban_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kong/Desktop/urban_react/src/pages/map.jsx\";\n\n/* jshint esversion: 6 */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { GoogleMap, MarkerClusterer, useJsApiLoader } from '@react-google-maps/api';\nimport { Map, Marker, Markers } from 'react-amap';\nimport { Loader } from '@googlemaps/js-api-loader';\nimport firebase from \"firebase/compat\";\nimport axios from \"axios\";\nimport { Input } from \"antd\";\nvar Search = Input.Search;\nvar containerStyle = {\n  width: '800px',\n  height: '400px'\n};\nexport default function map() {\n  var randomPosition = function randomPosition() {\n    return {\n      lat: -6 + Math.random() * 1,\n      lng: 53 + Math.random() * 1\n    };\n  };\n\n  var randomMarker = function randomMarker(len) {\n    return Array(len).fill(true).map(function (e, idx) {\n      return {\n        position: randomPosition()\n      };\n    });\n  };\n\n  var _React$useState = React.useState({\n    markers: randomMarker(10)\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      food = _React$useState2[0],\n      setFood = _React$useState2[1];\n\n  var randomMarkers = function randomMarkers() {\n    setFood({\n      markers: randomMarker(10)\n    });\n    console.log(food);\n  };\n\n  var firebaseConfig = {\n    apiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\",\n    authDomain: \"urban-computing-cb07c.firebaseapp.com\",\n    databaseURL: \"https://urban-computing-cb07c-default-rtdb.firebaseio.com\",\n    projectId: \"urban-computing-cb07c\",\n    storageBucket: \"urban-computing-cb07c.appspot.com\",\n    messagingSenderId: \"293478437107\",\n    appId: \"1:293478437107:web:4cd5199b68f68eac542786\",\n    measurementId: \"G-3Z5DD1SJYQ\"\n  };\n\n  var _React$useState3 = React.useState({\n    lat: 53.49332,\n    lng: -6.31718\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      count = _React$useState4[0],\n      setCount = _React$useState4[1];\n\n  React.useEffect(function () {\n    firebase.initializeApp(firebaseConfig);\n    firebase.database().ref('/').on('value', function (snap) {\n      var obj = snap.val();\n\n      if (obj !== null) {\n        for (var key in obj) {\n          if (key.split(',')[2] > '22 13:35:00') {\n            setCount(obj[key]);\n            console.log(obj[key]);\n          }\n        }\n      }\n    });\n  }, []);\n\n  var _useJsApiLoader = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\"\n  }),\n      isLoaded = _useJsApiLoader.isLoaded;\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      map = _React$useState6[0],\n      setMap = _React$useState6[1];\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      myArr = _React$useState8[0],\n      setMyArr = _React$useState8[1];\n\n  function QueryData(value) {\n    axios.get('https://maps.googleapis.com/maps/api/place/nearbysearch/json', {\n      params: {\n        key: 'AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c',\n        types: value,\n        location: '53.26,-6.15',\n        radius: '100000'\n      }\n    }).then(function (response) {\n      var result = response.data.results;\n\n      for (var key in result) {\n        myArr.push(result[key].geometry.location);\n      }\n\n      setMyArr(myArr);\n      console.log(myArr);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  function query() {\n    var marker2 = new window.google.maps.Marker({\n      position: {\n        lat: 51.49332,\n        lng: -6.31718\n      },\n      title: \"starting\"\n    });\n\n    for (var key in myArr) {\n      var marker = new window.google.maps.Marker({\n        position: myArr[key],\n        title: \"starting\"\n      });\n      marker.setMap(map);\n    }\n\n    marker2.setMap(map);\n    console.log('1');\n  }\n\n  var data = React.useCallback(function (map) {\n    map = window.google.maps.Map();\n    var marker1 = new window.google.maps.Marker({\n      position: count,\n      title: \"starting\"\n    });\n    axios.get('https://maps.googleapis.com/maps/api/place/nearbysearch/json', {\n      params: {\n        key: 'AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c',\n        types: 'dinner',\n        location: '53.26,-6.15',\n        radius: '100000'\n      }\n    }).then(function (response) {\n      var result = response.data.results;\n\n      for (var key in result) {\n        myArr.push(result[key].geometry.location);\n      }\n\n      setMyArr(myArr);\n\n      for (var _key in myArr) {\n        var marker = new window.google.maps.Marker({\n          position: myArr[_key]\n        });\n        marker.setMap(map);\n        console.log(myArr[_key]);\n      }\n    });\n    console.log(myArr);\n    marker1.setMap(map);\n  }, [myArr]);\n  return isLoaded ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: count,\n    zoom: 20,\n    onLoad: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginLeft: '5px',\n      fontWeight: 'bold',\n      marginTop: '10px',\n      color: '#0066FF'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, \"\\u641C\\u7D22\\u9644\\u8FD1\\u9910\\u996E\\u5E97:\"), /*#__PURE__*/React.createElement(Search, {\n    style: {\n      width: '330px',\n      marginLeft: '110px',\n      marginBottom: '5px',\n      marginTop: '-42px'\n    },\n    placeholder: \"input search text\",\n    onSearch: QueryData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 114\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null);\n}","map":{"version":3,"sources":["/Users/kong/Desktop/urban_react/src/pages/map.jsx"],"names":["React","useEffect","useRef","useState","GoogleMap","MarkerClusterer","useJsApiLoader","Map","Marker","Markers","Loader","firebase","axios","Input","Search","containerStyle","width","height","map","randomPosition","lat","Math","random","lng","randomMarker","len","Array","fill","e","idx","position","markers","food","setFood","randomMarkers","console","log","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","count","setCount","initializeApp","database","ref","on","snap","obj","val","key","split","id","googleMapsApiKey","isLoaded","setMap","myArr","setMyArr","QueryData","value","get","params","types","location","radius","then","response","result","data","results","push","geometry","catch","error","query","marker2","window","google","maps","title","marker","useCallback","marker1","marginLeft","fontWeight","marginTop","color","marginBottom"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,SAAQC,SAAR,EAAmBC,eAAnB,EAAoCC,cAApC,QAAyD,wBAAzD;AACA,SAAQC,GAAR,EAAaC,MAAb,EAAqBC,OAArB,QAAmC,YAAnC;AACA,SAAQC,MAAR,QAAqB,2BAArB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,MAApB;IACQC,M,GAAWD,K,CAAXC,M;AAGR,IAAMC,cAAc,GAAG;AACnBC,EAAAA,KAAK,EAAE,OADY;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAAvB;AAMA,eAAe,SAASC,GAAT,GAAe;AAC1B,MAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,WAAO;AAC1BC,MAAAA,GAAG,EAAE,CAAC,CAAD,GAAKC,IAAI,CAACC,MAAL,KAAgB,CADA;AAE1BC,MAAAA,GAAG,EAAE,KAAKF,IAAI,CAACC,MAAL,KAAgB;AAFA,KAAP;AAAA,GAAvB;;AAIA,MAAME,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD;AAAA,WACjBC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,IAAhB,EAAsBT,GAAtB,CAA0B,UAACU,CAAD,EAAIC,GAAJ;AAAA,aAAa;AACnCC,QAAAA,QAAQ,EAAEX,cAAc;AADW,OAAb;AAAA,KAA1B,CADiB;AAAA,GAArB;;AAL0B,wBAUHnB,KAAK,CAACG,QAAN,CAAe;AAAC4B,IAAAA,OAAO,EAAEP,YAAY,CAAC,EAAD;AAAtB,GAAf,CAVG;AAAA;AAAA,MAUnBQ,IAVmB;AAAA,MAUdC,OAVc;;AAY1B,MAAMC,aAAa,GAAC,SAAdA,aAAc,GAAU;AAC1BD,IAAAA,OAAO,CAAC;AAACF,MAAAA,OAAO,EAAEP,YAAY,CAAC,EAAD;AAAtB,KAAD,CAAP;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACH,GAHD;;AAKA,MAAMK,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,yCADW;AAEnBC,IAAAA,UAAU,EAAE,uCAFO;AAGnBC,IAAAA,WAAW,EAAE,2DAHM;AAInBC,IAAAA,SAAS,EAAE,uBAJQ;AAKnBC,IAAAA,aAAa,EAAE,mCALI;AAMnBC,IAAAA,iBAAiB,EAAE,cANA;AAOnBC,IAAAA,KAAK,EAAE,2CAPY;AAQnBC,IAAAA,aAAa,EAAE;AARI,GAAvB;;AAjB0B,yBA2BD7C,KAAK,CAACG,QAAN,CAAe;AAACiB,IAAAA,GAAG,EAAE,QAAN;AAAgBG,IAAAA,GAAG,EAAE,CAAC;AAAtB,GAAf,CA3BC;AAAA;AAAA,MA2BnBuB,KA3BmB;AAAA,MA2BZC,QA3BY;;AA6B1B/C,EAAAA,KAAK,CAACC,SAAN,CAAgB,YAAI;AACZU,IAAAA,QAAQ,CAACqC,aAAT,CAAuBX,cAAvB;AACA1B,IAAAA,QAAQ,CAACsC,QAAT,GAAoBC,GAApB,CAAwB,GAAxB,EAA6BC,EAA7B,CAAgC,OAAhC,EAAwC,UAACC,IAAD,EAAS;AAC7C,UAAIC,GAAG,GAAGD,IAAI,CAACE,GAAL,EAAV;;AACA,UAAID,GAAG,KAAK,IAAZ,EAAkB;AACd,aAAK,IAAIE,GAAT,IAAgBF,GAAhB,EAAqB;AACjB,cAAGE,GAAG,CAACC,KAAJ,CAAU,GAAV,EAAe,CAAf,IAAkB,aAArB,EAAoC;AAChCT,YAAAA,QAAQ,CAACM,GAAG,CAACE,GAAD,CAAJ,CAAR;AACApB,YAAAA,OAAO,CAACC,GAAR,CAAYiB,GAAG,CAACE,GAAD,CAAf;AACH;AACJ;AACJ;AACJ,KAVD;AAWP,GAbD,EAaE,EAbF;;AA7B0B,wBA6CPjD,cAAc,CAAC;AAC9BmD,IAAAA,EAAE,EAAE,mBAD0B;AAE9BC,IAAAA,gBAAgB,EAAE;AAFY,GAAD,CA7CP;AAAA,MA6CnBC,QA7CmB,mBA6CnBA,QA7CmB;;AAAA,yBAiDJ3D,KAAK,CAACG,QAAN,CAAe,IAAf,CAjDI;AAAA;AAAA,MAiDnBe,GAjDmB;AAAA,MAiDd0C,MAjDc;;AAAA,yBAmDA5D,KAAK,CAACG,QAAN,CAAe,EAAf,CAnDA;AAAA;AAAA,MAmDnB0D,KAnDmB;AAAA,MAmDZC,QAnDY;;AAqD1B,WAASC,SAAT,CAAmBC,KAAnB,EAAgC;AAC5BpD,IAAAA,KAAK,CAACqD,GAAN,CAAU,8DAAV,EAA0E;AACtEC,MAAAA,MAAM,EAAE;AACJX,QAAAA,GAAG,EAAE,yCADD;AAEJY,QAAAA,KAAK,EAAEH,KAFH;AAGJI,QAAAA,QAAQ,EAAE,aAHN;AAIJC,QAAAA,MAAM,EAAE;AAJJ;AAD8D,KAA1E,EAOGC,IAPH,CAOQ,UAAUC,QAAV,EAAoB;AACxB,UAAMC,MAAM,GAAGD,QAAQ,CAACE,IAAT,CAAcC,OAA7B;;AACA,WAAK,IAAInB,GAAT,IAAgBiB,MAAhB,EAAwB;AACpBX,QAAAA,KAAK,CAACc,IAAN,CAAWH,MAAM,CAACjB,GAAD,CAAN,CAAYqB,QAAZ,CAAqBR,QAAhC;AACH;;AACDN,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACA1B,MAAAA,OAAO,CAACC,GAAR,CAAYyB,KAAZ;AACH,KAdD,EAeKgB,KAfL,CAeW,UAAUC,KAAV,EAAiB;AACpB3C,MAAAA,OAAO,CAACC,GAAR,CAAY0C,KAAZ;AACH,KAjBL;AAkBH;;AAED,WAASC,KAAT,GAAgB;AAEZ,QAAMC,OAAO,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmB3E,MAAvB,CAA8B;AAC1CsB,MAAAA,QAAQ,EAAE;AAACV,QAAAA,GAAG,EAAE,QAAN;AAAgBG,QAAAA,GAAG,EAAE,CAAC;AAAtB,OADgC;AAE1C6D,MAAAA,KAAK,EAAE;AAFmC,KAA9B,CAAhB;;AAIA,SAAI,IAAI7B,GAAR,IAAeM,KAAf,EAAsB;AAClB,UAAMwB,MAAM,GAAG,IAAIJ,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmB3E,MAAvB,CAA8B;AACzCsB,QAAAA,QAAQ,EAAE+B,KAAK,CAACN,GAAD,CAD0B;AAEzC6B,QAAAA,KAAK,EAAE;AAFkC,OAA9B,CAAf;AAIAC,MAAAA,MAAM,CAACzB,MAAP,CAAc1C,GAAd;AACL;;AACC8D,IAAAA,OAAO,CAACpB,MAAR,CAAe1C,GAAf;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACH;;AAED,MAAMqC,IAAI,GAAGzE,KAAK,CAACsF,WAAN,CAAkB,UAACpE,GAAD,EAAS;AACpCA,IAAAA,GAAG,GAAC+D,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmB5E,GAAnB,EAAJ;AACA,QAAMgF,OAAO,GAAG,IAAIN,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmB3E,MAAvB,CAA8B;AAC1CsB,MAAAA,QAAQ,EAAEgB,KADgC;AAE1CsC,MAAAA,KAAK,EAAE;AAFmC,KAA9B,CAAhB;AAKIxE,IAAAA,KAAK,CAACqD,GAAN,CAAU,8DAAV,EAA0E;AACtEC,MAAAA,MAAM,EAAE;AACJX,QAAAA,GAAG,EAAE,yCADD;AAEJY,QAAAA,KAAK,EAAE,QAFH;AAGJC,QAAAA,QAAQ,EAAE,aAHN;AAIJC,QAAAA,MAAM,EAAE;AAJJ;AAD8D,KAA1E,EAOGC,IAPH,CAOQ,UAAUC,QAAV,EAAoB;AACxB,UAAMC,MAAM,GAAGD,QAAQ,CAACE,IAAT,CAAcC,OAA7B;;AACA,WAAK,IAAInB,GAAT,IAAgBiB,MAAhB,EAAwB;AACpBX,QAAAA,KAAK,CAACc,IAAN,CAAWH,MAAM,CAACjB,GAAD,CAAN,CAAYqB,QAAZ,CAAqBR,QAAhC;AACH;;AACDN,MAAAA,QAAQ,CAACD,KAAD,CAAR;;AACA,WAAK,IAAIN,IAAT,IAAgBM,KAAhB,EAAuB;AACnB,YAAMwB,MAAM,GAAG,IAAIJ,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmB3E,MAAvB,CAA8B;AACzCsB,UAAAA,QAAQ,EAAE+B,KAAK,CAACN,IAAD;AAD0B,SAA9B,CAAf;AAGA8B,QAAAA,MAAM,CAACzB,MAAP,CAAc1C,GAAd;AACAiB,QAAAA,OAAO,CAACC,GAAR,CAAYyB,KAAK,CAACN,IAAD,CAAjB;AACH;AACJ,KApBD;AAsBJpB,IAAAA,OAAO,CAACC,GAAR,CAAYyB,KAAZ;AACA0B,IAAAA,OAAO,CAAC3B,MAAR,CAAe1C,GAAf;AACH,GA/BY,EA+BX,CAAC2C,KAAD,CA/BW,CAAb;AAiCQ,SAAOF,QAAQ,gBACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAY,IAAA,iBAAiB,EAAE5C,cAA/B;AAAgD,IAAA,MAAM,EAAE+B,KAAxD;AAAgE,IAAA,IAAI,EAAE,EAAtE;AAA2E,IAAA,MAAM,EAAE2B,IAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAG,IAAA,KAAK,EAAE;AAACe,MAAAA,UAAU,EAAC,KAAZ;AAAkBC,MAAAA,UAAU,EAAC,MAA7B;AAAoCC,MAAAA,SAAS,EAAC,MAA9C;AAAqDC,MAAAA,KAAK,EAAC;AAA3D,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAFJ,eAEiG,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAC3E,MAAAA,KAAK,EAAC,OAAP;AAAewE,MAAAA,UAAU,EAAC,OAA1B;AAAkCI,MAAAA,YAAY,EAAC,KAA/C;AAAqDF,MAAAA,SAAS,EAAC;AAA/D,KAAf;AAAwF,IAAA,WAAW,EAAC,mBAApG;AAAwH,IAAA,QAAQ,EAAE3B,SAAlI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFjG,CADW,gBAIH,yCAJZ;AAKX","sourcesContent":["/* jshint esversion: 6 */\n\nimport React, {useEffect, useRef, useState} from 'react';\nimport {GoogleMap, MarkerClusterer, useJsApiLoader} from '@react-google-maps/api';\nimport {Map, Marker, Markers} from 'react-amap';\nimport {Loader} from '@googlemaps/js-api-loader';\nimport firebase from \"firebase/compat\";\nimport axios from \"axios\";\nimport {Input} from \"antd\";\nconst { Search } = Input;\n\n\nconst containerStyle = {\n    width: '800px',\n    height: '400px'\n};\n\n\nexport default function map() {\n    const randomPosition = () => ({\n        lat: -6 + Math.random() * 1,\n        lng: 53 + Math.random() * 1\n    });\n    const randomMarker = (len) => (\n        Array(len).fill(true).map((e, idx) => ({\n            position: randomPosition()\n        }))\n    );\n    const [food,setFood] = React.useState({markers: randomMarker(10)});\n\n    const randomMarkers=function(){\n        setFood({markers: randomMarker(10)});\n        console.log(food);\n    };\n\n    const firebaseConfig = {\n        apiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\",\n        authDomain: \"urban-computing-cb07c.firebaseapp.com\",\n        databaseURL: \"https://urban-computing-cb07c-default-rtdb.firebaseio.com\",\n        projectId: \"urban-computing-cb07c\",\n        storageBucket: \"urban-computing-cb07c.appspot.com\",\n        messagingSenderId: \"293478437107\",\n        appId: \"1:293478437107:web:4cd5199b68f68eac542786\",\n        measurementId: \"G-3Z5DD1SJYQ\"\n    };\n    const [count, setCount] =React.useState({lat: 53.49332, lng: -6.31718});\n\n    React.useEffect(()=>{\n            firebase.initializeApp(firebaseConfig);\n            firebase.database().ref('/').on('value',(snap)=> {\n                let obj = snap.val();\n                if (obj !== null) {\n                    for (var key in obj) {\n                        if(key.split(',')[2]>'22 13:35:00') {\n                            setCount(obj[key]);\n                            console.log(obj[key]);\n                        }\n                    }\n                }\n            });\n    },[]);\n\n\n    const {isLoaded} = useJsApiLoader({\n        id: 'google-map-script',\n        googleMapsApiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\"\n    });\n    const [map, setMap] = React.useState(null);\n\n    const [myArr, setMyArr] = React.useState([]);\n\n    function QueryData(value:string){\n        axios.get('https://maps.googleapis.com/maps/api/place/nearbysearch/json', {\n            params: {\n                key: 'AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c',\n                types: value,\n                location: '53.26,-6.15',\n                radius: '100000'\n            }\n        }).then(function (response) {\n            const result = response.data.results;\n            for (var key in result) {\n                myArr.push(result[key].geometry.location);\n            }\n            setMyArr(myArr);\n            console.log(myArr);\n        })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    function query(){\n\n        const marker2 = new window.google.maps.Marker({\n            position: {lat: 51.49332, lng: -6.31718},\n            title: \"starting\"\n        });\n        for(let key in myArr) {\n            const marker = new window.google.maps.Marker({\n                position: myArr[key],\n                title: \"starting\"\n            });\n            marker.setMap(map);\n      }\n        marker2.setMap(map);\n        console.log('1');\n    }\n\n    const data = React.useCallback((map) => {\n        map=window.google.maps.Map();\n        const marker1 = new window.google.maps.Marker({\n            position: count,\n            title: \"starting\"\n        });\n\n            axios.get('https://maps.googleapis.com/maps/api/place/nearbysearch/json', {\n                params: {\n                    key: 'AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c',\n                    types: 'dinner',\n                    location: '53.26,-6.15',\n                    radius: '100000'\n                }\n            }).then(function (response) {\n                const result = response.data.results;\n                for (var key in result) {\n                    myArr.push(result[key].geometry.location);\n                }\n                setMyArr(myArr);\n                for (let key in myArr) {\n                    const marker = new window.google.maps.Marker({\n                        position: myArr[key],\n                    });\n                    marker.setMap(map);\n                    console.log(myArr[key]);\n                }\n            });\n\n        console.log(myArr);\n        marker1.setMap(map);\n    },[myArr]);\n\n            return isLoaded?(\n                <div>\n                    <GoogleMap  mapContainerStyle={containerStyle}  center={count}  zoom={20}  onLoad={data}  ></GoogleMap>\n                    <p style={{marginLeft:'5px',fontWeight:'bold',marginTop:'10px',color:'#0066FF'}}>搜索附近餐饮店:</p><Search style={{width:'330px',marginLeft:'110px',marginBottom:'5px',marginTop:'-42px'}} placeholder=\"input search text\" onSearch={QueryData}></Search>\n                </div>):<></>\n}\n\n"]},"metadata":{},"sourceType":"module"}