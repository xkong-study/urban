{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _APILoader = require('../utils/APILoader');\n\nvar _APILoader2 = _interopRequireDefault(_APILoader);\n\nvar _isFun = require('../utils/isFun');\n\nvar _isFun2 = _interopRequireDefault(_isFun);\n\nvar _log = require('../utils/log');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _common = require('../utils/common');\n\nvar _withPropsReactive = require('../utils/withPropsReactive');\n\nvar _withPropsReactive2 = _interopRequireDefault(_withPropsReactive);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Component = _react2.default.Component;\nvar Children = _react2.default.Children;\nvar containerStyle = {\n  width: '100%',\n  height: '100%'\n};\nvar wrapperStyle = {\n  width: '100%',\n  height: '100%',\n  position: 'relative' // Native supported dynamic props by Amap\n\n};\nvar NativeDynamicProps = ['layers', 'zoom', 'center', 'labelzIndex', // 'lang', native error in JSSDK when 3D viewMode\n'mapStyle', 'features', 'cursor', 'pitch'];\n/*\n * Props below can set by 'setStatus' altogether\n */\n\nvar StatusDynamicProps = ['animateEnable', 'doubleClickZoom', 'dragEnable', 'isHotspot', 'jogEnable', 'keyboardEnable', 'resizeEnable', 'rotateEnable', 'scrollWheel', 'touchZoom', 'zoomEnable'];\nvar StaticProps = ['view', 'zooms', 'showIndoorMap', 'indoorMap', 'expandZoomRange', 'showBuildingBlock', 'viewMode', 'pitchEnable', 'buildingAnimation', 'skyColor'];\nvar CreateProps = NativeDynamicProps.concat(StatusDynamicProps, StaticProps); // const reservedPropName = [\n//   'amapkey',\n//   'version',\n//   'useAMapUI',\n//   'onInstanceCreated',\n//   'events',\n//   'loading',\n//   'plugins'\n// ]\n\nvar defaultOpts = {\n  MapType: {\n    showRoad: false,\n    showTraffic: false,\n    defaultType: 0\n  },\n  ToolBar: {\n    position: 'RB',\n    noIpLocate: true,\n    locate: true,\n    liteStyle: true,\n    autoPosition: false\n  },\n  OverView: {},\n  ControlBar: {}\n};\n\nvar BaseMap = function (_Component) {\n  _inherits(BaseMap, _Component);\n\n  function BaseMap(props) {\n    _classCallCheck(this, BaseMap);\n\n    var _this = _possibleConstructorReturn(this, (BaseMap.__proto__ || Object.getPrototypeOf(BaseMap)).call(this, props));\n\n    _this.state = {\n      mapLoaded: false\n    };\n    var self = _this;\n    _this.setterMap = {\n      zoom: function zoom(val) {\n        self.map.setZoom(val);\n      },\n      cursor: function cursor(val) {\n        self.map.setDefaultCursor(val);\n      },\n      labelzIndex: function labelzIndex(val) {\n        self.map.setlabelzIndex(val);\n      }\n    };\n    _this.converterMap = {\n      center: _common.toLnglat\n    };\n\n    if (typeof window !== 'undefined') {\n      _this.pluginMap = {};\n      new _APILoader2.default({\n        key: props.amapkey,\n        useAMapUI: props.useAMapUI,\n        version: props.version,\n        protocol: props.protocol\n      }).load().then(function () {\n        _this.createInstance();\n\n        if (!_this.state.mapLoaded) {\n          _this.setState({\n            mapLoaded: true\n          });\n        }\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(BaseMap, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.state.mapLoaded) {\n        this.updateMapProps(this.props, nextProps);\n      }\n    }\n  }, {\n    key: 'renderChildren',\n    value: function renderChildren() {\n      var _this2 = this;\n\n      return Children.map(this.props.children, function (child) {\n        if (child) {\n          var cType = child.type;\n          /* 针对下面两种组件不注入地图相关属性\n           * 1. 明确声明不需要注入的\n           * 2. DOM 元素\n           */\n\n          if (cType.preventAmap || typeof cType === 'string') {\n            return child;\n          }\n\n          return _react2.default.cloneElement(child, {\n            __map__: _this2.map\n          });\n        }\n\n        return child;\n      });\n    }\n  }, {\n    key: 'createInstance',\n    value: function createInstance() {\n      if (!this.map) {\n        var options = this.buildCreateOptions();\n        this.map = new window.AMap.Map(this.mapWrapper, options); // install map plugins\n\n        this.setPlugins(this.props);\n        this.props.onInstanceCreated && this.props.onInstanceCreated();\n      }\n    }\n  }, {\n    key: 'buildCreateOptions',\n    value: function buildCreateOptions() {\n      var _this3 = this;\n\n      var props = this.props;\n      var options = {};\n      CreateProps.forEach(function (key) {\n        if (key in props) {\n          options[key] = _this3.getSetterValue(key, props);\n        }\n      });\n      return options;\n    }\n  }, {\n    key: 'updateMapProps',\n    value: function updateMapProps(prevProps, nextProps) {\n      var _this4 = this;\n\n      var nextMapStatus = {};\n      var statusChangeFlag = false;\n      var statusPropExist = false;\n      StatusDynamicProps.forEach(function (key) {\n        if (key in nextProps) {\n          statusPropExist = true;\n\n          if (_this4.detectPropChanged(key, prevProps, nextProps)) {\n            statusChangeFlag = true;\n            nextMapStatus[key] = nextProps[key];\n          }\n        }\n      });\n      statusChangeFlag && this.map.setStatus(nextMapStatus);\n\n      if (statusPropExist && 'status' in nextProps) {\n        _log2.default.warning(\"\\u4EE5\\u4E0B\\u8FD9\\u4E9B\\u5C5E\\u6027\\u53EF\\u4EE5\\u5355\\u72EC\\u63D0\\u4F9B\\u8FDB\\u884C\\u914D\\u7F6E\\uFF0C\\u4E5F\\u53EF\\u4EE5\\u7EDF\\u4E00\\u4F5C\\u4E3A\\u2018status\\u2019\\u5C5E\\u6027\\u914D\\u7F6E\\uFF1B\\u4F46\\u662F\\u8BF7\\u4E0D\\u8981\\u540C\\u65F6\\u4F7F\\u7528\\u8FD9\\u4E24\\u79CD\\u65B9\\u5F0F\\u3002\\n\\uFF08\" + StatusDynamicProps.join(', ') + \"\\uFF09\");\n      }\n\n      StaticProps.forEach(function (key) {\n        if (key in nextProps) {\n          if (_this4.detectPropChanged(key, prevProps, nextProps)) {\n            _log2.default.warning('\\'' + key + \"' \\u662F\\u4E00\\u4E2A\\u9759\\u6001\\u5C5E\\u6027\\uFF0C\\u5730\\u56FE\\u5B9E\\u4F8B\\u521B\\u5EFA\\u6210\\u529F\\u540E\\u65E0\\u6CD5\\u4FEE\\u6539\");\n          }\n        }\n      });\n      this.setPlugins(nextProps);\n    }\n  }, {\n    key: 'getSetterValue',\n    value: function getSetterValue(key, props) {\n      if (key in this.converterMap) {\n        return this.converterMap[key](props[key]);\n      }\n\n      return props[key];\n    }\n  }, {\n    key: 'detectPropChanged',\n    value: function detectPropChanged(key, prevProps, nextProps) {\n      return prevProps[key] !== nextProps[key];\n    }\n  }, {\n    key: 'setPlugins',\n    value: function setPlugins(props) {\n      var _this5 = this;\n\n      var pluginList = ['Scale', 'ToolBar', 'MapType', 'OverView', 'ControlBar'];\n\n      if ('plugins' in props) {\n        var plugins = props.plugins;\n\n        if (plugins && plugins.length) {\n          plugins.forEach(function (p) {\n            var name = void 0,\n                config = void 0,\n                visible = void 0;\n\n            if (typeof p === 'string') {\n              name = p;\n              config = null;\n              visible = true;\n            } else {\n              name = p.name;\n              config = p.options || {};\n              visible = 'visible' in config && typeof config.visible === 'boolean' ? config.visible : true;\n              delete config.visible;\n            }\n\n            var idx = pluginList.indexOf(name);\n\n            if (idx === -1) {\n              _log2.default.warning(\"\\u6CA1\\u6709 \\u2018\" + name + \"\\u2019 \\u8FD9\\u4E2A\\u63D2\\u4EF6\\uFF0C\\u8BF7\\u68C0\\u67E5\\u662F\\u5426\\u62FC\\u5199\\u9519\\u8BEF\");\n            } else {\n              if (visible) {\n                pluginList.splice(idx, 1);\n\n                _this5.installPlugin(name, config);\n              }\n            }\n          });\n        }\n      }\n\n      this.removeOrDisablePlugins(pluginList);\n    }\n  }, {\n    key: 'removeOrDisablePlugins',\n    value: function removeOrDisablePlugins(plugins) {\n      var _this6 = this;\n\n      if (plugins && plugins.length) {\n        plugins.forEach(function (p) {\n          if (p in _this6.pluginMap) {\n            // ControlBar has no 'hide' method\n            if (p === 'ControlBar') {\n              _this6.map.removeControl(_this6.pluginMap[p]);\n\n              delete _this6.pluginMap[p];\n            } else {\n              _this6.pluginMap[p].hide();\n            }\n          }\n        });\n      }\n    }\n  }, {\n    key: 'installPlugin',\n    value: function installPlugin(name, opts) {\n      opts = opts || {};\n\n      switch (name) {\n        case 'Scale':\n        case 'ToolBar':\n        case 'OverView':\n        case 'MapType':\n          this.setMapPlugin(name, opts);\n          break;\n\n        case 'ControlBar':\n          this.setControlBar(opts);\n          break;\n\n        default: // do nothing\n\n      }\n    }\n  }, {\n    key: 'setMapPlugin',\n    value: function setMapPlugin(name, opts) {\n      var _this7 = this;\n\n      if (this.pluginMap[name]) {\n        this.pluginMap[name].show();\n      } else {\n        var onCreated = opts.onCreated,\n            restOpts = _objectWithoutProperties(opts, ['onCreated']);\n\n        var initOpts = _extends({}, defaultOpts[name], restOpts);\n\n        this.map.plugin(['AMap.' + name], function () {\n          _this7.pluginMap[name] = new window.AMap[name](initOpts);\n\n          _this7.map.addControl(_this7.pluginMap[name]);\n\n          if ((0, _isFun2.default)(onCreated)) {\n            onCreated(_this7.pluginMap[name]);\n          }\n        });\n      }\n    }\n  }, {\n    key: 'setControlBar',\n    value: function setControlBar(opts) {\n      var _this8 = this;\n\n      if (this.pluginMap.ControlBar) {// do nothing\n      } else {\n        var onCreated = opts.onCreated,\n            restOpts = _objectWithoutProperties(opts, ['onCreated']);\n\n        var initOpts = _extends({}, defaultOpts.ControlBar, restOpts);\n\n        this.map.plugin(['AMap.ControlBar'], function () {\n          _this8.pluginMap.ControlBar = new window.AMap.ControlBar(initOpts);\n\n          _this8.map.addControl(_this8.pluginMap.ControlBar);\n\n          if ((0, _isFun2.default)(onCreated)) {\n            onCreated(_this8.pluginMap.ControlBar);\n          }\n        });\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this9 = this;\n\n      return _react2.default.createElement('div', {\n        style: wrapperStyle\n      }, _react2.default.createElement('div', {\n        ref: function ref(div) {\n          _this9.mapWrapper = div;\n        },\n        style: containerStyle\n      }, this.state.mapLoaded ? null : this.props.loading || null), _react2.default.createElement('div', null, this.state.mapLoaded ? this.renderChildren() : null));\n    }\n  }, {\n    key: 'instance',\n    get: function get() {\n      return this.map;\n    }\n  }]);\n\n  return BaseMap;\n}(Component);\n\nexports.default = (0, _withPropsReactive2.default)(BaseMap);","map":null,"metadata":{},"sourceType":"script"}