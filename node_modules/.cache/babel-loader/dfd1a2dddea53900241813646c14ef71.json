{"ast":null,"code":"import _slicedToArray from \"/Users/kong/Desktop/urban_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kong/Desktop/urban_react/src/pages/map.jsx\";\n\n/* jshint esversion: 6 */\nimport React, { useState } from 'react';\nimport { GoogleMap, Marker, useJsApiLoader } from '@react-google-maps/api'; // Import the functions you need from the SDKs you need\n\nimport firebase from \"firebase/compat\";\nimport axios from \"axios\";\nimport { Input } from \"antd\";\nvar Search = Input.Search;\n\nvar _React$useState = React.useState({\n  lat: 53.49332,\n  lng: -6.31718\n}),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    count = _React$useState2[0],\n    setCount = _React$useState2[1];\n\nvar _useJsApiLoader = useJsApiLoader({\n  id: 'google-map-script',\n  googleMapsApiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\"\n}),\n    isLoaded = _useJsApiLoader.isLoaded;\n\nvar containerStyle = {\n  width: '800px',\n  height: '400px'\n};\nvar myArr = [];\n\nvar query = function query(value) {\n  axios.get('https://maps.googleapis.com/maps/api/place/nearbysearch/json', {\n    params: {\n      key: 'AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c',\n      types: value === '' ? 'cafe' : value,\n      location: '53.26,-6.15',\n      radius: '100000'\n    }\n  }).then(function (response) {\n    var result = response.data.results;\n\n    for (var key in result) {\n      myArr.push(result[key].geometry.location);\n    }\n\n    for (var _key in myArr) {\n      var marker = new window.google.maps.Marker({\n        position: myArr[_key],\n        title: \"starting\"\n      });\n      marker.setMap(map);\n      console.log(myArr[_key]);\n      return isLoaded ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(GoogleMap, {\n        mapContainerStyle: containerStyle,\n        center: count,\n        zoom: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Marker, {\n        position: myArr[_key],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }\n      }))) : /*#__PURE__*/React.createElement(React.Fragment, null);\n    }\n  }).catch(function (error) {\n    console.log(error);\n  });\n};\n\nexport default function map() {\n  var firebaseConfig = {\n    apiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\",\n    authDomain: \"urban-computing-cb07c.firebaseapp.com\",\n    databaseURL: \"https://urban-computing-cb07c-default-rtdb.firebaseio.com\",\n    projectId: \"urban-computing-cb07c\",\n    storageBucket: \"urban-computing-cb07c.appspot.com\",\n    messagingSenderId: \"293478437107\",\n    appId: \"1:293478437107:web:4cd5199b68f68eac542786\",\n    measurementId: \"G-3Z5DD1SJYQ\"\n  };\n  React.useEffect(function () {\n    firebase.initializeApp(firebaseConfig);\n    firebase.database().ref('/').on('value', function (snap) {\n      var obj = snap.val();\n\n      if (obj !== null) {\n        for (var key in obj) {\n          if (key.split(',')[2] > '22 13:35:00') {\n            setCount(obj[key]);\n            console.log(obj[key]);\n          }\n        }\n      }\n    });\n  }, []);\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      map = _React$useState4[0],\n      setMap = _React$useState4[1];\n\n  var onLoad = function callback(map) {\n    // const bounds = new window.google.maps.LatLngBounds(count);\n    // map.fitBounds(bounds);\n    var marker1 = new window.google.maps.Marker({\n      position: count,\n      title: \"starting\"\n    });\n    axios.get('https://maps.googleapis.com/maps/api/place/nearbysearch/json', {\n      params: {\n        key: 'AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c',\n        types: 'dinner',\n        location: '53.26,-6.15',\n        radius: '100000'\n      }\n    }).then(function (response) {\n      var result = response.data.results;\n\n      for (var key in result) {\n        myArr.push(result[key].geometry.location);\n      }\n\n      for (var _key2 in myArr) {\n        var marker = new window.google.maps.Marker({\n          position: myArr[_key2]\n        });\n        marker.setMap(map);\n        console.log(myArr[_key2]);\n      }\n    });\n    console.log(count);\n    marker1.setMap(map);\n  };\n\n  return isLoaded ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: count,\n    zoom: 20,\n    onLoad: onLoad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginLeft: '5px',\n      fontWeight: 'bold',\n      marginTop: '10px',\n      color: '#0066FF'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, \"\\u641C\\u7D22\\u9644\\u8FD1\\u9910\\u996E\\u5E97:\"), /*#__PURE__*/React.createElement(Search, {\n    style: {\n      width: '330px',\n      marginLeft: '110px',\n      marginBottom: '5px',\n      marginTop: '-42px'\n    },\n    placeholder: \"input search text\",\n    onSearch: query,\n    enterButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 106\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null);\n}","map":{"version":3,"sources":["/Users/kong/Desktop/urban_react/src/pages/map.jsx"],"names":["React","useState","GoogleMap","Marker","useJsApiLoader","firebase","axios","Input","Search","lat","lng","count","setCount","id","googleMapsApiKey","isLoaded","containerStyle","width","height","myArr","query","value","get","params","key","types","location","radius","then","response","result","data","results","push","geometry","marker","window","google","maps","position","title","setMap","map","console","log","catch","error","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","useEffect","initializeApp","database","ref","on","snap","obj","val","split","onLoad","callback","marker1","marginLeft","fontWeight","marginTop","color","marginBottom"],"mappings":"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","sourcesContent":["/* jshint esversion: 6 */\n\nimport React, {useState} from 'react';\nimport {GoogleMap, Marker, useJsApiLoader} from '@react-google-maps/api';\n// Import the functions you need from the SDKs you need\nimport firebase from \"firebase/compat\";\nimport axios from \"axios\";\nimport {Input} from \"antd\";\nconst { Search } = Input;\n\n\n\nconst [count, setCount] =React.useState({lat: 53.49332, lng: -6.31718});\n\nconst { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\"\n});\nconst containerStyle = {\n    width: '800px',\n    height: '400px'\n};\n\nlet myArr=[];\n\nconst query= function(value:string){\n    axios.get('https://maps.googleapis.com/maps/api/place/nearbysearch/json', {\n        params: {\n            key: 'AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c',\n            types: value===''?'cafe':value,\n            location: '53.26,-6.15',\n            radius: '100000'\n        }\n    }).then(function (response) {\n        const result = response.data.results;\n        for (var key in result) {\n            myArr.push(result[key].geometry.location);\n        }\n        for(let key in myArr) {\n            const marker = new window.google.maps.Marker({\n                position: myArr[key],\n                title: \"starting\"\n            });\n            marker.setMap(map);\n            console.log(myArr[key]);\n            return isLoaded ?(\n                <div>\n                    <GoogleMap  mapContainerStyle={containerStyle}  center={count}  zoom={20} >\n                        <Marker  position={myArr[key]}/>\n                    </GoogleMap>\n                </div>\n            ): <></>\n        }\n    })\n        .catch(function (error) {\n            console.log(error);\n        });\n};\n\nexport default function map() {\n    const firebaseConfig = {\n        apiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\",\n        authDomain: \"urban-computing-cb07c.firebaseapp.com\",\n        databaseURL: \"https://urban-computing-cb07c-default-rtdb.firebaseio.com\",\n        projectId: \"urban-computing-cb07c\",\n        storageBucket: \"urban-computing-cb07c.appspot.com\",\n        messagingSenderId: \"293478437107\",\n        appId: \"1:293478437107:web:4cd5199b68f68eac542786\",\n        measurementId: \"G-3Z5DD1SJYQ\"\n    };\n\n    React.useEffect(()=>{\n            firebase.initializeApp(firebaseConfig);\n            firebase.database().ref('/').on('value',(snap)=> {\n                let obj = snap.val();\n                if (obj !== null) {\n                    for (var key in obj) {\n                        if(key.split(',')[2]>'22 13:35:00') {\n                            setCount(obj[key]);\n                            console.log(obj[key]);\n                        }\n                    }\n                }\n            });\n    },[]);\n\n\n\n    const [map, setMap] = React.useState(null);\n\n    const onLoad = function callback(map) {\n        // const bounds = new window.google.maps.LatLngBounds(count);\n        // map.fitBounds(bounds);\n        const marker1 = new window.google.maps.Marker({\n            position: count,\n            title: \"starting\"\n        });\n        axios.get('https://maps.googleapis.com/maps/api/place/nearbysearch/json', {\n            params: {\n                key: 'AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c',\n                types: 'dinner',\n                location: '53.26,-6.15',\n                radius: '100000'\n            }\n        }).then(function (response) {\n            const result = response.data.results;\n            for (var key in result) {\n                myArr.push(result[key].geometry.location);\n            }\n            for (let key in myArr) {\n                const marker = new window.google.maps.Marker({\n                    position: myArr[key],\n                });\n                marker.setMap(map);\n                console.log(myArr[key]);\n            }\n        });\n        console.log(count);\n        marker1.setMap(map);\n    };\n\n\n    return isLoaded ? (\n        <div>\n            <GoogleMap  mapContainerStyle={containerStyle}  center={count}  zoom={20}  onLoad={onLoad}> </GoogleMap>\n            <p style={{marginLeft:'5px',fontWeight:'bold',marginTop:'10px',color:'#0066FF'}}>搜索附近餐饮店:</p><Search style={{width:'330px',marginLeft:'110px',marginBottom:'5px',marginTop:'-42px'}} placeholder=\"input search text\" onSearch={query}   enterButton />\n        </div>\n    ) : <></>\n}\n"]},"metadata":{},"sourceType":"module"}