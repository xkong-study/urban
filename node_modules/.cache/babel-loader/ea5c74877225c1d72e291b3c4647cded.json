{"ast":null,"code":"var _jsxFileName = \"/Users/kong/Desktop/urban_react/src/pages/Register.jsx\";\n\n/* jshint esversion: 6 */\nimport React from 'react';\nimport login from \"../assets/login.png\";\nimport { Button, Form, Input } from \"antd\";\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { RegisterApi } from './request/api';\nexport default function Register() {\n  var navigate = useNavigate();\n\n  var onFinish = function onFinish(values) {\n    console.log('Success:', values);\n    setTimeout(function () {\n      return navigate('/login');\n    }, 1500);\n    RegisterApi({\n      username: values.username,\n      password: values.password\n    }).then(function (res) {\n      console.log(res);\n      setTimeout(function () {\n        return navigate('/login');\n      }, 1500);\n    });\n  };\n\n  var onFinishFailed = function onFinishFailed(errorInfo) {\n    console.log('Failed:', errorInfo);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login_box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: login,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form, {\n    name: \"basic\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"\\u7528\\u6237\\u540D\",\n    name: \"username\",\n    placeholder: \"\\u8BF7\\u8F93\\u5165\\u7528\\u6237\\u540D\",\n    rules: [{\n      required: true,\n      message: 'Please input your username!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 40\n      }\n    }),\n    placeholder: \"\\u8BF7\\u8F93\\u5165\\u7528\\u6237\\u540D\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"\\u7528\\u6237\\u5BC6\\u7801\",\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: 'Please input your password!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 49\n      }\n    }),\n    placeholder: \"\\u8BF7\\u8F93\\u5165\\u5BC6\\u7801\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"confirm\",\n    label: \"\\u786E\\u8BA4\\u5BC6\\u7801\",\n    dependencies: ['password'],\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: 'Please confirm your password!'\n    }, function (_ref) {\n      var getFieldValue = _ref.getFieldValue;\n      return {\n        validator: function validator(_, value) {\n          if (!value || getFieldValue('password') === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject(new Error('The two passwords that you entered do not match!'));\n        }\n      };\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 49\n      }\n    }),\n    placeholder: \"\\u8BF7\\u518D\\u6B21\\u8F93\\u5165\\u5BC6\\u7801\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, \"\\u6CE8\\u518C\\u5B8C\\u6BD5,\\u56DE\\u5230\\u767B\\u5F55\\u9875\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, \"\\u7ACB\\u5373\\u6CE8\\u518C\"))));\n}","map":{"version":3,"sources":["/Users/kong/Desktop/urban_react/src/pages/Register.jsx"],"names":["React","login","Button","Form","Input","LockOutlined","UserOutlined","Link","useNavigate","RegisterApi","Register","navigate","onFinish","values","console","log","setTimeout","username","password","then","res","onFinishFailed","errorInfo","remember","required","message","getFieldValue","validator","_","value","Promise","resolve","reject","Error"],"mappings":"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","sourcesContent":["/* jshint esversion: 6 */\nimport React from 'react';\nimport login from \"../assets/login.png\";\nimport {Button, Form, Input} from \"antd\";\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\";\nimport {Link,useNavigate} from \"react-router-dom\";\nimport {RegisterApi} from './request/api';\nexport default function Register(){\n    const navigate=useNavigate();\n    const onFinish = (values) => {\n        console.log('Success:', values);\n        setTimeout(()=>navigate('/login'),1500)\n        RegisterApi({\n            username:values.username,\n            password:values.password\n        }).then(res=>{\n          console.log(res)\n          setTimeout(()=>navigate('/login'),1500)\n        })\n    };\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n    };\n    return(\n        <div className=\"login\">\n            <div className=\"login_box\">\n                <div className=\"picture\">\n                    <img src={login} alt=\"\"/>\n                </div>\n                <Form\n                    name=\"basic\"\n                    initialValues={{\n                        remember: true,\n                    }}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                >\n                    <Form.Item\n                        label=\"用户名\"\n                        name=\"username\"\n                        placeholder=\"请输入用户名\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your username!',\n                            },\n                        ]}\n                    >\n                        <Input prefix={<UserOutlined/>} placeholder=\"请输入用户名\"/>\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"用户密码\"\n                        name=\"password\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your password!',\n                            },\n                        ]}\n                    >\n                        <Input.Password prefix={<LockOutlined/>} placeholder=\"请输入密码\"/>\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"confirm\"\n                        label=\"确认密码\"\n                        dependencies={['password']}\n                        hasFeedback\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please confirm your password!',\n                            },\n                            ({ getFieldValue }) => ({\n                                validator(_, value) {\n                                    if (!value || getFieldValue('password') === value) {\n                                        return Promise.resolve();\n                                    }\n\n                                    return Promise.reject(new Error('The two passwords that you entered do not match!'));\n                                },\n                            }),\n                        ]}\n                    >\n                        <Input.Password prefix={<LockOutlined/>} placeholder=\"请再次输入密码\"/>\n                    </Form.Item>\n                    <Form.Item>\n                        <Link to='/login'>注册完毕,回到登录页</Link>\n                    </Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" block>立即注册</Button>\n                </Form>\n            </div>\n        </div>\n    )\n\n}\n"]},"metadata":{},"sourceType":"module"}