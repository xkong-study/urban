{"ast":null,"code":"var _jsxFileName = \"/Users/kong/Desktop/game-cloud-frontend/src/pages/Means.jsx\";\nimport { DislikeFilled, DislikeOutlined, LikeFilled, LikeOutlined } from '@ant-design/icons';\nimport React, { createElement, useState } from 'react';\nimport { Avatar, Comment, Tooltip, Button, Form, Input, List } from 'antd';\nimport moment from 'moment';\nvar TextArea = Input.TextArea;\nexport default function Means() {\n  var _this = this;\n\n  var ExampleComment = function ExampleComment(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/React.createElement(Comment, {\n      actions: [/*#__PURE__*/React.createElement(\"span\", {\n        key: \"comment-nested-reply-to\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 23\n        }\n      }, \"Reply to\")],\n      author: /*#__PURE__*/React.createElement(\"a\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }\n      }, \"Han Solo\"),\n      avatar: /*#__PURE__*/React.createElement(Avatar, {\n        src: \"https://joeschmoe.io/api/v1/random\",\n        alt: \"Han Solo\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }\n      }),\n      content: /*#__PURE__*/React.createElement(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }\n      }, \"We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure).\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }\n    }, children);\n  };\n} //    const [likes, setLikes] = useState(0);\n//    const [dislikes, setDislikes] = useState(0);\n//    const [action, setAction] = useState(null);\n//\n//    const like = () => {\n//        setLikes(1);\n//        setDislikes(0);\n//        setAction('liked');\n//    };\n//\n//    const dislike = () => {\n//        setLikes(0);\n//        setDislikes(1);\n//        setAction('disliked');\n//    };\n//\n//    const CommentList = ({ comments }) => (\n//        <List\n//            dataSource={comments}\n//            header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\n//            itemLayout=\"horizontal\"\n//            renderItem={(props) => <Comment {...props} />}\n//        />\n//    );\n//\n//    const Editor = ({ onChange, onSubmit, submitting, value }) => (\n//        <>\n//            <Form.Item>\n//                <TextArea rows={4} onChange={onChange} value={value} />\n//            </Form.Item>\n//            <Form.Item>\n//                <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit} type=\"primary\">\n//                    Add Comment\n//                </Button>\n//            </Form.Item>\n//        </>\n//    );\n//\n//    const actions = [\n//        <Tooltip key=\"comment-basic-like\" title=\"Like\">\n//      <span onClick={like}>\n//        {createElement(action === 'liked' ? LikeFilled : LikeOutlined)}\n//          <span className=\"comment-action\">{likes}</span>\n//      </span>\n//        </Tooltip>,\n//        <Tooltip key=\"comment-basic-dislike\" title=\"Dislike\">\n//      <span onClick={dislike}>\n//        {React.createElement(action === 'disliked' ? DislikeFilled : DislikeOutlined)}\n//          <span className=\"comment-action\">{dislikes}</span>\n//      </span>\n//        </Tooltip>,\n//        <span key=\"comment-basic-reply-to\">Reply to</span>,\n//    ];\n//\n//    const [comments, setComments] = useState([]);\n//    const [submitting, setSubmitting] = useState(false);\n//    const [value, setValue] = useState('');\n//\n//    const handleSubmit = () => {\n//        if (!value) return;\n//        setSubmitting(true);\n//        setTimeout(() => {\n//            setSubmitting(false);\n//            setValue('');\n//            setComments([\n//                ...comments,\n//                {\n//                    author: 'Han Solo',\n//                    avatar: 'https://joeschmoe.io/api/v1/random',\n//                    content: <p>{value}</p>,\n//                    datetime: moment().fromNow(),\n//                },\n//            ]);\n//        }, 1000);\n//    };\n//\n//    const handleChange = (e) => {\n//        setValue(e.target.value);\n//    };\n//    return (\n//        <>\n//            <Comment\n//                actions={actions}\n//                author={<a>Han Solo</a>}\n//                avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" alt=\"Han Solo\"/>}\n//                content={\n//                    <p>\n//                        We supply a series of design principles, practical patterns and high quality design\n//                        resources (Sketch and Axure), to help people create their product prototypes beautifully\n//                        and efficiently.\n//                    </p>\n//                }\n//                datetime={\n//                    <Tooltip title={moment().format('YYYY-MM-DD HH:mm:ss')}>\n//                        <span>{moment().fromNow()}</span>\n//                    </Tooltip>\n//                }\n//            />\n//            <Comment\n//                actions={actions}\n//                author={<a>Han Solo</a>}\n//                avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" alt=\"Han Solo\"/>}\n//                content={\n//                    <p>\n//                        We supply a series of design principles, practical patterns and high quality design\n//                        resources (Sketch and Axure), to help people create their product prototypes beautifully\n//                        and efficiently.\n//                    </p>\n//                }\n//                datetime={\n//                    <Tooltip title={moment().format('YYYY-MM-DD HH:mm:ss')}>\n//                        <span>{moment().fromNow()}</span>\n//                    </Tooltip>\n//                }\n//            />\n//            <Comment\n//                actions={actions}\n//                author={<a>Han Solo</a>}\n//                avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" alt=\"Han Solo\"/>}\n//                content={\n//                    <p>\n//                        We supply a series of design principles, practical patterns and high quality design\n//                        resources (Sketch and Axure), to help people create their product prototypes beautifully\n//                        and efficiently.\n//                    </p>\n//                }\n//                datetime={\n//                    <Tooltip title={moment().format('YYYY-MM-DD HH:mm:ss')}>\n//                        <span>{moment().fromNow()}</span>\n//                    </Tooltip>\n//                }\n//            />\n//            <Comment\n//                actions={actions}\n//                author={<a>Han Solo</a>}\n//                avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" alt=\"Han Solo\"/>}\n//                content={\n//                    <p>\n//                        We supply a series of design principles, practical patterns and high quality design\n//                        resources (Sketch and Axure), to help people create their product prototypes beautifully\n//                        and efficiently.\n//                    </p>\n//                }\n//                datetime={\n//                    <Tooltip title={moment().format('YYYY-MM-DD HH:mm:ss')}>\n//                        <span>{moment().fromNow()}</span>\n//                    </Tooltip>\n//                }\n//            />\n//            {comments.length > 0 && <CommentList comments={comments} />}\n//            <Comment\n//                avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" alt=\"Han Solo\" />}\n//                content={\n//                    <Editor\n//                        onChange={handleChange}\n//                        onSubmit={handleSubmit}\n//                        submitting={submitting}\n//                        value={value}\n//                    />\n//                }\n//             />\n//        </>\n//    );\n// }","map":{"version":3,"sources":["/Users/kong/Desktop/game-cloud-frontend/src/pages/Means.jsx"],"names":["DislikeFilled","DislikeOutlined","LikeFilled","LikeOutlined","React","createElement","useState","Avatar","Comment","Tooltip","Button","Form","Input","List","moment","TextArea","Means","ExampleComment","children"],"mappings":";AAAA,SAASA,aAAT,EAAwBC,eAAxB,EAAyCC,UAAzC,EAAqDC,YAArD,QAAyE,mBAAzE;AACA,OAAOC,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,OAA1B,EAAmCC,MAAnC,EAA2CC,IAA3C,EAAiDC,KAAjD,EAAwDC,IAAxD,QAAoE,MAApE;AACA,OAAOC,MAAP,MAAmB,QAAnB;IACQC,Q,GAAaH,K,CAAbG,Q;AAER,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC5B,MAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,QAAGC,QAAH,QAAGA,QAAH;AAAA,wBACnB,oBAAC,OAAD;AACI,MAAA,OAAO,EAAE,cAAC;AAAM,QAAA,GAAG,EAAC,yBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAD,CADb;AAEI,MAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFZ;AAGI,MAAA,MAAM,eAAE,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAC,oCAAZ;AAAiD,QAAA,GAAG,EAAC,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHZ;AAII,MAAA,OAAO,eACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6HALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWKA,QAXL,CADmB;AAAA,GAAvB;AAesourcesContent":["import { DislikeFilled, DislikeOutlined, LikeFilled, LikeOutlined } from '@ant-design/icons';\nimport React, { createElement, useState } from 'react';\nimport { Avatar, Comment, Tooltip, Button, Form, Input, List } from 'antd';\nimport moment from 'moment';\nconst { TextArea } = Input;\n\nexport default function Means() {\n    const ExampleComment = ({ children }) => (\n        <Comment\n            actions={[<span key=\"comment-nested-reply-to\">Reply to</span>]}\n            author={<a>Han Solo</a>}\n            avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" alt=\"Han Solo\" />}\n            content={\n                <p>\n                    We supply a series of design principles, practical patterns and high quality design\n                    resources (Sketch and Axure).\n                </p>\n            }\n        >\n            {children}\n        </Comment>\n    );\n}\n //    const [likes, setLikes] = useState(0);\n //    const [dislikes, setDislikes] = useState(0);\n //    const [action, setAction] = useState(null);\n //\n //    const like = () => {\n //        setLikes(1);\n //        setDislikes(0);\n //        setAction('liked');\n //    };\n //\n //    const dislike = () => {\n //        setLikes(0);\n //        setDislikes(1);\n //        setAction('disliked');\n //    };\n //\n //    const CommentList = ({ comments }) => (\n //        <List\n //            dataSource={comments}\n //            header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\n //            itemLayout=\"horizontal\"\n //            renderItem={(props) => <Comment {...props} />}\n //        />\n //    );\n //\n //    const Editor = ({ onChange, onSubmit, submitting, value }) => (\n //        <>\n //            <Form.Item>\n //                <TextArea rows={4} onChange={onChange} value={value} />\n //            </Form.Item>\n //            <Form.Item>\n //                <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit} type=\"primary\">\n //                    Add Comment\n //                </Button>\n //            </Form.Item>\n //        </>\n //    );\n //\n //    const actions = [\n //        <Tooltip key=\"comment-basic-like\" title=\"Like\">\n //      <span onClick={like}>\n //        {createElement(action === 'liked' ? LikeFilled : LikeOutlined)}\n //          <span className=\"comment-action\">{likes}</span>\n //      </span>\n //        </Tooltip>,\n //        <Tooltip key=\"comment-basic-dislike\" title=\"Dislike\">\n //      <span onClick={dislike}>\n //        {React.createElement(action === 'disliked' ? DislikeFilled : DislikeOutlined)}\n //          <span className=\"comment-action\">{dislikes}</span>\n //      </span>\n //        </Tooltip>,\n //        <span key=\"comment-basic-reply-to\">Reply to</span>,\n //    ];\n //\n //    const [comments, setComments] = useState([]);\n //    const [submitting, setSubmitting] = useState(false);\n //    const [value, setValue] = useState('');\n //\n //    const handleSubmit = () => {\n //        if (!value) return;\n //        setSubmitting(true);\n //        setTimeout(() => {\n //            setSubmitting(false);\n //            setValue('');\n //            setComments([\n //                ...comments,\n //                {\n //                    author: 'Han Solo',\n //                    avatar: 'https://joeschmoe.io/api/v1/random',\n //                    content: <p>{value}</p>,\n //                    datetime: moment().fromNow(),\n //                },\n //            ]);\n //        }, 1000);\n //    };\n //\n //    const handleChange = (e) => {\n //        setValue(e.target.value);\n //    };\n //    return (\n //        <>\n //            <Comment\n //                actions={actions}\n //                author={<a>Han Solo</a>}\n //                avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" alt=\"Han Solo\"/>}\n //                content={\n //                    <p>\n //                        We supply a series of design principles, practical patterns and high quality design\n //                        resources (Sketch and Axure), to help people create their product prototypes beautifully\n //                        and efficiently.\n //                    </p>\n //                }\n //                datetime={\n //                    <Tooltip title={moment().format('YYYY-MM-DD HH:mm:ss')}>\n //                        <span>{moment().fromNow()}</span>\n //                    </Tooltip>\n //                }\n //            />\n //            <Comment\n //                actions={actions}\n //                author={<a>Han Solo</a>}\n //                avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" alt=\"Han Solo\"/>}\n //                content={\n //                    <p>\n //                        We supply a series of design principles, practical patterns and high quality design\n //                        resources (Sketch and Axure), to help people create their product prototypes beautifully\n //                        and efficiently.\n //                    </p>\n //                }\n //                datetime={\n //                    <Tooltip title={moment().format('YYYY-MM-DD HH:mm:ss')}>\n //                        <span>{moment().fromNow()}</span>\n //                    </Tooltip>\n //                }\n //            />\n //            <Comment\n //                actions={actions}\n //                author={<a>Han Solo</a>}\n //                avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" alt=\"Han Solo\"/>}\n //                content={\n //                    <p>\n //                        We supply a series of design principles, practical patterns and high quality design\n //                        resources (Sketch and Axure), to help people create their product prototypes beautifully\n //                        and efficiently.\n //                    </p>\n //                }\n //                datetime={\n //                    <Tooltip title={moment().format('YYYY-MM-DD HH:mm:ss')}>\n //                        <span>{moment().fromNow()}</span>\n //                    </Tooltip>\n //                }\n //            />\n //            <Comment\n //                actions={actions}\n //                author={<a>Han Solo</a>}\n //                avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" alt=\"Han Solo\"/>}\n //                content={\n //                    <p>\n //                        We supply a series of design principles, practical patterns and high quality design\n //                        resources (Sketch and Axure), to help people create their product prototypes beautifully\n //                        and efficiently.\n //                    </p>\n //                }\n //                datetime={\n //                    <Tooltip title={moment().format('YYYY-MM-DD HH:mm:ss')}>\n //                        <span>{moment().fromNow()}</span>\n //                    </Tooltip>\n //                }\n //            />\n //            {comments.length > 0 && <CommentList comments={comments} />}\n //            <Comment\n //                avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" alt=\"Han Solo\" />}\n //                content={\n //                    <Editor\n //                        onChange={handleChange}\n //                        onSubmit={handleSubmit}\n //                        submitting={submitting}\n //                        value={value}\n //                    />\n //                }\n //             />\n //        </>\n //    );\n // }\n"]},"metadata":{},"sourceType":"module"}