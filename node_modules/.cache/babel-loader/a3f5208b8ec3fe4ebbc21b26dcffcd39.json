{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _log = require('../utils/log');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _isFun = require('../utils/isFun');\n\nvar _isFun2 = _interopRequireDefault(_isFun);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CircleEditor = function (_React$Component) {\n  _inherits(CircleEditor, _React$Component);\n\n  function CircleEditor(props) {\n    _classCallCheck(this, CircleEditor);\n\n    var _this = _possibleConstructorReturn(this, (CircleEditor.__proto__ || Object.getPrototypeOf(CircleEditor)).call(this, props));\n\n    if (typeof window !== 'undefined') {\n      if (!(props.__map__ && props.__circle__)) {\n        _log2.default.warning('CIRCLE_INSTANCE_REQUIRED');\n      } else {\n        _this.map = props.__map__;\n        _this.element = _this.map.getContainer();\n        _this.circle = props.__circle__;\n        _this.editorActive = false;\n\n        _this.onPropsUpdate(props);\n      }\n    }\n\n    return _this;\n  }\n\n  _createClass(CircleEditor, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.map) {\n        this.onPropsUpdate(nextProps);\n      }\n    }\n  }, {\n    key: 'onPropsUpdate',\n    value: function onPropsUpdate(props) {\n      if ('active' in props && props.active === false) {\n        this.toggleActive(false, props);\n      } else {\n        this.toggleActive(true, props);\n      }\n    }\n  }, {\n    key: 'toggleActive',\n    value: function toggleActive(active, props) {\n      if (active) {\n        if (!this.editorActive) {\n          this.activeEditor(props);\n        }\n      } else {\n        if (this.editorActive) {\n          this.inactiveEditor();\n        }\n      }\n    }\n  }, {\n    key: 'activeEditor',\n    value: function activeEditor(props) {\n      var _this2 = this;\n\n      this.loadCircleEditor(props).then(function (editor) {\n        _this2.editorActive = true;\n        editor.open();\n      });\n    }\n  }, {\n    key: 'inactiveEditor',\n    value: function inactiveEditor() {\n      this.editorActive = false;\n\n      if (this.circleEditor) {\n        this.circleEditor.close();\n      }\n    }\n  }, {\n    key: 'loadCircleEditor',\n    value: function loadCircleEditor(props) {\n      var _this3 = this;\n\n      if (this.circleEditor) {\n        return Promise.resolve(this.circleEditor);\n      }\n\n      return new Promise(function (resolve) {\n        _this3.map.plugin(['AMap.CircleEditor'], function () {\n          resolve(_this3.createEditorInstance(props));\n        });\n      });\n    }\n  }, {\n    key: 'createEditorInstance',\n    value: function createEditorInstance(props) {\n      this.circleEditor = new window.AMap.CircleEditor(this.map, this.circle);\n      var events = this.exposeEditorInstance(props);\n      events && this.bindEditorEvents(events);\n      return this.circleEditor;\n    }\n  }, {\n    key: 'exposeEditorInstance',\n    value: function exposeEditorInstance(props) {\n      if ('events' in props) {\n        var _events = props.events || {};\n\n        if ((0, _isFun2.default)(_events.created)) {\n          _events.created(this.circleEditor);\n        }\n\n        delete _events.created;\n        return _events;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'bindEditorEvents',\n    value: function bindEditorEvents(events) {\n      var _this4 = this;\n\n      var list = Object.keys(events);\n      list.length && list.forEach(function (evName) {\n        _this4.circleEditor.on(evName, events[evName]);\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return CircleEditor;\n}(_react2.default.Component);\n\nexports.default = CircleEditor;","map":null,"metadata":{},"sourceType":"script"}