{"ast":null,"code":"import _toConsumableArray from \"/Users/kong/Desktop/game-cloud-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/kong/Desktop/game-cloud-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kong/Desktop/game-cloud-frontend/src/pages/Means.jsx\";\nimport { DislikeFilled, DislikeOutlined, LikeFilled, LikeOutlined } from '@ant-design/icons';\nimport React, { createElement, useEffect, useState } from 'react';\nimport { Avatar, Comment, Tooltip, Button, Form, Input, List } from 'antd';\nimport moment from 'moment';\nimport { message } from 'antd';\nimport VirtualList from 'rc-virtual-list';\nimport { ArticleListApi, GetCommentDataApi } from \"./request/api\";\nvar TextArea = Input.TextArea;\nvar fakeDataUrl = '';\nvar ContainerHeight = 400;\nexport default function Means() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      comments = _useState2[0],\n      setComments = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      submitting = _useState4[0],\n      setSubmitting = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      value = _useState6[0],\n      setValue = _useState6[1];\n\n  console.log(value);\n  useEffect(function () {\n    ArticleListApi().then(function (res) {\n      var newArr = JSON.parse(JSON.stringify(res)); //深拷贝\n\n      var myarr = []; //用来获取自己想要的属性\n\n      newArr.map(function (item) {\n        var obj = {\n          id: item.id,\n          author: item.author,\n          comments: item.text,\n          value: item.value\n        };\n        myarr.push(obj);\n      });\n      setValue(myarr[Object.keys(myarr)[0]].value);\n    });\n  }, []);\n\n  var CommentList = function CommentList(_ref) {\n    var comments = _ref.comments;\n    return /*#__PURE__*/React.createElement(List, {\n      dataSource: comments,\n      header: \"\".concat(comments.length, \" \").concat(comments.length > 1 ? 'replies' : 'reply'),\n      itemLayout: \"horizontal\",\n      renderItem: function renderItem(props) {\n        return /*#__PURE__*/React.createElement(Comment, Object.assign({}, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 36\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    });\n  };\n\n  var Editor = function Editor(_ref2) {\n    var onChange = _ref2.onChange,\n        onSubmit = _ref2.onSubmit,\n        submitting = _ref2.submitting,\n        value = _ref2.value;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Item, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextArea, {\n      rows: 4,\n      onChange: onChange,\n      value: value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      htmlType: \"submit\",\n      loading: submitting,\n      onClick: onSubmit,\n      type: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"Add Comment\")));\n  };\n\n  var handleSubmit = function handleSubmit() {\n    var params = {\n      id: '1'\n    };\n    console.log(params);\n    GetCommentDataApi({\n      params: params\n    }).then(function (response) {\n      console.log(response);\n      window.location.reload();\n      if (!value) return;\n      setSubmitting(true);\n      setTimeout(function () {\n        setSubmitting(false);\n        setValue('');\n        setComments([].concat(_toConsumableArray(comments), [{\n          author: response.author,\n          avatar: 'https://joeschmoe.io/api/v1/random',\n          content: response.content,\n          datetime: moment().fromNow()\n        }]));\n        console.log(comments);\n      }, 1000);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var handleChange = function handleChange(e) {\n    setValue(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, comments.length > 0 && /*#__PURE__*/React.createElement(CommentList, {\n    comments: comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Comment, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: \"https://joeschmoe.io/api/v1/random\",\n      alt: \"Han Solo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }),\n    content: /*#__PURE__*/React.createElement(Editor, {\n      onChange: handleChange,\n      onSubmit: handleSubmit,\n      submitting: submitting,\n      value: comments.author,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }));\n}\n;","map":{"version":3,"sources":["/Users/kong/Desktop/game-cloud-frontend/src/pages/Means.jsx"],"names":["DislikeFilled","DislikeOutlined","LikeFilled","LikeOutlined","React","createElement","useEffect","useState","Avatar","Comment","Tooltip","Button","Form","Input","List","moment","message","VirtualList","ArticleListApi","GetCommentDataApi","TextArea","fakeDataUrl","ContainerHeight","Means","comments","setComments","submitting","setSubmitting","value","setValue","console","log","then","res","newArr","JSON","parse","stringify","myarr","map","item","obj","id","author","text","push","Object","keys","CommentList","length","props","Editor","onChange","onSubmit","handleSubmit","params","response","window","location","reload","setTimeout","avatar","content","datetime","fromNow","catch","error","handleChange","e","target"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,eAAxB,EAAyCC,UAAzC,EAAqDC,YAArD,QAAyE,mBAAzE;AACA,OAAOC,KAAP,IAAeC,aAAf,EAA8BC,SAA9B,EAAyCC,QAAzC,QAAwD,OAAxD;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,OAA1B,EAAmCC,MAAnC,EAA2CC,IAA3C,EAAiDC,KAAjD,EAAwDC,IAAxD,QAAoE,MAApE;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,SAAQC,cAAR,EAAwBC,iBAAxB,QAAgD,eAAhD;IACQC,Q,GAAaP,K,CAAbO,Q;AACR,IAAMC,WAAW,GACb,EADJ;AAEA,IAAMC,eAAe,GAAG,GAAxB;AACA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAAA,kBACIhB,QAAQ,CAAC,EAAD,CADZ;AAAA;AAAA,MACrBiB,QADqB;AAAA,MACXC,WADW;;AAAA,mBAEQlB,QAAQ,CAAC,KAAD,CAFhB;AAAA;AAAA,MAErBmB,UAFqB;AAAA,MAETC,aAFS;;AAAA,mBAGFpB,QAAQ,CAAC,EAAD,CAHN;AAAA;AAAA,MAGrBqB,KAHqB;AAAA,MAGdC,QAHc;;AAI5BC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAtB,EAAAA,SAAS,CAAC,YAAI;AACVY,IAAAA,cAAc,GAAGc,IAAjB,CAAsB,UAAAC,GAAG,EAAG;AACxB,UAAIC,MAAM,GAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,GAAf,CAAX,CAAX,CADwB,CACmB;;AAC3C,UAAIK,KAAK,GAAC,EAAV,CAFwB,CAEZ;;AACZJ,MAAAA,MAAM,CAACK,GAAP,CAAW,UAAAC,IAAI,EAAE;AACb,YAAIC,GAAG,GAAE;AACLC,UAAAA,EAAE,EAAGF,IAAI,CAACE,EADL;AAELC,UAAAA,MAAM,EAAEH,IAAI,CAACG,MAFR;AAGLnB,UAAAA,QAAQ,EAACgB,IAAI,CAACI,IAHT;AAILhB,UAAAA,KAAK,EAACY,IAAI,CAACZ;AAJN,SAAT;AAMAU,QAAAA,KAAK,CAACO,IAAN,CAAWJ,GAAX;AACH,OARD;AASAZ,MAAAA,QAAQ,CAACS,KAAK,CAACQ,MAAM,CAACC,IAAP,CAAYT,KAAZ,EAAmB,CAAnB,CAAD,CAAL,CAA6BV,KAA9B,CAAR;AACH,KAbD;AAcH,GAfQ,EAeP,EAfO,CAAT;;AAiBA,MAAMoB,WAAW,GAAG,SAAdA,WAAc;AAAA,QAAGxB,QAAH,QAAGA,QAAH;AAAA,wBAChB,oBAAC,IAAD;AACI,MAAA,UAAU,EAAEA,QADhB;AAEI,MAAA,MAAM,YAAKA,QAAQ,CAACyB,MAAd,cAAwBzB,QAAQ,CAACyB,MAAT,GAAkB,CAAlB,GAAsB,SAAtB,GAAkC,OAA1D,CAFV;AAGI,MAAA,UAAU,EAAC,YAHf;AAII,MAAA,UAAU,EAAE,oBAACC,KAAD;AAAA,4BAAW,oBAAC,OAAD,oBAAaA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAX;AAAA,OAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADgB;AAAA,GAApB;;AASA,MAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,QAAGC,QAAH,SAAGA,QAAH;AAAA,QAAaC,QAAb,SAAaA,QAAb;AAAA,QAAuB3B,UAAvB,SAAuBA,UAAvB;AAAA,QAAmCE,KAAnC,SAAmCA,KAAnC;AAAA,wBACX,uDACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,CAAhB;AAAmB,MAAA,QAAQ,EAAEwB,QAA7B;AAAuC,MAAA,KAAK,EAAExB,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAII,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAC,QAAjB;AAA0B,MAAA,OAAO,EAAEF,UAAnC;AAA+C,MAAA,OAAO,EAAE2B,QAAxD;AAAkE,MAAA,IAAI,EAAC,SAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CAJJ,CADW;AAAA,GAAf;;AAaA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB,QAAIC,MAAM,GAAG;AACTb,MAAAA,EAAE,EAAE;AADK,KAAb;AAGAZ,IAAAA,OAAO,CAACC,GAAR,CAAYwB,MAAZ;AACApC,IAAAA,iBAAiB,CAAC;AAACoC,MAAAA,MAAM,EAANA;AAAD,KAAD,CAAjB,CAA4BvB,IAA5B,CAAiC,UAAUwB,QAAV,EAAoB;AACjD1B,MAAAA,OAAO,CAACC,GAAR,CAAYyB,QAAZ;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACA,UAAI,CAAC/B,KAAL,EAAY;AACZD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAiC,MAAAA,UAAU,CAAC,YAAM;AACbjC,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAJ,QAAAA,WAAW,8BACJD,QADI,IAEP;AACImB,UAAAA,MAAM,EAAEa,QAAQ,CAACb,MADrB;AAEIkB,UAAAA,MAAM,EAAE,oCAFZ;AAGIC,UAAAA,OAAO,EAAEN,QAAQ,CAACM,OAHtB;AAIIC,UAAAA,QAAQ,EAAEhD,MAAM,GAAGiD,OAAT;AAJd,SAFO,GAAX;AASAlC,QAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACH,OAbS,EAaP,IAbO,CAAV;AAcH,KAnBD,EAoBKyC,KApBL,CAoBW,UAAUC,KAAV,EAAiB;AACpBpC,MAAAA,OAAO,CAACC,GAAR,CAAYmC,KAAZ;AACH,KAtBL;AAuBH,GA5BD;;AA8BA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AACxBvC,IAAAA,QAAQ,CAACuC,CAAC,CAACC,MAAF,CAASzC,KAAV,CAAR;AACH,GAFD;;AAGA,sBACI,0CACKJ,QAAQ,CAACyB,MAAT,GAAkB,CAAlB,iBAAuB,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAEzB,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD5B,eAEI,oBAAC,OAAD;AACI,IAAA,MAAM,eAAE,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAC,oCAAZ;AAAiD,MAAA,GAAG,EAAC,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADZ;AAEI,IAAA,OAAO,eACH,oBAAC,MAAD;AACI,MAAA,QAAQ,EAAE2C,YADd;AAEI,MAAA,QAAQ,EAAEb,YAFd;AAGI,MAAA,UAAU,EAAE5B,UAHhB;AAII,MAAA,KAAK,EAAEF,QAAQ,CAACmB,MAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAgBH;AAAA","sourcesContent":["import { DislikeFilled, DislikeOutlined, LikeFilled, LikeOutlined } from '@ant-design/icons';\nimport React, {createElement, useEffect, useState} from 'react';\nimport { Avatar, Comment, Tooltip, Button, Form, Input, List } from 'antd';\nimport moment from 'moment';\nimport { message } from 'antd';\nimport VirtualList from 'rc-virtual-list';\nimport {ArticleListApi, GetCommentDataApi} from \"./request/api\";\nconst { TextArea } = Input;\nconst fakeDataUrl =\n    '';\nconst ContainerHeight = 400;\nexport default function Means() {\n    const [comments, setComments] = useState([]);\n    const [submitting, setSubmitting] = useState(false);\n    const [value, setValue] = useState('');\n    console.log(value)\n    useEffect(()=>{\n        ArticleListApi().then(res=> {\n            let newArr=JSON.parse(JSON.stringify(res));//深拷贝\n            let myarr=[]//用来获取自己想要的属性\n            newArr.map(item=>{\n                let obj= {\n                    id : item.id,\n                    author :item.author,\n                    comments:item.text,\n                    value:item.value\n                }\n                myarr.push(obj);\n            })\n            setValue(myarr[Object.keys(myarr)[0]].value)\n        })\n    },[])\n\n    const CommentList = ({ comments }) => (\n        <List\n            dataSource={comments}\n            header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\n            itemLayout=\"horizontal\"\n            renderItem={(props) => <Comment {...props} />}\n        />\n    );\n\n    const Editor = ({ onChange, onSubmit, submitting, value }) => (\n        <>\n            <Form.Item>\n                <TextArea rows={4} onChange={onChange} value={value} />\n            </Form.Item>\n            <Form.Item>\n                <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit} type=\"primary\">\n                    Add Comment\n                </Button>\n            </Form.Item>\n        </>\n    );\n\n    const handleSubmit = () => {\n        let params = {\n            id: '1',\n        }\n        console.log(params)\n        GetCommentDataApi({params}).then(function (response) {\n            console.log(response);\n            window.location.reload()\n            if (!value) return;\n            setSubmitting(true);\n            setTimeout(() => {\n                setSubmitting(false);\n                setValue('');\n                setComments([\n                    ...comments,\n                    {\n                        author: response.author,\n                        avatar: 'https://joeschmoe.io/api/v1/random',\n                        content: response.content,\n                        datetime: moment().fromNow(),\n                    },\n                ]);\n                console.log(comments)\n            }, 1000);\n        })\n            .catch(function (error) {\n                console.log(error);\n            });\n    };\n\n    const handleChange = (e) => {\n        setValue(e.target.value);\n    };\n    return (\n        <>\n            {comments.length > 0 && <CommentList comments={comments} />}\n            <Comment\n                avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" alt=\"Han Solo\" />}\n                content={\n                    <Editor\n                        onChange={handleChange}\n                        onSubmit={handleSubmit}\n                        submitting={submitting}\n                        value={comments.author}\n                    />\n                }\n            />\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}