{"ast":null,"code":"import _slicedToArray from \"/Users/kong/Desktop/game-cloud-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kong/Desktop/game-cloud-frontend/src/pages/Means.jsx\";\nimport { DislikeFilled, DislikeOutlined, LikeFilled, LikeOutlined } from '@ant-design/icons';\nimport React, { createElement, useEffect, useState } from 'react';\nimport { Avatar, Comment, Tooltip, Button, Form, Input, List } from 'antd';\nimport moment from 'moment';\nimport { message } from 'antd';\nimport VirtualList from 'rc-virtual-list';\nimport { AddCommentDataApi, CommentListApi, GetCommentDataApi } from \"./request/api\";\nvar TextArea = Input.TextArea;\nexport default function Means() {\n  var _this = this;\n\n  var _useState = useState([{\n    id: '',\n    author: '',\n    comments: '',\n    value: ''\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      arr = _useState2[0],\n      setArr = _useState2[1];\n\n  var data = [{\n    actions: [/*#__PURE__*/React.createElement(\"span\", {\n      key: \"comment-list-reply-to-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 23\n      }\n    }, \"Reply to\")],\n    author: 'Han Solo',\n    avatar: 'https://joeschmoe.io/api/v1/random',\n    content: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }, \"We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.\"),\n    datetime: /*#__PURE__*/React.createElement(Tooltip, {\n      title: moment().subtract(1, 'days').format('YYYY-MM-DD HH:mm:ss'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }, moment().subtract(1, 'days').fromNow()))\n  }, {\n    actions: [/*#__PURE__*/React.createElement(\"span\", {\n      key: \"comment-list-reply-to-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 23\n      }\n    }, \"Reply to\")],\n    author: 'Han Solo',\n    avatar: 'https://joeschmoe.io/api/v1/random',\n    content: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, \"We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.\"),\n    datetime: /*#__PURE__*/React.createElement(Tooltip, {\n      title: moment().subtract(2, 'days').format('YYYY-MM-DD HH:mm:ss'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, moment().subtract(2, 'days').fromNow()))\n  }];\n  useEffect(function () {\n    GetCommentDataApi().then(function (response) {\n      var newArr = JSON.parse(JSON.stringify(response)); //深拷贝\n\n      var myarr = []; //用来获取自己想要的属性\n\n      newArr.map(function (item) {\n        var obj = {\n          id: item.id,\n          author: item.author,\n          comments: item.comments,\n          value: item.value\n        };\n        myarr.push(obj);\n      });\n      setArr(myarr);\n      console.log(myarr);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(List, {\n    itemLayout: \"horizontal\",\n    dataSource: arr,\n    renderItem: function renderItem(item) {\n      return /*#__PURE__*/React.createElement(List.Item, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n        content: /*#__PURE__*/React.createElement(\"p\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }\n        }, \"We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.\"),\n        datetime: /*#__PURE__*/React.createElement(Tooltip, {\n          title: moment().format('YYYY-MM-DD HH:mm:ss'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }\n        }, moment().fromNow())),\n        author: item.id,\n        avatar: /*#__PURE__*/React.createElement(Avatar, {\n          src: \"https://joeschmoe.io/api/v1/random\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 33\n          }\n        }),\n        title: /*#__PURE__*/React.createElement(\"a\", {\n          href: \"https://ant.design\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 32\n          }\n        }, item.title),\n        description: item.value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["/Users/kong/Desktop/game-cloud-frontend/src/pages/Means.jsx"],"names":["DislikeFilled","DislikeOutlined","LikeFilled","LikeOutlined","React","createElement","useEffect","useState","Avatar","Comment","Tooltip","Button","Form","Input","List","moment","message","VirtualList","AddCommentDataApi","CommentListApi","GetCommentDataApi","TextArea","Means","id","author","comments","value","arr","setArr","data","actions","avatar","content","datetime","subtract","format","fromNow","then","response","newArr","JSON","parse","stringify","myarr","map","item","obj","push","console","log","title"],"mappings":"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","sourcesContent":["import { DislikeFilled, DislikeOutlined, LikeFilled, LikeOutlined } from '@ant-design/icons';\nimport React, {createElement, useEffect, useState} from 'react';\nimport { Avatar, Comment, Tooltip, Button, Form, Input, List } from 'antd';\nimport moment from 'moment';\nimport { message } from 'antd';\nimport VirtualList from 'rc-virtual-list';\nimport {AddCommentDataApi, CommentListApi, GetCommentDataApi} from \"./request/api\";\nconst { TextArea } = Input;\n\n\nexport default function Means() {\n    const[arr,setArr]=useState([{id:'',author:'',comments:'',value:''}])\n    const data = [\n        {\n            actions: [<span key=\"comment-list-reply-to-0\">Reply to</span>],\n            author: 'Han Solo',\n            avatar: 'https://joeschmoe.io/api/v1/random',\n            content: (\n                <p>\n                    We supply a series of design principles, practical patterns and high quality design\n                    resources (Sketch and Axure), to help people create their product prototypes beautifully and\n                    efficiently.\n                </p>\n            ),\n            datetime: (\n                <Tooltip title={moment().subtract(1, 'days').format('YYYY-MM-DD HH:mm:ss')}>\n                    <span>{moment().subtract(1, 'days').fromNow()}</span>\n                </Tooltip>\n            ),\n        },\n        {\n            actions: [<span key=\"comment-list-reply-to-0\">Reply to</span>],\n            author: 'Han Solo',\n            avatar: 'https://joeschmoe.io/api/v1/random',\n            content: (\n                <p>\n                    We supply a series of design principles, practical patterns and high quality design\n                    resources (Sketch and Axure), to help people create their product prototypes beautifully and\n                    efficiently.\n                </p>\n            ),\n            datetime: (\n                <Tooltip title={moment().subtract(2, 'days').format('YYYY-MM-DD HH:mm:ss')}>\n                    <span>{moment().subtract(2, 'days').fromNow()}</span>\n                </Tooltip>\n            ),\n        },\n    ];\n    useEffect(()=>{\n        GetCommentDataApi().then(response=> {\n            let newArr = JSON.parse(JSON.stringify(response));//深拷贝\n            let myarr = []//用来获取自己想要的属性\n            newArr.map(item => {\n                let obj = {\n                    id: item.id,\n                    author: item.author,\n                    comments: item.comments,\n                    value: item.value\n                }\n                myarr.push(obj);\n            })\n            setArr(myarr)\n            console.log(myarr)\n        })\n    },[])\n\n   return(\n        <List\n            itemLayout=\"horizontal\"\n            dataSource={arr}\n            renderItem={(item) => (\n                <List.Item>\n                    <List.Item.Meta\n                        content={\n                            <p>\n                                We supply a series of design principles, practical patterns and high quality design\n                                resources (Sketch and Axure), to help people create their product prototypes beautifully\n                                and efficiently.\n                            </p>\n                        }\n                        datetime={\n                            <Tooltip title={moment().format('YYYY-MM-DD HH:mm:ss')}>\n                                <span>{moment().fromNow()}</span>\n                            </Tooltip>\n                        }\n                        author={item.id}\n                        avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" />}\n                        title={<a href=\"https://ant.design\">{item.title}</a>}\n                        description={item.value}\n                    />\n                </List.Item>\n            )}\n        />\n    );\n}\n"]},"metadata":{},"sourceType":"module"}