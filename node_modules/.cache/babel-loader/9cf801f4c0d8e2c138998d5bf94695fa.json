{"ast":null,"code":"import _slicedToArray from \"/Users/kong/Desktop/urban_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kong/Desktop/urban_react/src/pages/map.jsx\";\n\n/* jshint esversion: 6 */\nimport React from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api'; // Import the functions you need from the SDKs you need\n\nimport firebase from \"firebase/compat\";\nimport { useState, useEffect } from 'react';\nvar containerStyle = {\n  width: '400px',\n  height: '400px'\n};\nexport default function map() {\n  var firebaseConfig = {\n    apiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\",\n    authDomain: \"urban-computing-cb07c.firebaseapp.com\",\n    databaseURL: \"https://urban-computing-cb07c-default-rtdb.firebaseio.com\",\n    projectId: \"urban-computing-cb07c\",\n    storageBucket: \"urban-computing-cb07c.appspot.com\",\n    messagingSenderId: \"293478437107\",\n    appId: \"1:293478437107:web:4cd5199b68f68eac542786\",\n    measurementId: \"G-3Z5DD1SJYQ\"\n  };\n  var center;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      count = _React$useState2[0],\n      setCount = _React$useState2[1];\n\n  React.useEffect(function () {\n    setTimeout(function () {\n      firebase.initializeApp(firebaseConfig);\n      firebase.database().ref('/').on('value', function (snap) {\n        var obj = snap.val();\n\n        for (var key in obj) {\n          setCount(obj[key]);\n        }\n      });\n    }, 1000);\n  }, []);\n  console.log(count);\n\n  var _useJsApiLoader = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\"\n  }),\n      isLoaded = _useJsApiLoader.isLoaded;\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      map = _React$useState4[0],\n      setMap = _React$useState4[1];\n\n  var onLoad = React.useCallback(function callback(map) {\n    var bounds = new window.google.maps.LatLngBounds(center);\n    map.fitBounds(bounds);\n    var marker = new window.google.maps.Marker({\n      position: count,\n      title: \"Hello World!\"\n    });\n    marker.setMap(map);\n  }, []);\n  var onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  return isLoaded ? /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: count,\n    zoom: 10,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null);\n}","map":{"version":3,"sources":["/Users/kong/Desktop/urban_react/src/pages/map.jsx"],"names":["React","GoogleMap","useJsApiLoader","firebase","useState","useEffect","containerStyle","width","height","map","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","center","count","setCount","setTimeout","initializeApp","database","ref","on","snap","obj","val","key","console","log","id","googleMapsApiKey","isLoaded","setMap","onLoad","useCallback","callback","bounds","window","google","maps","LatLngBounds","fitBounds","marker","Marker","position","title","onUnmount"],"mappings":"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","sourcesContent":["/* jshint esversion: 6 */\nimport React from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\n// Import the functions you need from the SDKs you need\nimport firebase from \"firebase/compat\";\nimport { useState, useEffect } from 'react';\n\n\n\nconst containerStyle = {\n    width: '400px',\n    height: '400px'\n};\n\n\nexport default function map() {\n    const firebaseConfig = {\n        apiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\",\n        authDomain: \"urban-computing-cb07c.firebaseapp.com\",\n        databaseURL: \"https://urban-computing-cb07c-default-rtdb.firebaseio.com\",\n        projectId: \"urban-computing-cb07c\",\n        storageBucket: \"urban-computing-cb07c.appspot.com\",\n        messagingSenderId: \"293478437107\",\n        appId: \"1:293478437107:web:4cd5199b68f68eac542786\",\n        measurementId: \"G-3Z5DD1SJYQ\"\n    };\n    let center;\n    const [count, setCount] =React.useState(0);\n    React.useEffect(()=>{\n        setTimeout(()=>{\n        firebase.initializeApp(firebaseConfig);\n        firebase.database().ref('/').on('value',(snap)=> {\n            let obj = snap.val();\n            for (var key in obj) {\n                setCount(obj[key]);\n            }\n        });\n        },1000);\n    },[]);\n\n    console.log(count);\n\n    const { isLoaded } = useJsApiLoader({\n        id: 'google-map-script',\n        googleMapsApiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\"\n    });\n\n    const [map, setMap] = React.useState(null);\n\n    const onLoad = React.useCallback(function callback(map) {\n        const bounds = new window.google.maps.LatLngBounds(center);\n        map.fitBounds(bounds);\n        var marker = new window.google.maps.Marker({\n            position: count,\n            title:\"Hello World!\"\n        });\n        marker.setMap(map);\n    }, []);\n    const onUnmount = React.useCallback(function callback(map) {\n        setMap(null);\n    }, []);\n\n    return isLoaded ? (\n        <GoogleMap\n            mapContainerStyle={containerStyle}\n            center={count}\n            zoom={10}\n            onLoad={onLoad}\n            onUnmount={onUnmount}\n        >\n        </GoogleMap>\n\n    ) : <></>\n}\n\n"]},"metadata":{},"sourceType":"module"}