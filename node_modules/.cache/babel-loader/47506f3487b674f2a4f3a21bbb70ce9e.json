{"ast":null,"code":"/* jshint esversion: 6 */\nimport { configureStore } from '@reduxjs/toolkit'; //引入API\n\nvar f1 = function f1() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'add':\n      return state + action.value;\n\n    case \"sub\":\n      return state - action.value;\n\n    default:\n      return state;\n  }\n};\n\nvar f2 = function f2() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"concat\":\n      return state + action.character;\n\n    default:\n      return state;\n  }\n}; //f3作用，构建f1 和 f2 这一颗树，连接作用\n\n\nvar f3 = function f3() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return {\n    f1: f1(state.f1, action),\n    f2: f2(state.f2, action)\n  };\n}; //创建一个结点的数，用store去维护\n\n\nvar store = configureStore({\n  reducer: f3\n});\nstore.subscribe(function () {\n  console.log(store.getState());\n});\nstore.dispatch({\n  type: \"add\",\n  value: 1\n});\nstore.dispatch({\n  type: \"add\",\n  value: 1\n});\nstore.dispatch({\n  type: \"add\",\n  value: 1\n});\nstore.dispatch({\n  type: \"add\",\n  value: 1\n});\nstore.dispatch({\n  type: \"sub\",\n  value: 1\n});\nstore.dispatch({\n  type: \"concat\",\n  character: \"只因你太美\"\n});","map":{"version":3,"sources":["/Users/kong/Desktop/react_introduction/urban_react/src/store/action.js"],"names":["configureStore","f1","state","action","type","value","f2","character","f3","store","reducer","subscribe","console","log","getState","dispatch"],"mappings":"AAAA;AACA,SAASA,cAAT,QAA+B,kBAA/B,C,CACA;;AAEA,IAAMC,EAAE,GAAG,SAALA,EAAK,GAAuB;AAAA,MAAtBC,KAAsB,uEAAd,CAAc;AAAA,MAAXC,MAAW;;AAChC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,KAAL;AACE,aAAOF,KAAK,GAAGC,MAAM,CAACE,KAAtB;;AACF,SAAK,KAAL;AACE,aAAOH,KAAK,GAAGC,MAAM,CAACE,KAAtB;;AACF;AACE,aAAOH,KAAP;AANJ;AAQD,CATD;;AAUA,IAAMI,EAAE,GAAG,SAALA,EAAK,GAAwB;AAAA,MAAvBJ,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACjC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,QAAL;AACE,aAAOF,KAAK,GAAGC,MAAM,CAACI,SAAtB;;AACF;AACE,aAAOL,KAAP;AAJJ;AAMD,CAPD,C,CAQA;;;AACA,IAAMM,EAAE,GAAG,SAALA,EAAK,GAAwB;AAAA,MAAvBN,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;AACjC,SAAO;AACLF,IAAAA,EAAE,EAAEA,EAAE,CAACC,KAAK,CAACD,EAAP,EAAWE,MAAX,CADD;AAELG,IAAAA,EAAE,EAAEA,EAAE,CAACJ,KAAK,CAACI,EAAP,EAAWH,MAAX;AAFD,GAAP;AAID,CALD,C,CAOA;;;AACA,IAAMM,KAAK,GAAGT,cAAc,CAAC;AAC3BU,EAAAA,OAAO,EAAEF;AADkB,CAAD,CAA5B;AAIAC,KAAK,CAACE,SAAN,CAAgB,YAAM;AAACC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,QAAN,EAAZ;AAA8B,CAArD;AACAL,KAAK,CAACM,QAAN,CAAe;AAACX,EAAAA,IAAI,EAAE,KAAP;AAAaC,EAAAA,KAAK,EAAE;AAApB,CAAf;AACAI,KAAK,CAACM,QAAN,CAAe;AAACX,EAAAA,IAAI,EAAE,KAAP;AAAaC,EAAAA,KAAK,EAAE;AAApB,CAAf;AACAI,KAAK,CAACM,QAAN,CAAe;AAACX,EAAAA,IAAI,EAAE,KAAP;AAAaC,EAAAA,KAAK,EAAE;AAApB,CAAf;AACAI,KAAK,CAACM,QAAN,CAAe;AAACX,EAAAA,IAAI,EAAE,KAAP;AAAaC,EAAAA,KAAK,EAAE;AAApB,CAAf;AACAI,KAAK,CAACM,QAAN,CAAe;AAACX,EAAAA,IAAI,EAAE,KAAP;AAAaC,EAAAA,KAAK,EAAE;AAApB,CAAf;AACAI,KAAK,CAACM,QAAN,CAAe;AAACX,EAAAA,IAAI,EAAE,QAAP;AAAgBG,EAAAA,SAAS,EAAE;AAA3B,CAAf","sourcesContent":["/* jshint esversion: 6 */\nimport { configureStore } from '@reduxjs/toolkit';\n//引入API\n\nconst f1 = (state = 0, action) => {\n  switch(action.type){\n    case 'add':\n      return state + action.value;\n    case \"sub\":\n      return state - action.value;\n    default:\n      return state;\n  }\n}\nconst f2 = (state = \"\", action) => {\n  switch(action.type){\n    case \"concat\":\n      return state + action.character;\n    default:\n      return state;\n  }\n}\n//f3作用，构建f1 和 f2 这一颗树，连接作用\nconst f3 = (state = {}, action) => {\n  return {\n    f1: f1(state.f1, action),\n    f2: f2(state.f2, action),\n  }\n}\n\n//创建一个结点的数，用store去维护\nconst store = configureStore({\n  reducer: f3\n});\n\nstore.subscribe(() => {console.log(store.getState())});\nstore.dispatch({type: \"add\",value: 1})\nstore.dispatch({type: \"add\",value: 1})\nstore.dispatch({type: \"add\",value: 1})\nstore.dispatch({type: \"add\",value: 1})\nstore.dispatch({type: \"sub\",value: 1})\nstore.dispatch({type: \"concat\",character: \"只因你太美\"})\n"]},"metadata":{},"sourceType":"module"}