{"ast":null,"code":"/* jshint esversion: 6 */\nimport React from 'react';\nimport { Map, Markers } from \"react-amap\";\nimport { MarkerClusterer } from \"@react-google-maps/api\"; // const randomPosition = () => ({\n//     longitude: 53 + Math.random(),\n//     latitude: -6 + Math.random()\n// });\n// const randomMarker = (len) => (\n//     Array(len).fill(true).map((e, idx) => ({\n//         position: randomPosition()\n//     }))\n// );\n//\n\nexport default function test() {\n  //\n  //     const [count,setCount] = React.useState({markers: randomMarker(10)});\n  //     const randomMarkers=function (){\n  //         setCount({markers: randomMarker(10)});\n  //     };\n  //     const plugins = [\n  //         'MapType',\n  //         'Scale',\n  //         'OverView',\n  //         'ControlBar', // v1.1.0 新增\n  //         {\n  //             name: 'ToolBar',\n  //             options: {\n  //                 visible: true,  // 不设置该属性默认就是 true\n  //                 onCreated(ins){\n  //                     console.log(ins);\n  //                 },\n  //             },\n  //         }\n  //     ];\n  //     return(\n  //             <div>\n  //             <div style={{width: '100%', height: 372}}>\n  //                 <Map plugins={plugins}  zoom={6} center={{longitude: 53,latitude: -6}}>\n  //                     <Markers\n  //                         markers={count.markers}\n  //                     />\n  //                 </Map>\n  //             </div>\n  //             <button onClick={randomMarkers.bind(this)}>Random Markers</button>\n  //         </div>\n  //         )\n  // }\n  //\n  //\n  //\n  //\n  // // import React, { Component } from 'react';\n  // // import { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\n  // //\n  // // import CurrentLocation from './Map';\n  // // import {Map} from \"react-amap\";\n  // //\n  // // export default function Test(){\n  // //     const state = {\n  // //         showingInfoWindow: false,\n  // //         activeMarker: {},\n  // //         selectedPlace: {}\n  // //     };\n  // //\n  // //     const onMarkerClick = (props, marker, e) =>\n  // //         this.setState({\n  // //             selectedPlace: props,\n  // //             activeMarker: marker,\n  // //             showingInfoWindow: true\n  // //         });\n  // //\n  // //     const onClose = props => {\n  // //         if (this.state.showingInfoWindow) {\n  // //             this.setState({\n  // //                 showingInfoWindow: false,\n  // //                 activeMarker: null\n  // //             });\n  // //         }\n  // //     };\n  // //\n  // //         return (\n  // //             <CurrentLocation\n  // //                 centerAroundCurrentLocation\n  // //                 google={this.props.google}\n  // //             ><Map\n  // //                 google={this.props.google}\n  // //                 zoom={14}\n  // //                 initialCenter={{\n  // //                     lat: -1.2884,\n  // //                     lng: 36.8233\n  // //                 }}\n  // //             />\n  // //\n  // //                 <Marker onClick={onMarkerClick} name={'current location'} />\n  // //                 <InfoWindow\n  // //                     marker={state.activeMarker}\n  // //                     visible={state.showingInfoWindow}\n  // //                     onClose={onClose}\n  // //                 >\n  // //                     <div>\n  // //                         <h4>{state.selectedPlace.name}</h4>\n  // //                     </div>\n  // //                 </InfoWindow>\n  // //             </CurrentLocation>\n  // //         );\n  // //   }\n  // //\n  //Create a new map\n  function initMap() {\n    var map = new window.google.maps.Map(document.getElementById(\"map\"), {\n      zoom: 3,\n      center: {\n        lat: -28.024,\n        lng: 140.887\n      }\n    });\n    var infoWindow = new window.google.maps.InfoWindow({\n      content: \"\",\n      disableAutoPan: true\n    }); // Create an array of alphabetical characters used to label the markers.\n\n    var labels = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"; // Add some markers to the map.\n\n    var markers = locations.map(function (position, i) {\n      var label = labels[i % labels.length];\n      var marker = new window.google.maps.Marker({\n        position: position,\n        label: label\n      }); // markers can only be keyboard focusable when they have click listeners\n      // open info window when marker is clicked\n\n      marker.addListener(\"click\", function () {\n        infoWindow.setContent(label);\n        infoWindow.open(map, marker);\n      });\n      return marker;\n    }); // Add a marker clusterer to manage the markers.\n\n    new MarkerClusterer({\n      markers: markers,\n      map: map\n    });\n  }\n\n  var locations = [{\n    lat: -31.56391,\n    lng: 147.154312\n  }, {\n    lat: -33.718234,\n    lng: 150.363181\n  }, {\n    lat: -33.727111,\n    lng: 150.371124\n  }, {\n    lat: -33.848588,\n    lng: 151.209834\n  }, {\n    lat: -33.851702,\n    lng: 151.216968\n  }, {\n    lat: -34.671264,\n    lng: 150.863657\n  }, {\n    lat: -35.304724,\n    lng: 148.662905\n  }, {\n    lat: -36.817685,\n    lng: 175.699196\n  }, {\n    lat: -36.828611,\n    lng: 175.790222\n  }, {\n    lat: -37.75,\n    lng: 145.116667\n  }, {\n    lat: -37.759859,\n    lng: 145.128708\n  }, {\n    lat: -37.765015,\n    lng: 145.133858\n  }, {\n    lat: -37.770104,\n    lng: 145.143299\n  }, {\n    lat: -37.7737,\n    lng: 145.145187\n  }, {\n    lat: -37.774785,\n    lng: 145.137978\n  }, {\n    lat: -37.819616,\n    lng: 144.968119\n  }, {\n    lat: -38.330766,\n    lng: 144.695692\n  }, {\n    lat: -39.927193,\n    lng: 175.053218\n  }, {\n    lat: -41.330162,\n    lng: 174.865694\n  }, {\n    lat: -42.734358,\n    lng: 147.439506\n  }, {\n    lat: -42.734358,\n    lng: 147.501315\n  }, {\n    lat: -42.735258,\n    lng: 147.438\n  }, {\n    lat: -43.999792,\n    lng: 170.463352\n  }];\n  window.initMap = initMap;\n}","map":{"version":3,"sources":["/Users/kong/Desktop/urban_react/src/pages/test.jsx"],"names":["React","Map","Markers","MarkerClusterer","test","initMap","map","window","google","maps","document","getElementById","zoom","center","lat","lng","infoWindow","InfoWindow","content","disableAutoPan","labels","markers","locations","position","i","label","length","marker","Marker","addListener","setContent","open"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,OAAb,QAA2B,YAA3B;AACA,SAAQC,eAAR,QAA8B,wBAA9B,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,IAAT,GAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEI,WAASC,OAAT,GAAmB;AACf,QAAMC,GAAG,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBR,GAAvB,CAA2BS,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAA3B,EAA2D;AACnEC,MAAAA,IAAI,EAAE,CAD6D;AAEnEC,MAAAA,MAAM,EAAE;AAACC,QAAAA,GAAG,EAAE,CAAC,MAAP;AAAeC,QAAAA,GAAG,EAAE;AAApB;AAF2D,KAA3D,CAAZ;AAIA,QAAMC,UAAU,GAAG,IAAIT,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBQ,UAAvB,CAAkC;AACjDC,MAAAA,OAAO,EAAE,EADwC;AAEjDC,MAAAA,cAAc,EAAE;AAFiC,KAAlC,CAAnB,CALe,CASf;;AACA,QAAMC,MAAM,GAAG,4BAAf,CAVe,CAWf;;AACA,QAAMC,OAAO,GAAGC,SAAS,CAAChB,GAAV,CAAc,UAACiB,QAAD,EAAWC,CAAX,EAAiB;AAC3C,UAAMC,KAAK,G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","sourcesContent":["/* jshint esversion: 6 */\nimport React from 'react';\nimport {Map, Markers} from \"react-amap\";\nimport {MarkerClusterer} from \"@react-google-maps/api\";\n// const randomPosition = () => ({\n//     longitude: 53 + Math.random(),\n//     latitude: -6 + Math.random()\n// });\n// const randomMarker = (len) => (\n//     Array(len).fill(true).map((e, idx) => ({\n//         position: randomPosition()\n//     }))\n// );\n//\nexport default function test() {\n//\n//     const [count,setCount] = React.useState({markers: randomMarker(10)});\n//     const randomMarkers=function (){\n//         setCount({markers: randomMarker(10)});\n//     };\n//     const plugins = [\n//         'MapType',\n//         'Scale',\n//         'OverView',\n//         'ControlBar', // v1.1.0 新增\n//         {\n//             name: 'ToolBar',\n//             options: {\n//                 visible: true,  // 不设置该属性默认就是 true\n//                 onCreated(ins){\n//                     console.log(ins);\n//                 },\n//             },\n//         }\n//     ];\n//     return(\n//             <div>\n//             <div style={{width: '100%', height: 372}}>\n//                 <Map plugins={plugins}  zoom={6} center={{longitude: 53,latitude: -6}}>\n//                     <Markers\n//                         markers={count.markers}\n//                     />\n//                 </Map>\n//             </div>\n//             <button onClick={randomMarkers.bind(this)}>Random Markers</button>\n//         </div>\n//         )\n// }\n//\n//\n//\n//\n// // import React, { Component } from 'react';\n// // import { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\n// //\n// // import CurrentLocation from './Map';\n// // import {Map} from \"react-amap\";\n// //\n// // export default function Test(){\n// //     const state = {\n// //         showingInfoWindow: false,\n// //         activeMarker: {},\n// //         selectedPlace: {}\n// //     };\n// //\n// //     const onMarkerClick = (props, marker, e) =>\n// //         this.setState({\n// //             selectedPlace: props,\n// //             activeMarker: marker,\n// //             showingInfoWindow: true\n// //         });\n// //\n// //     const onClose = props => {\n// //         if (this.state.showingInfoWindow) {\n// //             this.setState({\n// //                 showingInfoWindow: false,\n// //                 activeMarker: null\n// //             });\n// //         }\n// //     };\n// //\n// //         return (\n// //             <CurrentLocation\n// //                 centerAroundCurrentLocation\n// //                 google={this.props.google}\n// //             ><Map\n// //                 google={this.props.google}\n// //                 zoom={14}\n// //                 initialCenter={{\n// //                     lat: -1.2884,\n// //                     lng: 36.8233\n// //                 }}\n// //             />\n// //\n// //                 <Marker onClick={onMarkerClick} name={'current location'} />\n// //                 <InfoWindow\n// //                     marker={state.activeMarker}\n// //                     visible={state.showingInfoWindow}\n// //                     onClose={onClose}\n// //                 >\n// //                     <div>\n// //                         <h4>{state.selectedPlace.name}</h4>\n// //                     </div>\n// //                 </InfoWindow>\n// //             </CurrentLocation>\n// //         );\n// //   }\n// //\n\n\n//Create a new map\n\n    function initMap() {\n        const map = new window.google.maps.Map(document.getElementById(\"map\"), {\n            zoom: 3,\n            center: {lat: -28.024, lng: 140.887},\n        });\n        const infoWindow = new window.google.maps.InfoWindow({\n            content: \"\",\n            disableAutoPan: true,\n        });\n        // Create an array of alphabetical characters used to label the markers.\n        const labels = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n        // Add some markers to the map.\n        const markers = locations.map((position, i) => {\n            const label = labels[i % labels.length];\n            const marker = new window.google.maps.Marker({\n                position,\n                label,\n            });\n\n            // markers can only be keyboard focusable when they have click listeners\n            // open info window when marker is clicked\n            marker.addListener(\"click\", () => {\n                infoWindow.setContent(label);\n                infoWindow.open(map, marker);\n            });\n            return marker;\n        });\n\n        // Add a marker clusterer to manage the markers.\n        new MarkerClusterer({markers, map});\n    }\n\n    const locations = [\n        {lat: -31.56391, lng: 147.154312},\n        {lat: -33.718234, lng: 150.363181},\n        {lat: -33.727111, lng: 150.371124},\n        {lat: -33.848588, lng: 151.209834},\n        {lat: -33.851702, lng: 151.216968},\n        {lat: -34.671264, lng: 150.863657},\n        {lat: -35.304724, lng: 148.662905},\n        {lat: -36.817685, lng: 175.699196},\n        {lat: -36.828611, lng: 175.790222},\n        {lat: -37.75, lng: 145.116667},\n        {lat: -37.759859, lng: 145.128708},\n        {lat: -37.765015, lng: 145.133858},\n        {lat: -37.770104, lng: 145.143299},\n        {lat: -37.7737, lng: 145.145187},\n        {lat: -37.774785, lng: 145.137978},\n        {lat: -37.819616, lng: 144.968119},\n        {lat: -38.330766, lng: 144.695692},\n        {lat: -39.927193, lng: 175.053218},\n        {lat: -41.330162, lng: 174.865694},\n        {lat: -42.734358, lng: 147.439506},\n        {lat: -42.734358, lng: 147.501315},\n        {lat: -42.735258, lng: 147.438},\n        {lat: -43.999792, lng: 170.463352},\n    ];\n\n    window.initMap = initMap;\n}\n"]},"metadata":{},"sourceType":"module"}