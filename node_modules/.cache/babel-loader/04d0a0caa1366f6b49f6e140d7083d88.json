{"ast":null,"code":"import _slicedToArray from \"/Users/kong/Desktop/urban_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kong/Desktop/urban_react/src/pages/map.jsx\";\n\n/* jshint esversion: 6 */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nimport { FindUserDataApi } from './request/api';\nimport firebase from \"firebase/compat\";\nimport axios from \"axios\";\nimport { Input } from \"antd\";\nvar Search = Input.Search;\nvar containerStyle = {\n  width: '600px',\n  height: '400px',\n  float: 'left'\n};\nexport default function map() {\n  var _this = this;\n\n  var firebaseConfig = {\n    apiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\",\n    authDomain: \"urban-computing-cb07c.firebaseapp.com\",\n    databaseURL: \"https://urban-computing-cb07c-default-rtdb.firebaseio.com\",\n    projectId: \"urban-computing-cb07c\",\n    storageBucket: \"urban-computing-cb07c.appspot.com\",\n    messagingSenderId: \"293478437107\",\n    appId: \"1:293478437107:web:4cd5199b68f68eac542786\",\n    measurementId: \"G-3Z5DD1SJYQ\"\n  };\n\n  var _React$useState = React.useState({\n    lat: 53.49332,\n    lng: -6.3\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      count = _React$useState2[0],\n      setCount = _React$useState2[1];\n\n  React.useEffect(function () {\n    firebase.initializeApp(firebaseConfig);\n    firebase.database().ref('/').on('value', function (snap) {\n      var obj = snap.val();\n\n      if (obj !== null) {\n        for (var key in obj) {\n          if (key.split(',')[2] > '22 13:35:00') {\n            setCount(obj[key]);\n            console.log(obj[key]);\n          }\n        }\n      }\n    });\n  }, []);\n\n  var _useJsApiLoader = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\"\n  }),\n      isLoaded = _useJsApiLoader.isLoaded;\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      myArr = _React$useState4[0],\n      setMyArr = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      NameArray = _React$useState6[0],\n      setNameArray = _React$useState6[1];\n\n  var num = 0;\n  var search;\n\n  function QueryData(value) {\n    search = value;\n    num = num + 1;\n    console.log(num);\n    axios.get('https://maps.googleapis.com/maps/api/place/nearbysearch/json', {\n      params: {\n        key: 'AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c',\n        types: value,\n        location: '53.49332,-6.31718',\n        radius: '1000000'\n      }\n    }).then(function (response) {\n      var result = response.data.results;\n\n      for (var key in result) {\n        myArr.push(result[key].geometry.location);\n        axios.get('/api/add', {\n          params: {\n            id: num,\n            search: value,\n            title: result[key].geometry.location,\n            text: result[key].name,\n            picture: result[key].photos\n          }\n        });\n      }\n\n      console.log(result[key].photos);\n      console.log(num);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  function updatePosition() {\n    var mapOptions = {\n      zoom: 17,\n      center: {\n        lat: 53.49332,\n        lng: -6.31718\n      }\n    };\n    console.log(count);\n    var map1 = new window.google.maps.Map(document.getElementById(\"map\"), mapOptions);\n    console.log(search);\n    FindUserDataApi({}).then(function (response) {\n      var result = response;\n      console.log(result.search);\n\n      for (var key in result) {\n        if (parseFloat(result[key].title.replace(/\\\"/g, \"\").split(',')[1]) !== \"\") {\n          var lat = [parseFloat(result[key].title.replace(/\\\"/g, \"\").split(',')[0].split(':')[1]), count.lat];\n          var lng = [parseFloat(result[key].title.replace(/\\\"/g, \"\").split(',')[1].split(':')[1].replace(/\\}/g, \"\")), count.lng];\n          var R = 6378137;\n          var dLat = (lat[1] - lat[0]) * Math.PI / 180;\n          var dLng = (lng[1] - lng[0]) * Math.PI / 180;\n          var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat[0] * Math.PI / 180) * Math.cos(lat[1] * Math.PI / 180) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n          var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n          var d = R * c;\n\n          if (d < 1000000 && result[key].search === search) {\n            var marker1 = new window.google.maps.Marker({\n              position: {\n                lat: parseFloat(result[key].title.replace(/\\\"/g, \"\").split(',')[0].split(':')[1]),\n                lng: parseFloat(result[key].title.replace(/\\\"/g, \"\").split(',')[1].split(':')[1].replace(/\\}/g, \"\"))\n              }\n            });\n            marker1.setMap(map1);\n            NameArray.push([result[key].text, result[key].title]);\n            setNameArray(NameArray);\n            var myLatlng = new window.google.maps.LatLng(parseFloat(result[key].title.replace(/\\\"/g, \"\").split(',')[0].split(':')[1]), parseFloat(result[key].title.replace(/\\\"/g, \"\").split(',')[1].split(':')[1].replace(/\\}/g, \"\")));\n            map1.setCenter(myLatlng);\n            console.log(1);\n          }\n        }\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  } // const forceUpdate= React.useCallback((map) =>{\n  //\n  //         const marker1 = new window.google.maps.Marker({\n  //             position: count,\n  //             title: \"starting\"\n  //         });\n  //         console.log(count);\n  //         // FindUserDataApi({}).then(response => {\n  //         //     const result = response;\n  //         //     for (var key in result) {\n  //         //         if(parseFloat(result[key].title.replace(/\\\"/g, \"\").split(',')[1])!==\"\") {\n  //         //             var lat = [parseFloat(result[key].title.replace(/\\\"/g, \"\").split(',')[0].split(':')[1]), count.lat];\n  //         //             var lng = [parseFloat(result[key].title.replace(/\\\"/g, \"\").split(',')[1].split(':')[1].replace(/\\}/g, \"\")), count.lng];\n  //         //             var R = 6378137;\n  //         //             var dLat = (lat[1] - lat[0]) * Math.PI / 180;\n  //         //             var dLng = (lng[1] - lng[0]) * Math.PI / 180;\n  //         //             var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat[0] * Math.PI / 180) * Math.cos(lat[1] * Math.PI / 180) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n  //         //             var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  //         //             var d = R * c;\n  //         //             if ((d < 100000) && (result[key].search === search)) {\n  //         //                 const marker = new window.google.maps.Marker({\n  //         //                     position: {\n  //         //                         lat: parseFloat(result[key].title.replace(/\\\"/g, \"\").split(',')[0].split(':')[1]),\n  //         //                         lng: parseFloat(result[key].title.replace(/\\\"/g, \"\").split(',')[1].split(':')[1].replace(/\\}/g, \"\"))\n  //         //                     },\n  //         //                 });\n  //         //                 NameArray.push([result[key].text, result[key].title]);\n  //         //                 setNameArray(NameArray);\n  //         //                 marker.setMap(map);\n  //         //             }\n  //         //         }\n  //         //     }\n  //         // });\n  //         marker1.setMap(map);\n  //     },[]);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"map\",\n    style: {\n      height: '600px',\n      width: '400px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      marginLeft: '400px',\n      marginTop: '-300px'\n    },\n    onClick: updatePosition,\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, \" update \"), /*#__PURE__*/React.createElement(Search, {\n    style: {\n      width: '330px',\n      marginLeft: '500px',\n      marginBottom: '5px',\n      marginTop: '-700px'\n    },\n    placeholder: \"Search nearest store\",\n    onSearch: QueryData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '30px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, NameArray.map(function (item) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        width: '330px',\n        height: '80px',\n        marginLeft: '669px',\n        backgroundColor: 'white'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        marginLeft: '10px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, item[0]), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        marginLeft: '10px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }, item[1]));\n  })), /*#__PURE__*/React.createElement(\"script\", {\n    async: true,\n    defer: true,\n    src: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c&callback=initMap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/kong/Desktop/urban_react/src/pages/map.jsx"],"names":["React","useEffect","useRef","useState","GoogleMap","useJsApiLoader","FindUserDataApi","firebase","axios","Input","Search","containerStyle","width","height","float","map","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","lat","lng","count","setCount","initializeApp","database","ref","on","snap","obj","val","key","split","console","log","id","googleMapsApiKey","isLoaded","myArr","setMyArr","NameArray","setNameArray","num","search","QueryData","value","get","params","types","location","radius","then","response","result","data","results","push","geometry","title","text","name","picture","photos","catch","error","updatePosition","mapOptions","zoom","center","map1","window","google","maps","Map","document","getElementById","parseFloat","replace","R","dLat","Math","PI","dLng","a","sin","cos","c","atan2","sqrt","d","marker1","Marker","position","setMap","myLatlng","LatLng","setCenter","marginLeft","marginTop","marginBottom","padding","item","backgroundColor"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,SAAQC,SAAR,EAAmBC,cAAnB,QAAwC,wBAAxC;AACA,SAAQC,eAAR,QAA8B,eAA9B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,MAApB;IACQC,M,GAAWD,K,CAAXC,M;AAGR,IAAMC,cAAc,GAAG;AACnBC,EAAAA,KAAK,EAAE,OADY;AAEnBC,EAAAA,MAAM,EAAE,OAFW;AAGnBC,EAAAA,KAAK,EAAC;AAHa,CAAvB;AAOA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE1B,MAAMC,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,yCADW;AAEnBC,IAAAA,UAAU,EAAE,uCAFO;AAGnBC,IAAAA,WAAW,EAAE,2DAHM;AAInBC,IAAAA,SAAS,EAAE,uBAJQ;AAKnBC,IAAAA,aAAa,EAAE,mCALI;AAMnBC,IAAAA,iBAAiB,EAAE,cANA;AAOnBC,IAAAA,KAAK,EAAE,2CAPY;AAQnBC,IAAAA,aAAa,EAAE;AARI,GAAvB;;AAF0B,wBAYDxB,KAAK,CAACG,QAAN,CAAe;AAACsB,IAAAA,GAAG,EAAE,QAAN;AAAgBC,IAAAA,GAAG,EAAE,CAAC;AAAtB,GAAf,CAZC;AAAA;AAAA,MAYnBC,KAZmB;AAAA,MAYZC,QAZY;;AAc1B5B,EAAAA,KAAK,CAACC,SAAN,CAAgB,YAAI;AACZM,IAAAA,QAAQ,CAACsB,aAAT,CAAuBb,cAAvB;AACAT,IAAAA,QAAQ,CAACuB,QAAT,GAAoBC,GAApB,CAAwB,GAAxB,EAA6BC,EAA7B,CAAgC,OAAhC,EAAwC,UAACC,IAAD,EAAS;AAC7C,UAAIC,GAAG,GAAGD,IAAI,CAACE,GAAL,EAAV;;AACA,UAAID,GAAG,KAAK,IAAZ,EAAkB;AACd,aAAK,IAAIE,GAAT,IAAgBF,GAAhB,EAAqB;AACjB,cAAGE,GAAG,CAACC,KAAJ,CAAU,GAAV,EAAe,CAAf,IAAkB,aAArB,EAAoC;AAChCT,YAAAA,QAAQ,CAACM,GAAG,CAACE,GAAD,CAAJ,CAAR;AACAE,YAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACE,GAAD,CAAf;AACH;AACJ;AACJ;AACJ,KAVD;AAWP,GAbD,EAaE,EAbF;;AAd0B,wBA4BP/B,cAAc,CAAC;AAC9BmC,IAAAA,EAAE,EAAE,mBAD0B;AAE9BC,IAAAA,gBAAgB,EAAE;AAFY,GAAD,CA5BP;AAAA,MA4BnBC,QA5BmB,mBA4BnBA,QA5BmB;;AAAA,yBAiCA1C,KAAK,CAACG,QAAN,CAAe,EAAf,CAjCA;AAAA;AAAA,MAiCnBwC,KAjCmB;AAAA,MAiCZC,QAjCY;;AAAA,yBAkCQ5C,KAAK,CAACG,QAAN,CAAe,EAAf,CAlCR;AAAA;AAAA,MAkCnB0C,SAlCmB;AAAA,MAkCRC,YAlCQ;;AAmC1B,MAAIC,GAAG,GAAC,CAAR;AACA,MAAIC,MAAJ;;AACA,WAASC,SAAT,CAAmBC,KAAnB,EAAgC;AAC5BF,IAAAA,MAAM,GAACE,KAAP;AACAH,IAAAA,GAAG,GAACA,GAAG,GAAC,CAAR;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACAvC,IAAAA,KAAK,CAAC2C,GAAN,CAAU,8DAAV,EAA0E;AACtEC,MAAAA,MAAM,EAAE;AACJhB,QAAAA,GAAG,EAAE,yCADD;AAEJiB,QAAAA,KAAK,EAAEH,KAFH;AAGJI,QAAAA,QAAQ,EAAE,mBAHN;AAIJC,QAAAA,MAAM,EAAE;AAJJ;AAD8D,KAA1E,EAOGC,IAPH,CAOQ,UAAUC,QAAV,EAAoB;AACpB,UAAMC,MAAM,GAAGD,QAAQ,CAACE,IAAT,CAAcC,OAA7B;;AACA,WAAK,IAAIxB,GAAT,IAAgBsB,MAAhB,EAAwB;AACpBf,QAAAA,KAAK,CAACkB,IAAN,CAAWH,MAAM,CAACtB,GAAD,CAAN,CAAY0B,QAAZ,CAAqBR,QAAhC;AACA9C,QAAAA,KAAK,CAAC2C,GAAN,CAAU,UAAV,EAAsB;AAClBC,UAAAA,MAAM,EAAE;AACJZ,YAAAA,EAAE,EAAEO,GADA;AAEJC,YAAAA,MAAM,EAACE,KAFH;AAGJa,YAAAA,KAAK,EAAEL,MAAM,CAACtB,GAAD,CAAN,CAAY0B,QAAZ,CAAqBR,QAHxB;AAIJU,YAAAA,IAAI,EAAEN,MAAM,CAACtB,GAAD,CAAN,CAAY6B,IAJd;AAKJC,YAAAA,OAAO,EAACR,MAAM,CAACtB,GAAD,CAAN,CAAY+B;AALhB;AADU,SAAtB;AASH;;AACD7B,MAAAA,OAAO,CAACC,GAAR,CAAYmB,MAAM,CAACtB,GAAD,CAAN,CAAY+B,MAAxB;AACA7B,MAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACP,KAvBD,EAwBKqB,KAxBL,CAwBW,UAAUC,KAAV,EAAiB;AACpB/B,MAAAA,OAAO,CAACC,GAAR,CAAY8B,KAAZ;AACH,KA1BL;AA2BH;;AAGD,WAASC,cAAT,GACA;AACI,QAAIC,UAAU,GAAG;AACbC,MAAAA,IAAI,EAAE,EADO;AAEbC,MAAAA,MAAM,EAAE;AAAChD,QAAAA,GAAG,EAAE,QAAN;AAAgBC,QAAAA,GAAG,EAAE,CAAC;AAAtB;AAFK,KAAjB;AAIAY,IAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACA,QAAI+C,IAAI,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,GAAvB,CAA2BC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAA3B,EAA0DT,UAA1D,CAAX;AACAjC,IAAAA,OAAO,CAACC,GAAR,CAAYS,MAAZ;AACA1C,IAAAA,eAAe,CAAC,EAAD,CAAf,CAAoBkD,IAApB,CAAyB,UAAAC,QAAQ,EAAI;AACjC,UAAMC,MAAM,GAAGD,QAAf;AACAnB,MAAAA,OAAO,CAACC,GAAR,CAAYmB,MAAM,CAACV,MAAnB;;AACA,WAAK,IAAIZ,GAAT,IAAgBsB,MAAhB,EAAwB;AACpB,YAAGuB,UAAU,CAACvB,MAAM,CAACtB,GAAD,CAAN,CAAY2B,KAAZ,CAAkBmB,OAAlB,CAA0B,KAA1B,EAAiC,EAAjC,EAAqC7C,KAArC,CAA2C,GAA3C,EAAgD,CAAhD,CAAD,CAAV,KAAiE,EAApE,EAAwE;AACpE,cAAIZ,GAAG,GAAG,CAACwD,UAAU,CAACvB,MAAM,CAACtB,GAAD,CAAN,CAAY2B,KAAZ,CAAkBmB,OAAlB,CAA0B,KAA1B,EAAiC,EAAjC,EAAqC7C,KAArC,CAA2C,GAA3C,EAAgD,CAAhD,EAAmDA,KAAnD,CAAyD,GAAzD,EAA8D,CAA9D,CAAD,CAAX,EAA+EV,KAAK,CAACF,GAArF,CAAV;AACA,cAAIC,GAAG,GAAG,CAACuD,UAAU,CAACvB,MAAM,CAACtB,GAAD,CAAN,CAAY2B,KAAZ,CAAkBmB,OAAlB,CAA0B,KAA1B,EAAiC,EAAjC,EAAqC7C,KAArC,CAA2C,GAA3C,EAAgD,CAAhD,EAAmDA,KAAnD,CAAyD,GAAzD,EAA8D,CAA9D,EAAiE6C,OAAjE,CAAyE,KAAzE,EAAgF,EAAhF,CAAD,CAAX,EAAkGvD,KAAK,CAACD,GAAxG,CAAV;AACA,cAAIyD,CAAC,GAAG,OAAR;AACA,cAAIC,IAAI,GAAG,CAAC3D,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAb,IAAoB4D,IAAI,CAACC,EAAzB,GAA8B,GAAzC;AACA,cAAIC,IAAI,GAAG,CAAC7D,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAb,IAAoB2D,IAAI,CAACC,EAAzB,GAA8B,GAAzC;AACA,cAAIE,CAAC,GAAGH,IAAI,CAACI,GAAL,CAASL,IAAI,GAAG,CAAhB,IAAqBC,IAAI,CAACI,GAAL,CAASL,IAAI,GAAG,CAAhB,CAArB,GAA0CC,IAAI,CAACK,GAAL,CAASjE,GAAG,CAAC,CAAD,CAAH,GAAS4D,IAAI,CAACC,EAAd,GAAmB,GAA5B,IAAmCD,IAAI,CAACK,GAAL,CAASjE,GAAG,CAAC,CAAD,CAAH,GAAS4D,IAAI,CAACC,EAAd,GAAmB,GAA5B,CAAnC,GAAsED,IAAI,CAACI,GAAL,CAASF,IAAI,GAAG,CAAhB,CAAtE,GAA2FF,IAAI,CAACI,GAAL,CAASF,IAAI,GAAG,CAAhB,CAA7I;AACA,cAAII,CAAC,GAAG,IAAIN,IAAI,CAACO,KAAL,CAAWP,IAAI,CAACQ,IAAL,CAAUL,CAAV,CAAX,EAAyBH,IAAI,CAACQ,IAAL,CAAU,IAAIL,CAAd,CAAzB,CAAZ;AACA,cAAIM,CAAC,GAAGX,CAAC,GAAGQ,CAAZ;;AACA,cAAKG,CAAC,GAAG,OAAL,IAAkBpC,MAAM,CAACtB,GAAD,CAAN,CAAYY,MAAZ,KAAuBA,MAA7C,EAAsD;AAClD,gBAAM+C,OAAO,GAAG,IAAIpB,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBmB,MAAvB,CAA8B;AAC1CC,cAAAA,QAAQ,EAAE;AACNxE,gBAAAA,GAAG,EAAEwD,UAAU,CAACvB,MAAM,CAACtB,GAAD,CAAN,CAAY2B,KAAZ,CAAkBmB,OAAlB,CAA0B,KAA1B,EAAiC,EAAjC,EAAqC7C,KAArC,CAA2C,GAA3C,EAAgD,CAAhD,EAAmDA,KAAnD,CAAyD,GAAzD,EAA8D,CAA9D,CAAD,CADT;AAENX,gBAAAA,GAAG,EAAEuD,UAAU,CAACvB,MAAM,CAACtB,GAAD,CAAN,CAAY2B,KAAZ,CAAkBmB,OAAlB,CAA0B,KAA1B,EAAiC,EAAjC,EAAqC7C,KAArC,CAA2C,GAA3C,EAAgD,CAAhD,EAAmDA,KAAnD,CAAyD,GAAzD,EAA8D,CAA9D,EAAiE6C,OAAjE,CAAyE,KAAzE,EAAgF,EAAhF,CAAD;AAFT;AADgC,aAA9B,CAAhB;AAMAa,YAAAA,OAAO,CAACG,MAAR,CAAexB,IAAf;AACA7B,YAAAA,SAAS,CAACgB,IAAV,CAAe,CAACH,MAAM,CAACtB,GAAD,CAAN,CAAY4B,IAAb,EAAmBN,MAAM,CAACtB,GAAD,CAAN,CAAY2B,KAA/B,CAAf;AACAjB,YAAAA,YAAY,CAACD,SAAD,CAAZ;AACA,gBAAIsD,QAAQ,GAAG,IAAIxB,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBuB,MAAvB,CAA8BnB,UAAU,CAACvB,MAAM,CAACtB,GAAD,CAAN,CAAY2B,KAAZ,CAAkBmB,OAAlB,CAA0B,KAA1B,EAAiC,EAAjC,EAAqC7C,KAArC,CAA2C,GAA3C,EAAgD,CAAhD,EAAmDA,KAAnD,CAAyD,GAAzD,EAA8D,CAA9D,CAAD,CAAxC,EAA2G4C,UAAU,CAACvB,MAAM,CAACtB,GAAD,CAAN,CAAY2B,KAAZ,CAAkBmB,OAAlB,CAA0B,KAA1B,EAAiC,EAAjC,EAAqC7C,KAArC,CAA2C,GAA3C,EAAgD,CAAhD,EAAmDA,KAAnD,CAAyD,GAAzD,EAA8D,CAA9D,EAAiE6C,OAAjE,CAAyE,KAAzE,EAAgF,EAAhF,CAAD,CAArH,CAAf;AACAR,YAAAA,IAAI,CAAC2B,SAAL,CAAeF,QAAf;AACA7D,YAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AACH;AACJ;AACJ;AACJ,KA7BD,EA6BG6B,KA7BH,CA6BS,UAAUC,KAAV,EAAiB;AACtB/B,MAAAA,OAAO,CAACC,GAAR,CAAY8B,KAAZ;AACH,KA/BD;AAgCH,GAhHyB,CAkH1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAK,IAAA,EAAE,EAAC,KAAR;AAAc,IAAA,KAAK,EAAE;AAACxD,MAAAA,MAAM,EAAC,OAAR;AAAgBD,MAAAA,KAAK,EAAC;AAAtB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAQ,IAAA,KAAK,EAAE;AAAC0F,MAAAA,UAAU,EAAC,OAAZ;AAAoBC,MAAAA,SAAS,EAAC;AAA9B,KAAf;AAAwD,IAAA,OAAO,EAAEjC,cAAjE;AAAiF,IAAA,IAAI,EAAC,GAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAC1D,MAAAA,KAAK,EAAC,OAAP;AAAe0F,MAAAA,UAAU,EAAC,OAA1B;AAAkCE,MAAAA,YAAY,EAAC,KAA/C;AAAqDD,MAAAA,SAAS,EAAC;AAA/D,KAAf;AAAyF,IAAA,WAAW,EAAC,sBAArG;AAA4H,IAAA,QAAQ,EAAEtD,SAAtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI;AAAK,IAAA,KAAK,EAAE;AAACwD,MAAAA,OAAO,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK5D,SAAS,CAAC9B,GAAV,CAAc,UAAA2F,IAAI;AAAA,wBACnB;AACI,MAAA,KAAK,EAAE;AACH9F,QAAAA,KAAK,EAAC,OADH;AAEHC,QAAAA,MAAM,EAAC,MAFJ;AAGHyF,QAAAA,UAAU,EAAC,OAHR;AAIHK,QAAAA,eAAe,EAAC;AAJb,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQA;AAAG,MAAA,KAAK,EAAE;AAACL,QAAAA,UAAU,EAAC;AAAZ,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCI,IAAI,CAAC,CAAD,CAApC,CARA,eASA;AAAG,MAAA,KAAK,EAAE;AAACJ,QAAAA,UAAU,EAAC;AAAZ,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCI,IAAI,CAAC,CAAD,CAApC,CATA,CADmB;AAAA,GAAlB,CADL,CALJ,eAqBI;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,KAAK,MAAnB;AAAoB,IAAA,GAAG,EAAC,sGAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBJ,CADJ;AA2BH","sourcesContent":["/* jshint esversion: 6 */\n\nimport React, {useEffect, useRef, useState} from 'react';\nimport {GoogleMap, useJsApiLoader} from '@react-google-maps/api';\nimport {FindUserDataApi} from './request/api';\nimport firebase from \"firebase/compat\";\nimport axios from \"axios\";\nimport {Input} from \"antd\";\nconst { Search } = Input;\n\n\nconst containerStyle = {\n    width: '600px',\n    height: '400px',\n    float:'left'\n};\n\n\nexport default function map() {\n\n    const firebaseConfig = {\n        apiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\",\n        authDomain: \"urban-computing-cb07c.firebaseapp.com\",\n        databaseURL: \"https://urban-computing-cb07c-default-rtdb.firebaseio.com\",\n        projectId: \"urban-computing-cb07c\",\n        storageBucket: \"urban-computing-cb07c.appspot.com\",\n        messagingSenderId: \"293478437107\",\n        appId: \"1:293478437107:web:4cd5199b68f68eac542786\",\n        measurementId: \"G-3Z5DD1SJYQ\"\n    };\n    const [count, setCount] =React.useState({lat: 53.49332, lng: -6.3});\n\n    React.useEffect(()=>{\n            firebase.initializeApp(firebaseConfig);\n            firebase.database().ref('/').on('value',(snap)=> {\n                let obj = snap.val();\n                if (obj !== null) {\n                    for (var key in obj) {\n                        if(key.split(',')[2]>'22 13:35:00') {\n                            setCount(obj[key]);\n                            console.log(obj[key]);\n                        }\n                    }\n                }\n            });\n    },[]);\n    const {isLoaded} = useJsApiLoader({\n        id: 'google-map-script',\n        googleMapsApiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\"\n    });\n\n    const [myArr, setMyArr] = React.useState([]);\n    const [NameArray, setNameArray] = React.useState([]);\n    var num=0;\n    var search;\n    function QueryData(value:string){\n        search=value;\n        num=num+1;\n        console.log(num);\n        axios.get('https://maps.googleapis.com/maps/api/place/nearbysearch/json', {\n            params: {\n                key: 'AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c',\n                types: value,\n                location: '53.49332,-6.31718',\n                radius: '1000000'\n            }\n        }).then(function (response) {\n                const result = response.data.results;\n                for (var key in result) {\n                    myArr.push(result[key].geometry.location);\n                    axios.get('/api/add', {\n                        params: {\n                            id: num,\n                            search:value,\n                            title: result[key].geometry.location,\n                            text: result[key].name,\n                            picture:result[key].photos\n                        }\n                    });\n                }\n                console.log(result[key].photos);\n                console.log(num);\n        })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n\n    function updatePosition()\n    {\n        var mapOptions = {\n            zoom: 17,\n            center: {lat: 53.49332, lng: -6.31718}\n        };\n        console.log(count);\n        let map1 = new window.google.maps.Map(document.getElementById(\"map\"),mapOptions);\n        console.log(search);\n        FindUserDataApi({}).then(response => {\n            const result = response;\n            console.log(result.search);\n            for (var key in result) {\n                if(parseFloat(result[key].title.replace(/\\\"/g, \"\").split(',')[1])!==\"\") {\n                    var lat = [parseFloat(result[key].title.replace(/\\\"/g, \"\").split(',')[0].split(':')[1]), count.lat];\n                    var lng = [parseFloat(result[key].title.replace(/\\\"/g, \"\").split(',')[1].split(':')[1].replace(/\\}/g, \"\")), count.lng];\n                    var R = 6378137;\n                    var dLat = (lat[1] - lat[0]) * Math.PI / 180;\n                    var dLng = (lng[1] - lng[0]) * Math.PI / 180;\n                    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat[0] * Math.PI / 180) * Math.cos(lat[1] * Math.PI / 180) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n                    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n                    var d = R * c;\n                    if ((d < 1000000) && (result[key].search === search)) {\n                        const marker1 = new window.google.maps.Marker({\n                            position: {\n                                lat: parseFloat(result[key].title.replace(/\\\"/g, \"\").split(',')[0].split(':')[1]),\n                                lng: parseFloat(result[key].title.replace(/\\\"/g, \"\").split(',')[1].split(':')[1].replace(/\\}/g, \"\"))\n                            },\n                        });\n                        marker1.setMap(map1);\n                        NameArray.push([result[key].text, result[key].title]);\n                        setNameArray(NameArray);\n                        let myLatlng = new window.google.maps.LatLng(parseFloat(result[key].title.replace(/\\\"/g, \"\").split(',')[0].split(':')[1]),parseFloat(result[key].title.replace(/\\\"/g, \"\").split(',')[1].split(':')[1].replace(/\\}/g, \"\")));\n                        map1.setCenter(myLatlng);\n                        console.log(1);\n                    }\n                }\n            }\n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n\n    // const forceUpdate= React.useCallback((map) =>{\n    //\n    //         const marker1 = new window.google.maps.Marker({\n    //             position: count,\n    //             title: \"starting\"\n    //         });\n    //         console.log(count);\n    //         // FindUserDataApi({}).then(response => {\n    //         //     const result = response;\n    //         //     for (var key in result) {\n    //         //         if(parseFloat(result[key].title.replace(/\\\"/g, \"\").split(',')[1])!==\"\") {\n    //         //             var lat = [parseFloat(result[key].title.replace(/\\\"/g, \"\").split(',')[0].split(':')[1]), count.lat];\n    //         //             var lng = [parseFloat(result[key].title.replace(/\\\"/g, \"\").split(',')[1].split(':')[1].replace(/\\}/g, \"\")), count.lng];\n    //         //             var R = 6378137;\n    //         //             var dLat = (lat[1] - lat[0]) * Math.PI / 180;\n    //         //             var dLng = (lng[1] - lng[0]) * Math.PI / 180;\n    //         //             var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat[0] * Math.PI / 180) * Math.cos(lat[1] * Math.PI / 180) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n    //         //             var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    //         //             var d = R * c;\n    //         //             if ((d < 100000) && (result[key].search === search)) {\n    //         //                 const marker = new window.google.maps.Marker({\n    //         //                     position: {\n    //         //                         lat: parseFloat(result[key].title.replace(/\\\"/g, \"\").split(',')[0].split(':')[1]),\n    //         //                         lng: parseFloat(result[key].title.replace(/\\\"/g, \"\").split(',')[1].split(':')[1].replace(/\\}/g, \"\"))\n    //         //                     },\n    //         //                 });\n    //         //                 NameArray.push([result[key].text, result[key].title]);\n    //         //                 setNameArray(NameArray);\n    //         //                 marker.setMap(map);\n    //         //             }\n    //         //         }\n    //         //     }\n    //         // });\n    //         marker1.setMap(map);\n    //     },[]);\n\n\n\n    return(\n        <div>\n            {/*<GoogleMap style={{Left:'10px',fontWeight:'bold',marginTop:'10px',color:'#0066FF'}}  mapContainerStyle={containerStyle}  center={count}  zoom={10}  onLoad={forceUpdate} > </GoogleMap>*/}\n            <div id=\"map\" style={{height:'600px',width:'400px'}}></div>\n            <button style={{marginLeft:'400px',marginTop:'-300px'}} onClick={updatePosition} href=\"#\"> update </button>\n            <Search style={{width:'330px',marginLeft:'500px',marginBottom:'5px',marginTop:'-700px'}} placeholder=\"Search nearest store\" onSearch={QueryData}></Search>\n            <div style={{padding: '30px'}}>\n                {NameArray.map(item => (\n                <p\n                    style={{\n                        width:'330px',\n                        height:'80px',\n                        marginLeft:'669px',\n                        backgroundColor:'white'\n                    }}\n                >\n                <p style={{marginLeft:'10px'}}>{item[0]}</p>\n                <p style={{marginLeft:'10px'}}>{item[1]}</p>\n\n                </p>\n                ))}\n              </div>\n            <script async defer src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c&callback=initMap\">\n            </script>\n        </div>\n    );\n\n}\n\n"]},"metadata":{},"sourceType":"module"}