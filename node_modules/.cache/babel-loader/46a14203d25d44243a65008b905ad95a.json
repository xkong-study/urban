{"ast":null,"code":"import _toConsumableArray from \"/Users/kong/Desktop/game-cloud-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/kong/Desktop/game-cloud-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kong/Desktop/game-cloud-frontend/src/pages/Means.jsx\";\nimport { DislikeFilled, DislikeOutlined, LikeFilled, LikeOutlined } from '@ant-design/icons';\nimport React, { createElement, useEffect, useState } from 'react';\nimport { Avatar, Comment, Tooltip, Button, Form, Input, List } from 'antd';\nimport moment from 'moment';\nimport { message } from 'antd';\nimport VirtualList from 'rc-virtual-list';\nimport { AddCommentDataApi, GetCommentDataApi } from \"./request/api\";\nvar TextArea = Input.TextArea;\nexport default function Means() {\n  var _this = this;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      likes = _useState2[0],\n      setLikes = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dislikes = _useState4[0],\n      setDislikes = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      action = _useState6[0],\n      setAction = _useState6[1];\n\n  var like = function like() {\n    setLikes(1);\n    setDislikes(0);\n    setAction('liked');\n  };\n\n  var dislike = function dislike() {\n    setLikes(0);\n    setDislikes(1);\n    setAction('disliked');\n  };\n\n  var actions = [/*#__PURE__*/React.createElement(Tooltip, {\n    key: \"comment-basic-like\",\n    title: \"Like\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: like,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, createElement(action === 'liked' ? LikeFilled : LikeOutlined), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"comment-action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, likes))), /*#__PURE__*/React.createElement(Tooltip, {\n    key: \"comment-basic-dislike\",\n    title: \"Dislike\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: dislike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(action === 'disliked' ? DislikeFilled : DislikeOutlined), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"comment-action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, dislikes))), /*#__PURE__*/React.createElement(\"span\", {\n    key: \"comment-basic-reply-to\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Reply to\")];\n  return /*#__PURE__*/React.createElement(Comment, {\n    actions: actions,\n    author: /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, \"Han Solo\"),\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: \"https://joeschmoe.io/api/v1/random\",\n      alt: \"Han Solo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }),\n    content: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.\"),\n    datetime: /*#__PURE__*/React.createElement(Tooltip, {\n      title: moment().format('YYYY-MM-DD HH:mm:ss'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, moment().fromNow())),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  });\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      comments = _useState8[0],\n      setComments = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      submitting = _useState10[0],\n      setSubmitting = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      value = _useState12[0],\n      setValue = _useState12[1];\n\n  console.log(value);\n  useEffect(function () {\n    var params = {\n      id: '2'\n    };\n    GetCommentDataApi({\n      params: params\n    }).then(function (res) {\n      var newArr = JSON.parse(JSON.stringify(res)); //深拷贝\n\n      newArr.map(function (item) {\n        setValue(item.value);\n      });\n    });\n  }, []);\n\n  var CommentList = function CommentList(_ref) {\n    var comments = _ref.comments;\n    return /*#__PURE__*/React.createElement(List, {\n      dataSource: comments,\n      header: \"\".concat(comments.length, \" \").concat(comments.length > 1 ? 'replies' : 'reply'),\n      itemLayout: \"horizontal\",\n      renderItem: function renderItem(props) {\n        return /*#__PURE__*/React.createElement(Comment, Object.assign({}, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 36\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    });\n  };\n\n  var Editor = function Editor(_ref2) {\n    var onChange = _ref2.onChange,\n        onSubmit = _ref2.onSubmit,\n        submitting = _ref2.submitting,\n        value = _ref2.value;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Item, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextArea, {\n      rows: 4,\n      onChange: onChange,\n      value: value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      htmlType: \"submit\",\n      loading: submitting,\n      onClick: onSubmit,\n      type: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, \"Add Comment\")));\n  };\n\n  var handleSubmit = function handleSubmit(value) {\n    var params = {\n      id: '4',\n      value: value,\n      author: '张近东',\n      comments: 'niusbility'\n    };\n    console.log(params);\n    AddCommentDataApi({\n      params: params\n    }).then(function (response) {\n      console.log(response);\n      window.location.reload();\n      if (!value) return;\n      setSubmitting(true);\n      setTimeout(function () {\n        setSubmitting(false);\n        setValue('');\n        setComments([].concat(_toConsumableArray(comments), [{\n          author: response.author,\n          avatar: 'https://joeschmoe.io/api/v1/random',\n          content: response.content,\n          datetime: moment().fromNow()\n        }]));\n        console.log(comments);\n      }, 1000);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var handleChange = function handleChange(e) {\n    setValue(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, comments.length > 0 && /*#__PURE__*/React.createElement(CommentList, {\n    comments: comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Comment, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: \"https://joeschmoe.io/api/v1/random\",\n      alt: \"Han Solo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }\n    }),\n    content: /*#__PURE__*/React.createElement(Editor, {\n      onChange: handleChange,\n      onSubmit: handleSubmit.bind(this, value),\n      submitting: submitting,\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }));\n}\n;","map":{"version":3,"sources":["/Users/kong/Desktop/game-cloud-frontend/src/pages/Means.jsx"],"names":["DislikeFilled","DislikeOutlined","LikeFilled","LikeOutlined","React","createElement","useEffect","useState","Avatar","Comment","Tooltip","Button","Form","Input","List","moment","message","VirtualList","AddCommentDataApi","GetCommentDataApi","TextArea","Means","likes","setLikes","dislikes","setDislikes","action","setAction","like","dislike","actions","format","fromNow","comments","setComments","submitting","setSubmitting","value","setValue","console","log","params","id","then","res","newArr","JSON","parse","stringify","map","item","CommentList","length","props","Editor","onChange","onSubmit","handleSubmit","author","response","window","location","reload","setTimeout","avatar","content","datetime","catch","error","handleChange","e","target","bind"],"mappings":"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","sourcesContent":["import { DislikeFilled, DislikeOutlined, LikeFilled, LikeOutlined } from '@ant-design/icons';\nimport React, {createElement, useEffect, useState} from 'react';\nimport { Avatar, Comment, Tooltip, Button, Form, Input, List } from 'antd';\nimport moment from 'moment';\nimport { message } from 'antd';\nimport VirtualList from 'rc-virtual-list';\nimport {AddCommentDataApi, GetCommentDataApi} from \"./request/api\";\nconst { TextArea } = Input;\n\n\nexport default function Means() {\n    const [likes, setLikes] = useState(0);\n    const [dislikes, setDislikes] = useState(0);\n    const [action, setAction] = useState(null);\n\n    const like = () => {\n        setLikes(1);\n        setDislikes(0);\n        setAction('liked');\n    };\n\n    const dislike = () => {\n        setLikes(0);\n        setDislikes(1);\n        setAction('disliked');\n    };\n\n    const actions = [\n        <Tooltip key=\"comment-basic-like\" title=\"Like\">\n      <span onClick={like}>\n        {createElement(action === 'liked' ? LikeFilled : LikeOutlined)}\n          <span className=\"comment-action\">{likes}</span>\n      </span>\n        </Tooltip>,\n        <Tooltip key=\"comment-basic-dislike\" title=\"Dislike\">\n      <span onClick={dislike}>\n        {React.createElement(action === 'disliked' ? DislikeFilled : DislikeOutlined)}\n          <span className=\"comment-action\">{dislikes}</span>\n      </span>\n        </Tooltip>,\n        <span key=\"comment-basic-reply-to\">Reply to</span>,\n    ];\n    return (\n        <Comment\n            actions={actions}\n            author={<a>Han Solo</a>}\n            avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" alt=\"Han Solo\" />}\n            content={\n                <p>\n                    We supply a series of design principles, practical patterns and high quality design\n                    resources (Sketch and Axure), to help people create their product prototypes beautifully\n                    and efficiently.\n                </p>\n            }\n            datetime={\n                <Tooltip title={moment().format('YYYY-MM-DD HH:mm:ss')}>\n                    <span>{moment().fromNow()}</span>\n                </Tooltip>\n            }\n        />\n    );\n\n\n    const [comments, setComments] = useState([]);\n    const [submitting, setSubmitting] = useState(false);\n    const [value, setValue] = useState('');\n    console.log(value)\n\n    useEffect(()=>{\n        let params={\n            id:'2'\n        }\n        GetCommentDataApi({params}).then(res=> {\n            let newArr=JSON.parse(JSON.stringify(res));//深拷贝\n            newArr.map(item=>{\n                    setValue(item.value)\n            })\n        })\n    },[])\n\n    const CommentList = ({ comments }) => (\n        <List\n            dataSource={comments}\n            header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\n            itemLayout=\"horizontal\"\n            renderItem={(props) => <Comment {...props} />}\n        />\n    );\n\n    const Editor = ({ onChange, onSubmit, submitting, value }) => (\n        <>\n            <Form.Item>\n                <TextArea rows={4} onChange={onChange} value={value} />\n            </Form.Item>\n            <Form.Item>\n                <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit} type=\"primary\">\n                    Add Comment\n                </Button>\n            </Form.Item>\n        </>\n    );\n\n    const handleSubmit = (value) => {\n        let params = {\n            id: '4',\n            value:value,\n            author:'张近东',\n            comments:'niusbility'\n        }\n        console.log(params)\n        AddCommentDataApi({params}).then(function (response) {\n            console.log(response);\n            window.location.reload()\n            if (!value) return;\n            setSubmitting(true);\n            setTimeout(() => {\n                setSubmitting(false);\n                setValue('');\n                setComments([\n                    ...comments,\n                    {\n                        author: response.author,\n                        avatar: 'https://joeschmoe.io/api/v1/random',\n                        content: response.content,\n                        datetime: moment().fromNow(),\n                    },\n                ]);\n                console.log(comments)\n            }, 1000);\n        })\n            .catch(function (error) {\n                console.log(error);\n            });\n    };\n\n    const handleChange = (e) => {\n        setValue(e.target.value);\n    };\n    return (\n        <>\n            {comments.length > 0 && <CommentList comments={comments} />}\n            <Comment\n                avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" alt=\"Han Solo\" />}\n                content={\n                    <Editor\n                        onChange={handleChange}\n                        onSubmit={handleSubmit.bind(this,value)}\n                        submitting={submitting}\n                        value={value}\n                    />\n                }\n            />\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}