{"ast":null,"code":"/* jshint esversion: 6 */\nimport { MarkerClusterer, useJsApiLoader } from \"@react-google-maps/api\"; // const randomPosition = () => ({\n//     longitude: 53 + Math.random(),\n//     latitude: -6 + Math.random()\n// });\n// const randomMarker = (len) => (\n//     Array(len).fill(true).map((e, idx) => ({\n//         position: randomPosition()\n//     }))\n// );\n//\n//\n//     const [count,setCount] = React.useState({markers: randomMarker(10)});\n//     const randomMarkers=function (){\n//         setCount({markers: randomMarker(10)});\n//     };\n//     const plugins = [\n//         'MapType',\n//         'Scale',\n//         'OverView',\n//         'ControlBar', // v1.1.0 新增\n//         {\n//             name: 'ToolBar',\n//             options: {\n//                 visible: true,  // 不设置该属性默认就是 true\n//                 onCreated(ins){\n//                     console.log(ins);\n//                 },\n//             },\n//         }\n//     ];\n//     return(\n//             <div>\n//             <div style={{width: '100%', height: 372}}>\n//                 <Map plugins={plugins}  zoom={6} center={{longitude: 53,latitude: -6}}>\n//                     <Markers\n//                         markers={count.markers}\n//                     />\n//                 </Map>\n//             </div>\n//             <button onClick={randomMarkers.bind(this)}>Random Markers</button>\n//         </div>\n//         )\n// }\n//\n//\n//\n//\n// // import React, { Component } from 'react';\n// // import { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\n// //\n// // import CurrentLocation from './Map';\n// // import {Map} from \"react-amap\";\n// //\n// // export default function Test(){\n// //     const state = {\n// //         showingInfoWindow: false,\n// //         activeMarker: {},\n// //         selectedPlace: {}\n// //     };\n// //\n// //     const onMarkerClick = (props, marker, e) =>\n// //         this.setState({\n// //             selectedPlace: props,\n// //             activeMarker: marker,\n// //             showingInfoWindow: true\n// //         });\n// //\n// //     const onClose = props => {\n// //         if (this.state.showingInfoWindow) {\n// //             this.setState({\n// //                 showingInfoWindow: false,\n// //                 activeMarker: null\n// //             });\n// //         }\n// //     };\n// //\n// //         return (\n// //             <CurrentLocation\n// //                 centerAroundCurrentLocation\n// //                 google={this.props.google}\n// //             ><Map\n// //                 google={this.props.google}\n// //                 zoom={14}\n// //                 initialCenter={{\n// //                     lat: -1.2884,\n// //                     lng: 36.8233\n// //                 }}\n// //             />\n// //\n// //                 <Marker onClick={onMarkerClick} name={'current location'} />\n// //                 <InfoWindow\n// //                     marker={state.activeMarker}\n// //                     visible={state.showingInfoWindow}\n// //                     onClose={onClose}\n// //                 >\n// //                     <div>\n// //                         <h4>{state.selectedPlace.name}</h4>\n// //                     </div>\n// //                 </InfoWindow>\n// //             </CurrentLocation>\n// //         );\n// //   }\n// //\n//Create a new map\n\n/*global google*/\n// import React from \"react\";\n// import { compose, withProps, withHandlers, withState } from \"recompose\";\n// import { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\n//\n// const MyMapComponent = compose(\n//     withProps({\n//         googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\",\n//         loadingElement: <div style={{ height: `100%` }} />,\n//         containerElement: <div style={{ height: `400px` }} />,\n//         mapElement: <div style={{ height: `100%` }} />,\n//     }),\n//     withScriptjs,\n//     withGoogleMap,\n//     withState('places', 'updatePlaces', ''),\n//     withHandlers(() => {\n//         const refs = {\n//             map: undefined,\n//         }\n//\n//         return {\n//             onMapMounted: () => ref => {\n//                 refs.map = ref\n//             },\n//             fetchPlaces: ({ updatePlaces }) => {\n//                 let places;\n//                 const bounds = refs.map.getBounds();\n//                 const service = new google.maps.places.PlacesService(refs.map.context.__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED);\n//                 const request = {\n//                     bounds: bounds,\n//                     type: ['hotel']\n//                 };\n//                 service.nearbySearch(request, (results, status) => {\n//                     if (status == google.maps.places.PlacesServiceStatus.OK) {\n//                         console.log(results);\n//                         updatePlaces(results);\n//                     }\n//                 })\n//             }\n//         }\n//     }),\n// )((props) => {\n//     return (\n//         <GoogleMap\n//             onTilesLoaded={props.fetchPlaces}\n//             ref={props.onMapMounted}\n//             onBoundsChanged={props.fetchPlaces}\n//             defaultZoom={8}\n//             defaultCenter={{ lat: 51.508530, lng: -0.076132 }}\n//         >\n//             {props.places && props.places.map((place, i) =>\n//                 <Marker key={i} position={{ lat: place.geometry.location.lat(), lng: place.geometry.location.lng() }} />\n//             )}\n//         </GoogleMap>\n//     )\n// })\n// const { isLoaded } = useJsApiLoader({\n//     id: 'google-map-script',\n//     googleMapsApiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\"\n// });\n//\n// export default class MyFancyComponent extends React.PureComponent {\n//     render () {\n//         return isLoaded ?(\n//             <MyMapComponent />\n//         ): <></>\n//     }\n// }\n//","map":{"version":3,"sources":["/Users/kong/Desktop/urban_react/src/pages/test.jsx"],"names":["MarkerClusterer","useJsApiLoader"],"mappings":"AAAA;AACA,SAAQA,eAAR,EAAyBC,cAAzB,QAA8C,wsourcesContent":["/* jshint esversion: 6 */\nimport {MarkerClusterer, useJsApiLoader} from \"@react-google-maps/api\";\n// const randomPosition = () => ({\n//     longitude: 53 + Math.random(),\n//     latitude: -6 + Math.random()\n// });\n// const randomMarker = (len) => (\n//     Array(len).fill(true).map((e, idx) => ({\n//         position: randomPosition()\n//     }))\n// );\n//\n\n//\n//     const [count,setCount] = React.useState({markers: randomMarker(10)});\n//     const randomMarkers=function (){\n//         setCount({markers: randomMarker(10)});\n//     };\n//     const plugins = [\n//         'MapType',\n//         'Scale',\n//         'OverView',\n//         'ControlBar', // v1.1.0 新增\n//         {\n//             name: 'ToolBar',\n//             options: {\n//                 visible: true,  // 不设置该属性默认就是 true\n//                 onCreated(ins){\n//                     console.log(ins);\n//                 },\n//             },\n//         }\n//     ];\n//     return(\n//             <div>\n//             <div style={{width: '100%', height: 372}}>\n//                 <Map plugins={plugins}  zoom={6} center={{longitude: 53,latitude: -6}}>\n//                     <Markers\n//                         markers={count.markers}\n//                     />\n//                 </Map>\n//             </div>\n//             <button onClick={randomMarkers.bind(this)}>Random Markers</button>\n//         </div>\n//         )\n// }\n//\n//\n//\n//\n// // import React, { Component } from 'react';\n// // import { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\n// //\n// // import CurrentLocation from './Map';\n// // import {Map} from \"react-amap\";\n// //\n// // export default function Test(){\n// //     const state = {\n// //         showingInfoWindow: false,\n// //         activeMarker: {},\n// //         selectedPlace: {}\n// //     };\n// //\n// //     const onMarkerClick = (props, marker, e) =>\n// //         this.setState({\n// //             selectedPlace: props,\n// //             activeMarker: marker,\n// //             showingInfoWindow: true\n// //         });\n// //\n// //     const onClose = props => {\n// //         if (this.state.showingInfoWindow) {\n// //             this.setState({\n// //                 showingInfoWindow: false,\n// //                 activeMarker: null\n// //             });\n// //         }\n// //     };\n// //\n// //         return (\n// //             <CurrentLocation\n// //                 centerAroundCurrentLocation\n// //                 google={this.props.google}\n// //             ><Map\n// //                 google={this.props.google}\n// //                 zoom={14}\n// //                 initialCenter={{\n// //                     lat: -1.2884,\n// //                     lng: 36.8233\n// //                 }}\n// //             />\n// //\n// //                 <Marker onClick={onMarkerClick} name={'current location'} />\n// //                 <InfoWindow\n// //                     marker={state.activeMarker}\n// //                     visible={state.showingInfoWindow}\n// //                     onClose={onClose}\n// //                 >\n// //                     <div>\n// //                         <h4>{state.selectedPlace.name}</h4>\n// //                     </div>\n// //                 </InfoWindow>\n// //             </CurrentLocation>\n// //         );\n// //   }\n// //\n\n\n//Create a new map\n\n\n/*global google*/\n// import React from \"react\";\n// import { compose, withProps, withHandlers, withState } from \"recompose\";\n// import { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\n//\n// const MyMapComponent = compose(\n//     withProps({\n//         googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\",\n//         loadingElement: <div style={{ height: `100%` }} />,\n//         containerElement: <div style={{ height: `400px` }} />,\n//         mapElement: <div style={{ height: `100%` }} />,\n//     }),\n//     withScriptjs,\n//     withGoogleMap,\n//     withState('places', 'updatePlaces', ''),\n//     withHandlers(() => {\n//         const refs = {\n//             map: undefined,\n//         }\n//\n//         return {\n//             onMapMounted: () => ref => {\n//                 refs.map = ref\n//             },\n//             fetchPlaces: ({ updatePlaces }) => {\n//                 let places;\n//                 const bounds = refs.map.getBounds();\n//                 const service = new google.maps.places.PlacesService(refs.map.context.__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED);\n//                 const request = {\n//                     bounds: bounds,\n//                     type: ['hotel']\n//                 };\n//                 service.nearbySearch(request, (results, status) => {\n//                     if (status == google.maps.places.PlacesServiceStatus.OK) {\n//                         console.log(results);\n//                         updatePlaces(results);\n//                     }\n//                 })\n//             }\n//         }\n//     }),\n// )((props) => {\n//     return (\n//         <GoogleMap\n//             onTilesLoaded={props.fetchPlaces}\n//             ref={props.onMapMounted}\n//             onBoundsChanged={props.fetchPlaces}\n//             defaultZoom={8}\n//             defaultCenter={{ lat: 51.508530, lng: -0.076132 }}\n//         >\n//             {props.places && props.places.map((place, i) =>\n//                 <Marker key={i} position={{ lat: place.geometry.location.lat(), lng: place.geometry.location.lng() }} />\n//             )}\n//         </GoogleMap>\n//     )\n// })\n// const { isLoaded } = useJsApiLoader({\n//     id: 'google-map-script',\n//     googleMapsApiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\"\n// });\n//\n// export default class MyFancyComponent extends React.PureComponent {\n//     render () {\n//         return isLoaded ?(\n//             <MyMapComponent />\n//         ): <></>\n//     }\n// }\n//\n"]},"metadata":{},"sourceType":"module"}