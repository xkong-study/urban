{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _isFun = require('../utils/isFun');\n\nvar _isFun2 = _interopRequireDefault(_isFun);\n\nvar _log = require('../utils/log');\n\nvar _log2 = _interopRequireDefault(_log);\n\nvar _markerUtils = require('../utils/markerUtils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nif (typeof window !== 'undefined') {\n  var styleText = '.amap_markers_pop_window{\\n    padding: 10px;\\n    border: 1px solid #ddd;\\n    border-radius: 8px;\\n    background: #fff;\\n    position: relative;\\n    display: flex;\\n    flex-wrap: wrap;\\n    justify-content: flex-start;\\n}\\n.amap_markers_pop_window::before{\\n    content: \\' \\';\\n    display: block;\\n    position: absolute;\\n    bottom: -12px;\\n    left: 50%;\\n    margin-left: -7px;\\n    width: 0;\\n    height: 0;\\n    border-top: 12px solid #ddd;\\n    border-left: 7px solid transparent;\\n    border-right: 7px solid transparent;\\n}\\n.amap_markers_pop_window::after{\\n    content: \\' \\';\\n    display: block;\\n    position: absolute;\\n    bottom: -11px;\\n    left: 50%;\\n    margin-left: -6px;\\n    width: 0;\\n    height: 0;\\n    border-top: 11px solid #fff;\\n    border-left: 6px solid transparent;\\n    border-right: 6px solid transparent;\\n}\\n.amap_markers_pop_window_item{\\n    cursor:pointer;\\n    width: 40px;\\n    height: 50px;\\n    display: flex;\\n    align-items: flex-end;\\n    justify-content: center;\\n}\\n.amap_markers_pop_window_item span{\\n    pointer-events: none;\\n}\\n.amap_markers_window_overflow_warning{\\n    text-align: center;\\n    width: 100%;\\n    margin: 5px 0;\\n    color: #666;\\n}';\n  var headEl = document.head || document.getElementsByTagName('head')[0];\n  var styleEl = document.createElement('style');\n  styleEl.type = 'text/css';\n  styleEl.textContent = styleText;\n  headEl.appendChild(styleEl);\n}\n\nvar Component = _react2.default.Component;\nvar SCALE = 0.8;\nvar SIZE_WIDTH = 32 * SCALE;\nvar SIZE_HEIGHT = 46 * SCALE - 2;\nvar SIZE_HOVER_WIDTH = 46 * SCALE;\nvar SIZE_HOVER_HEIGHT = 66 * SCALE - 2;\nvar MAX_INFO_MARKERS = 42;\nvar defaultOpts = {\n  useCluster: false,\n  markersCache: [],\n  markerIDCache: []\n};\nvar ClusterProps = ['gridSize', 'minClusterSize', 'maxZoom', 'averageCenter', 'styles', 'zoomOnClick', 'renderCluserMarker'];\nvar IdKey = '__react_amap__';\n/*\n * props\n * {\n *  useCluster(boolean)是否使用聚合点\n *  markers(array<>)坐标列表\n *  __map__ 父级组件传过来的地图实例\n *  __ele__ 父级组件传过来的地图容器\n * }\n */\n\nvar Markers = function (_Component) {\n  _inherits(Markers, _Component);\n\n  function Markers(props) {\n    _classCallCheck(this, Markers);\n\n    var _this = _possibleConstructorReturn(this, (Markers.__proto__ || Object.getPrototypeOf(Markers)).call(this, props));\n\n    if (typeof window !== 'undefined') {\n      if (!props.__map__) {\n        _log2.default.warning('MAP_INSTANCE_REQUIRED');\n      } else {\n        _this.map = props.__map__;\n        _this.element = _this.map.getContainer();\n        _this.markersCache = defaultOpts.markersCache;\n        _this.useCluster = null;\n        _this.markerIDCache = defaultOpts.markerIDCache;\n        _this.resetOffset = new window.AMap.Pixel(-SIZE_WIDTH / 2, -SIZE_HEIGHT);\n        _this.hoverOffset = new window.AMap.Pixel(-SIZE_HOVER_WIDTH / 2, -SIZE_HOVER_HEIGHT);\n\n        _this.createMarkers(props);\n      }\n    }\n\n    return _this;\n  }\n\n  _createClass(Markers, [{\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: 'createMarkers',\n    value: function createMarkers(props) {\n      var _this2 = this;\n\n      var markers = props.markers || [];\n      var mapMarkers = [];\n      var markerReactChildDOM = {};\n      markers.length && markers.forEach(function (raw, idx) {\n        var options = _this2.buildCreateOptions(props, raw, idx);\n\n        options.map = _this2.map;\n        var markerContent = null;\n\n        if ((0, _isFun2.default)(props.render)) {\n          // $FlowFixMe\n          var markerChild = props.render(raw);\n\n          if (markerChild !== false) {\n            var div = document.createElement('div');\n            div.setAttribute(IdKey, '1');\n            markerContent = div;\n            markerReactChildDOM[idx] = markerChild;\n          }\n        }\n\n        if (!markerContent) {\n          markerContent = document.createElement('div');\n          var img = document.createElement('img');\n          img.src = '//webapi.amap.com/theme/v1.3/markers/n/mark_bs.png';\n          markerContent.appendChild(img);\n        }\n\n        options.content = markerContent;\n        var marker = new window.AMap.Marker(options);\n        marker.on('click', function (e) {\n          _this2.onMarkerClick(e);\n        });\n        marker.on('mouseover', function (e) {\n          _this2.onMarkerHover(e);\n        });\n        marker.on('mouseout', function (e) {\n          _this2.onMarkerHoverOut(e);\n        });\n\n        marker.render = function (marker) {\n          return function (component) {\n            return (0, _markerUtils.renderMarkerComponent)(component, marker);\n          };\n        }(marker);\n\n        _this2.bindMarkerEvents(marker);\n\n        mapMarkers.push(marker);\n      });\n      this.markersCache = mapMarkers;\n      this.markerReactChildDOM = markerReactChildDOM;\n      this.exposeMarkerInstance();\n      this.checkClusterSettings(props);\n    }\n  }, {\n    key: 'checkClusterSettings',\n    value: function checkClusterSettings(props) {\n      var _this3 = this;\n\n      if (props.useCluster) {\n        this.loadClusterPlugin(props.useCluster).then(function (cluster) {\n          cluster.setMarkers(_this3.markersCache);\n        });\n      } else {\n        if (this.mapCluster) {\n          var markers = this.mapCluster.getMarkers();\n          this.mapCluster.clearMarkers();\n          markers.forEach(function (marker) {\n            marker.setMap(_this3.map);\n          });\n        }\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (this.map) {\n        this.setMarkerChild();\n      }\n    }\n  }, {\n    key: 'setMarkerChild',\n    value: function setMarkerChild() {\n      var _this4 = this;\n\n      Object.keys(this.markerReactChildDOM).forEach(function (idx) {\n        var dom = _this4.markersCache[idx].getContent();\n\n        var child = _this4.markerReactChildDOM[idx];\n\n        _this4.renderMarkerChild(dom, child);\n      });\n    }\n  }, {\n    key: 'renderMarkerChild',\n    value: function renderMarkerChild(dom, child) {\n      (0, _reactDom.render)(_react2.default.createElement('div', null, child), dom);\n    }\n  }, {\n    key: 'buildCreateOptions',\n    value: function buildCreateOptions(props, raw, idx) {\n      var result = {}; // 强制用户通过 render 函数来定义外观\n      // const disabledKeys = ['label', 'icon', 'content'];\n      // 还是不强制好，通过覆盖的方式来(如果有 render，覆盖 content/icon);\n\n      var disabledKeys = ['extData'];\n\n      _markerUtils.MarkerAllProps.forEach(function (key) {\n        if (key in raw && disabledKeys.indexOf(key) === -1) {\n          result[key] = (0, _markerUtils.getPropValue)(key, raw[key]);\n        } else if (key in props) {\n          if ((0, _isFun2.default)(props[key])) {\n            var tmpValue = props[key].call(null, raw, idx);\n            result[key] = (0, _markerUtils.getPropValue)(key, tmpValue);\n          } else {\n            result[key] = (0, _markerUtils.getPropValue)(key, props[key]);\n          }\n        }\n      });\n\n      result.extData = raw;\n      return result;\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.map) {\n        this.refreshMarkersLayout(nextProps);\n      }\n    }\n  }, {\n    key: 'refreshMarkersLayout',\n    value: function refreshMarkersLayout(nextProps) {\n      var markerChanged = nextProps.markers !== this.props.markers;\n      var clusterChanged = !!this.props.useCluster !== !!nextProps.useCluster;\n\n      if (markerChanged) {\n        this.markersCache.length && this.markersCache.forEach(function (marker) {\n          if (marker) {\n            marker.setMap(null);\n            marker = null;\n          }\n        });\n        this.markersCache = defaultOpts.markersCache;\n        this.createMarkers(nextProps);\n        this.setMarkerChild();\n      }\n\n      if (markerChanged || clusterChanged) {\n        if (this.markersWindow) {\n          this.markersWindow.close();\n        }\n      }\n\n      if (clusterChanged) {\n        this.checkClusterSettings(nextProps);\n      }\n    }\n  }, {\n    key: 'loadClusterPlugin',\n    value: function loadClusterPlugin(clusterConfig) {\n      var _this5 = this;\n\n      if (this.mapCluster) {\n        return Promise.resolve(this.mapCluster);\n      }\n\n      var config = typeof clusterConfig === 'boolean' ? {} : clusterConfig;\n      return new Promise(function (resolve) {\n        _this5.map.plugin(['AMap.MarkerClusterer'], function () {\n          resolve(_this5.createClusterPlugin(config));\n        });\n      });\n    }\n  }, {\n    key: 'createClusterPlugin',\n    value: function createClusterPlugin(config) {\n      var options = {}; // const style = {\n      //   url: clusterIcon,\n      //   size: new window.AMap.Size(56, 56),\n      //   offset: new window.AMap.Pixel(-28, -28)\n      // };\n\n      var defalutOptions = {\n        minClusterSize: 2,\n        zoomOnClick: false,\n        maxZoom: 18,\n        gridSize: 60,\n        // styles: [style, style, style],\n        averageCenter: true\n      };\n      ClusterProps.forEach(function (key) {\n        if (key in config) {\n          options[key] = config[key];\n        } else {\n          options[key] = defalutOptions[key];\n        }\n      });\n      this.mapCluster = new window.AMap.MarkerClusterer(this.map, [], options);\n      var events = {};\n\n      if ('events' in config) {\n        events = config.events;\n\n        if ('created' in events) {\n          events.created(this.mapCluster);\n        }\n      }\n\n      this.initClusterMarkerWindow();\n      this.bindClusterEvent(events);\n      return this.mapCluster;\n    }\n  }, {\n    key: 'onMarkerClick',\n    value: function onMarkerClick(e) {\n      var marker = e.target;\n      this.triggerMarkerClick(e, marker);\n    }\n  }, {\n    key: 'onMarkerHover',\n    value: function onMarkerHover(e) {\n      e.target.setTop(true);\n      this.setMarkerHovered(e, e.target);\n    }\n  }, {\n    key: 'onMarkerHoverOut',\n    value: function onMarkerHoverOut(e) {\n      e.target.setTop(false);\n      this.setMarkerHoverOut(e, e.target);\n    }\n  }, {\n    key: 'onWindowMarkerClick',\n    value: function onWindowMarkerClick(element) {\n      var marker = element.markerRef;\n      this.triggerMarkerClick(null, marker);\n    }\n  }, {\n    key: 'onWindowMarkerHover',\n    value: function onWindowMarkerHover(element) {\n      var marker = element.markerRef;\n      this.setMarkerHovered(null, marker);\n    }\n  }, {\n    key: 'onWindowMarkerHoverOut',\n    value: function onWindowMarkerHoverOut(element) {\n      var marker = element.markerRef;\n      this.setMarkerHoverOut(null, marker);\n    }\n  }, {\n    key: 'setMarkerHovered',\n    value: function setMarkerHovered(e, marker) {\n      this.triggerMarkerHover(e, marker);\n    }\n  }, {\n    key: 'setMarkerHoverOut',\n    value: function setMarkerHoverOut(e, marker) {\n      this.triggerMarkerHoverOut(e, marker);\n    }\n  }, {\n    key: 'triggerMarkerClick',\n    value: function triggerMarkerClick(e, marker) {\n      // const raw = marker.getExtData();\n      var events = this.props.events || {};\n\n      if ((0, _isFun2.default)(events.click)) {\n        events.click(e, marker);\n      }\n    }\n  }, {\n    key: 'triggerMarkerHover',\n    value: function triggerMarkerHover(e, marker) {\n      // const raw = marker.getExtData();\n      var events = this.props.events || {};\n\n      if ((0, _isFun2.default)(events.mouseover)) {\n        events.mouseover(e, marker);\n      }\n    }\n  }, {\n    key: 'triggerMarkerHoverOut',\n    value: function triggerMarkerHoverOut(e, marker) {\n      // const raw = marker.getExtData();\n      var events = this.props.events || {};\n\n      if ((0, _isFun2.default)(events.mouseout)) {\n        events.mouseout(e, marker);\n      }\n    }\n  }, {\n    key: 'initClusterMarkerWindow',\n    value: function initClusterMarkerWindow() {\n      this.markersWindow = new window.AMap.InfoWindow({\n        isCustom: true,\n        autoMove: true,\n        closeWhenClickMap: true,\n        content: '<span>loading...</span>',\n        showShadow: false,\n        offset: new window.AMap.Pixel(0, -20)\n      });\n      this.markersDOM = document.createElement('div');\n      this.markersDOM.className = 'amap_markers_pop_window';\n      this.markersWindow.setContent(this.markersDOM);\n    }\n  }, {\n    key: 'bindClusterEvent',\n    value: function bindClusterEvent(events) {\n      var _this6 = this;\n\n      this.mapCluster.on('click', function (e) {\n        if (_this6.props.useCluster && _this6.props.useCluster.zoomOnClick) {//\n        } else {\n          var returnValue = true;\n\n          if ((0, _isFun2.default)(events.click)) {\n            returnValue = events.click(e);\n          }\n\n          if (returnValue !== false) {\n            _this6.showMarkersInfoWindow(e);\n          }\n        }\n      });\n    }\n  }, {\n    key: 'showMarkersInfoWindow',\n    value: function showMarkersInfoWindow(e) {\n      var _this7 = this;\n\n      var pos = e.lnglat;\n      var markers = e.markers;\n      this.markersDOM.innerHTML = '';\n\n      if (markers && markers.length) {\n        var length = markers.length;\n\n        if (length > MAX_INFO_MARKERS) {\n          markers = markers.slice(0, MAX_INFO_MARKERS);\n        }\n\n        markers.forEach(function (m) {\n          var contentDOM = m.getContent();\n          var itemDOM = document.createElement('div');\n          itemDOM.className = 'window_marker_item';\n          itemDOM.appendChild(contentDOM);\n          itemDOM.markerRef = m;\n          itemDOM.addEventListener('click', _this7.onWindowMarkerClick.bind(_this7, itemDOM), true);\n          itemDOM.addEventListener('mouseover', _this7.onWindowMarkerHover.bind(_this7, itemDOM), true);\n          itemDOM.addEventListener('mouseout', _this7.onWindowMarkerHoverOut.bind(_this7, itemDOM), true);\n\n          _this7.markersDOM.appendChild(itemDOM);\n        });\n\n        if (length > MAX_INFO_MARKERS) {\n          var warning = document.createElement('div');\n          warning.className = 'amap_markers_window_overflow_warning';\n          warning.innerText = '更多坐标请放大地图查看';\n          this.markersDOM.appendChild(warning);\n        }\n      }\n\n      this.markersWindow.open(this.map, pos);\n    }\n  }, {\n    key: 'exposeMarkerInstance',\n    value: function exposeMarkerInstance() {\n      if ('events' in this.props) {\n        var events = this.props.events || {};\n\n        if ((0, _isFun2.default)(events.created)) {\n          events.created(this.markersCache);\n        }\n      }\n    }\n  }, {\n    key: 'bindMarkerEvents',\n    value: function bindMarkerEvents(marker) {\n      var events = this.props.events || {};\n      var list = Object.keys(events);\n      var preserveEv = ['click', 'mouseover', 'mouseout', 'created'];\n      list.length && list.forEach(function (evName) {\n        if (preserveEv.indexOf(evName) === -1) {\n          marker.on(evName, events[evName]);\n        }\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return Markers;\n}(Component);\n\nexports.default = Markers;","map":null,"metadata":{},"sourceType":"script"}