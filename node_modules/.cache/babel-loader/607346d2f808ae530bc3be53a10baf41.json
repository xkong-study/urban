{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar DEFAULT_CONFIG = {\n  v: '1.4.0',\n  hostAndPath: 'webapi.amap.com/maps',\n  key: 'f97efc35164149d0c0f299e7a8adb3d2',\n  callback: '__amap_init_callback',\n  useAMapUI: false\n};\nvar mainPromise = null;\nvar amapuiPromise = null;\nvar amapuiInited = false;\n\nvar APILoader = function () {\n  function APILoader(_ref) {\n    var key = _ref.key,\n        useAMapUI = _ref.useAMapUI,\n        version = _ref.version,\n        protocol = _ref.protocol;\n\n    _classCallCheck(this, APILoader);\n\n    this.config = _extends({}, DEFAULT_CONFIG, {\n      useAMapUI: useAMapUI,\n      protocol: protocol\n    });\n\n    if (typeof window !== 'undefined') {\n      if (key) {\n        this.config.key = key;\n      } else if ('amapkey' in window) {\n        this.config.key = window.amapkey;\n      }\n    }\n\n    if (version) {\n      this.config.v = version;\n    }\n\n    this.protocol = protocol || window.location.protocol;\n\n    if (this.protocol.indexOf(':') === -1) {\n      this.protocol += ':';\n    }\n  }\n\n  _createClass(APILoader, [{\n    key: 'getScriptSrc',\n    value: function getScriptSrc(cfg) {\n      return this.protocol + '//' + cfg.hostAndPath + '?v=' + cfg.v + '&key=' + cfg.key + '&callback=' + cfg.callback;\n    }\n  }, {\n    key: 'buildScriptTag',\n    value: function buildScriptTag(src) {\n      var script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.async = true;\n      script.defer = true;\n      script.src = src;\n      return script;\n    }\n  }, {\n    key: 'getAmapuiPromise',\n    value: function getAmapuiPromise() {\n      var script = this.buildScriptTag(this.protocol + '//webapi.amap.com/ui/1.0/main-async.js');\n      var p = new Promise(function (resolve) {\n        script.onload = function () {\n          resolve();\n        };\n      });\n      document.body.appendChild(script);\n      return p;\n    }\n  }, {\n    key: 'getMainPromise',\n    value: function getMainPromise() {\n      var _this = this;\n\n      var script = this.buildScriptTag(this.getScriptSrc(this.config));\n      var p = new Promise(function (resolve) {\n        window[_this.config.callback] = function () {\n          resolve();\n          delete window[_this.config.callback];\n        };\n      });\n      document.body.appendChild(script);\n      return p;\n    }\n  }, {\n    key: 'load',\n    value: function load() {\n      if (typeof window === 'undefined') {\n        return null;\n      }\n\n      var useAMapUI = this.config.useAMapUI;\n      mainPromise = mainPromise || this.getMainPromise();\n\n      if (useAMapUI) {\n        amapuiPromise = amapuiPromise || this.getAmapuiPromise();\n      }\n\n      return new Promise(function (resolve) {\n        mainPromise.then(function () {\n          if (useAMapUI && amapuiPromise) {\n            amapuiPromise.then(function () {\n              if (window.initAMapUI && !amapuiInited) {\n                window.initAMapUI();\n\n                if (typeof useAMapUI === 'function') {\n                  useAMapUI();\n                }\n\n                amapuiInited = true;\n              }\n\n              resolve();\n            });\n          } else {\n            resolve();\n          }\n        });\n      });\n    }\n  }]);\n\n  return APILoader;\n}();\n\nexports.default = APILoader;","map":null,"metadata":{},"sourceType":"script"}