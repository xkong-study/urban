{"ast":null,"code":"import _slicedToArray from \"/Users/kong/Desktop/game-cloud-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kong/Desktop/game-cloud-frontend/src/pages/Means.jsx\";\nimport { DislikeFilled, DislikeOutlined, LikeFilled, LikeOutlined } from '@ant-design/icons';\nimport React, { createElement, useEffect, useState } from 'react';\nimport { Avatar, Comment, Tooltip, Button, Form, Input, List, Skeleton, Divider } from 'antd';\nimport moment from 'moment';\nimport { message } from 'antd';\nimport VirtualList from 'rc-virtual-list';\nimport { AddCommentDataApi, CommentListApi, GetCommentDataApi } from \"./request/api\";\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport TextArea from \"antd/es/input/TextArea\";\nexport default function Means() {\n  var _this = this;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      action = _useState2[0],\n      setAction = _useState2[1];\n\n  var like = function like() {\n    setLikes(1);\n    setDislikes(0);\n    setAction('liked');\n  };\n\n  var dislike = function dislike() {\n    setLikes(0);\n    setDislikes(1);\n    setAction('disliked');\n  };\n\n  var _useState3 = useState([{\n    actions: [/*#__PURE__*/React.createElement(\"span\", {\n      key: \"comment-list-reply-to-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 23\n      }\n    }, \"Reply to\")],\n    author: 'Han Solo',\n    avatar: 'https://joeschmoe.io/api/v1/random',\n    comments: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, \"We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.\"),\n    datetime: /*#__PURE__*/React.createElement(Tooltip, {\n      title: moment().subtract(1, 'days').format('YYYY-MM-DD HH:mm:ss'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, moment().subtract(1, 'days').fromNow()))\n  }, {\n    actions: [/*#__PURE__*/React.createElement(Tooltip, {\n      key: \"comment-basic-like\",\n      title: \"Like\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: like,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, createElement(action === 'liked' ? LikeFilled : LikeOutlined), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"comment-action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, likes))), /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"comment-basic-dislike\",\n      title: \"Dislike\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: dislike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, React.createElement(action === 'disliked' ? DislikeFilled : DislikeOutlined), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"comment-action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, dislikes))), /*#__PURE__*/React.createElement(\"span\", {\n      key: \"comment-list-reply-to-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"Reply to\")],\n    author: 'Han Solo',\n    avatar: 'https://joeschmoe.io/api/v1/random',\n    comments: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \"We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.\"),\n    datetime: /*#__PURE__*/React.createElement(Tooltip, {\n      title: moment().subtract(2, 'days').format('YYYY-MM-DD HH:mm:ss'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, moment().subtract(2, 'days').fromNow()))\n  }]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      arr = _useState4[0],\n      setArr = _useState4[1];\n\n  var CommentList = function CommentList(_ref) {\n    var comments = _ref.comments;\n    return /*#__PURE__*/React.createElement(List, {\n      dataSource: comments,\n      header: \"\".concat(comments.length, \" \").concat(comments.length > 1 ? 'replies' : 'reply'),\n      itemLayout: \"horizontal\",\n      renderItem: function renderItem(props) {\n        return /*#__PURE__*/React.createElement(Comment, Object.assign({}, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 36\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    });\n  };\n\n  var Editor = function Editor(_ref2) {\n    var onChange = _ref2.onChange,\n        onSubmit = _ref2.onSubmit,\n        submitting = _ref2.submitting,\n        value = _ref2.value;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Item, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextArea, {\n      rows: 4,\n      onChange: onChange,\n      value: value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      htmlType: \"submit\",\n      loading: submitting,\n      onClick: onSubmit,\n      type: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, \"Add Comment\")));\n  };\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      comments = _useState6[0],\n      setComments = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      author = _useState8[0],\n      setAuthor = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      submitting = _useState10[0],\n      setSubmitting = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      value = _useState12[0],\n      setValue = _useState12[1];\n\n  var handleSubmit = function handleSubmit() {\n    var params = {\n      id: '8',\n      author: author,\n      comments: comments,\n      value: value\n    };\n    AddCommentDataApi({\n      params: params\n    }).then(function (response) {\n      console.log(response);\n      window.location.reload();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var handleChange = function handleChange(e) {\n    setValue(e.target.value);\n  };\n\n  useEffect(function () {\n    GetCommentDataApi().then(function (response) {\n      var newArr = JSON.parse(JSON.stringify(response)); //深拷贝\n\n      var myarr = []; //用来获取自己想要的属性\n\n      newArr.map(function (item) {\n        var obj = {\n          id: item.id,\n          avatar: 'https://joeschmoe.io/api/v1/random',\n          actions: [/*#__PURE__*/React.createElement(\"span\", {\n            key: \"comment-list-reply-to-0\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 31\n            }\n          }, \"Reply to\")],\n          author: item.author,\n          comments: item.comments,\n          value: item.value,\n          datetime: /*#__PURE__*/React.createElement(Tooltip, {\n            title: moment().subtract(2, 'days').format('YYYY-MM-DD HH:mm:ss'),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }\n          }, moment().subtract(2, 'days').fromNow()))\n        };\n        myarr.push(obj);\n      });\n      setArr(myarr);\n      console.log(myarr);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"scrollableDiv\",\n    style: {\n      height: 600,\n      overflow: 'auto',\n      padding: '0 16px',\n      border: '1px solid rgba(140, 140, 140, 0.35)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n    dataLength: arr.length,\n    hasMore: arr.length < 50,\n    endMessage: /*#__PURE__*/React.createElement(Divider, {\n      plain: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 28\n      }\n    }, \"It is all, nothing more \\uD83E\\uDD10\"),\n    scrollableTarget: \"scrollableDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    className: \"comment-list\",\n    header: \"\".concat(arr.length, \" replies\"),\n    itemLayout: \"horizontal\",\n    dataSource: arr,\n    renderItem: function renderItem(item) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(Comment, {\n        actions: item.actions,\n        author: item.author,\n        avatar: item.avatar,\n        content: item.value,\n        datetime: item.datetime,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 20\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 8\n    }\n  })), comments.length > 0 && /*#__PURE__*/React.createElement(CommentList, {\n    comments: comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 36\n    }\n  }), /*#__PURE__*/React.createElement(Comment, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: \"https://joeschmoe.io/api/v1/random\",\n      alt: \"Han Solo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 24\n      }\n    }),\n    content: /*#__PURE__*/React.createElement(Editor, {\n      onChange: handleChange,\n      onSubmit: handleSubmit,\n      submitting: submitting,\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 20\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 12\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/kong/Desktop/game-cloud-frontend/src/pages/Means.jsx"],"names":["DislikeFilled","DislikeOutlined","LikeFilled","LikeOutlined","React","createElement","useEffect","useState","Avatar","Comment","Tooltip","Button","Form","Input","List","Skeleton","Divider","moment","message","VirtualList","AddCommentDataApi","CommentListApi","GetCommentDataApi","InfiniteScroll","TextArea","Means","action","setAction","like","setLikes","setDislikes","dislike","actions","author","avatar","comments","datetime","subtract","format","fromNow","likes","dislikes","arr","setArr","CommentList","length","props","Editor","onChange","onSubmit","submitting","value","setComments","setAuthor","setSubmitting","setValue","handleSubmit","params","id","then","response","console","log","window","location","reload","catch","error","handleChange","e","target","newArr","JSON","parse","stringify","myarr","map","item","obj","push","height","overflow","padding","border"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,eAAxB,EAAyCC,UAAzC,EAAqDC,YAArD,QAAyE,mBAAzE;AACA,OAAOC,KAAP,IAAeC,aAAf,EAA8BC,SAA9B,EAAyCC,QAAzC,QAAwD,OAAxD;AACA,SAAQC,MAAR,EAAgBC,OAAhB,EAAyBC,OAAzB,EAAkCC,MAAlC,EAA0CC,IAA1C,EAAgDC,KAAhD,EAAuDC,IAAvD,EAA6DC,QAA7D,EAAuEC,OAAvE,QAAqF,MAArF;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,SAAQC,iBAAR,EAA2BC,cAA3B,EAA2CC,iBAA3C,QAAmE,eAAnE;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAGA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAAA,kBACAlB,QAAQ,CAAC,IAAD,CADR;AAAA;AAAA,MACrBmB,MADqB;AAAA,MACbC,SADa;;AAG5B,MAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACfC,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACAC,IAAAA,WAAW,CAAC,CAAD,CAAX;AACAH,IAAAA,SAAS,CAAC,OAAD,CAAT;AACH,GAJD;;AAMA,MAAMI,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClBF,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACAC,IAAAA,WAAW,CAAC,CAAD,CAAX;AACAH,IAAAA,SAAS,CAAC,UAAD,CAAT;AACH,GAJD;;AAT4B,mBAcVpB,QAAQ,CAAC,CACvB;AACIyB,IAAAA,OAAO,EAAE,cAAC;AAAM,MAAA,GAAG,EAAC,yBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAD,CADb;AAEIC,IAAAA,MAAM,EAAE,UAFZ;AAGIC,IAAAA,MAAM,EAAE,oCAHZ;AAIIC,IAAAA,QAAQ,eACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uMALR;AAWIC,IAAAA,QAAQ,eACJ,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAEnB,MAAM,GAAGoB,QAAT,CAAkB,CAAlB,EAAqB,MAArB,EAA6BC,MAA7B,CAAoC,qBAApC,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOrB,MAAM,GAAGoB,QAAT,CAAkB,CAAlB,EAAqB,MAArB,EAA6BE,OAA7B,EAAP,CADJ;AAZR,GADuB,EAkBvB;AACIP,IAAAA,OAAO,EAAE,cACL,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAC,oBAAb;AAAkC,MAAA,KAAK,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAM,MAAA,OAAO,EAAEJ,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCvB,aAAa,CAACqB,MAAM,KAAK,OAAX,GAAqBxB,UAArB,GAAkCC,YAAnC,CADd,eAEA;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCqC,KAAlC,CAFA,CADA,CADK,eAOL,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAC,uBAAb;AAAqC,MAAA,KAAK,EAAC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAM,MAAA,OAAO,EAAET,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC3B,KAAK,CAACC,aAAN,CAAoBqB,MAAM,KAAK,UAAX,GAAwB1B,aAAxB,GAAwCC,eAA5D,CADD,eAEA;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCwC,QAAlC,CAFA,CADA,CAPK,eAaL;AAAM,MAAA,GAAG,EAAC,yBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbK,CADb;AAeIR,IAAAA,MAAM,EAAE,UAfZ;AAgBIC,IAAAA,MAAM,EAAE,oCAhBZ;AAiBIC,IAAAA,QAAQ,eACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uMAlBR;AAwBIC,IAAAA,QAAQ,eACJ,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAEnB,MAAM,GAAGoB,QAAT,CAAkB,CAAlB,EAAqB,MAArB,EAA6BC,MAA7B,CAAoC,qBAApC,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOrB,MAAM,GAAGoB,QAAT,CAAkB,CAAlB,EAAqB,MAArB,EAA6BE,OAA7B,EAAP,CADJ;AAzBR,GAlBuB,CAAD,CAdE;AAAA;AAAA,MActBG,GAdsB;AAAA,MAclBC,MAdkB;;AAiE5B,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,QAAGT,QAAH,QAAGA,QAAH;AAAA,wBAChB,oBAAC,IAAD;AACI,MAAA,UAAU,EAAEA,QADhB;AAEI,MAAA,MAAM,YAAKA,QAAQ,CAACU,MAAd,cAAwBV,QAAQ,CAACU,MAAT,GAAkB,CAAlB,GAAsB,SAAtB,GAAkC,OAA1D,CAFV;AAGI,MAAA,UAAU,EAAC,YAHf;AAII,MAAA,UAAU,EAAE,oBAACC,KAAD;AAAA,4BAAW,oBAAC,OAAD,oBAAaA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAX;AAAA,OAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADgB;AAAA,GAApB;;AASA,MAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,QAAGC,QAAH,SAAGA,QAAH;AAAA,QAAaC,QAAb,SAAaA,QAAb;AAAA,QAAuBC,UAAvB,SAAuBA,UAAvB;AAAA,QAAmCC,KAAnC,SAAmCA,KAAnC;AAAA,wBACX,uDACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,CAAhB;AAAmB,MAAA,QAAQ,EAAEH,QAA7B;AAAuC,MAAA,KAAK,EAAEG,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAII,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAC,QAAjB;AAA0B,MAAA,OAAO,EAAED,UAAnC;AAA+C,MAAA,OAAO,EAAED,QAAxD;AAAkE,MAAA,IAAI,EAAC,SAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CAJJ,CADW;AAAA,GAAf;;AA1E4B,mBAuFI1C,QAAQ,CAAC,EAAD,CAvFZ;AAAA;AAAA,MAuFrB4B,QAvFqB;AAAA,MAuFXiB,WAvFW;;AAAA,mBAwFA7C,QAAQ,CAAC,EAAD,CAxFR;AAAA;AAAA,MAwFrB0B,MAxFqB;AAAA,MAwFboB,SAxFa;;AAAA,mBAyFQ9C,QAAQ,CAAC,KAAD,CAzFhB;AAAA;AAAA,MAyFrB2C,UAzFqB;AAAA,MAyFTI,aAzFS;;AAAA,oBA0FF/C,QAAQ,CAAC,EAAD,CA1FN;AAAA;AAAA,MA0FrB4C,KA1FqB;AAAA,MA0FdI,QA1Fc;;AA4F5B,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACxB,QAAIC,MAAM,GAAC;AACPC,MAAAA,EAAE,EAAC,GADI;AAEPzB,MAAAA,MAAM,EAACA,MAFA;AAGPE,MAAAA,QAAQ,EAACA,QAHF;AAIPgB,MAAAA,KAAK,EAACA;AAJC,KAAX;AAMC/B,IAAAA,iBAAiB,CAAC;AAACqC,MAAAA,MAAM,EAANA;AAAD,KAAD,CAAjB,CAA4BE,IAA5B,CAAiC,UAAAC,QAAQ,EAAE;AACvCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAG,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,KAHD,EAIKC,KAJL,CAIW,UAAUC,KAAV,EAAiB;AACxBN,MAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACH,KAND;AAOH,GAdD;;AAgBA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AACxBd,IAAAA,QAAQ,CAACc,CAAC,CAACC,MAAF,CAASnB,KAAV,CAAR;AACH,GAFD;;AAIA7C,EAAAA,SAAS,CAAC,YAAI;AACVgB,IAAAA,iBAAiB,GAAGqC,IAApB,CAAyB,UAAAC,QAAQ,EAAG;AAChC,UAAIW,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAed,QAAf,CAAX,CAAb,CADgC,CACkB;;AAClD,UAAIe,KAAK,GAAG,EAAZ,CAFgC,CAElB;;AACdJ,MAAAA,MAAM,CAACK,GAAP,CAAW,UAAAC,IAAI,EAAI;AACf,YAAIC,GAAG,GAAG;AACNpB,UAAAA,EAAE,EAAEmB,IAAI,CAACnB,EADH;AAENxB,UAAAA,MAAM,EAAE,oCAFF;AAGNF,UAAAA,OAAO,EAAE,cAAC;AAAM,YAAA,GAAG,EAAC,yBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAD,CAHH;AAINC,UAAAA,MAAM,EAAE4C,IAAI,CAAC5C,MAJP;AAKNE,UAAAA,QAAQ,EAAE0C,IAAI,CAAC1C,QALT;AAMNgB,UAAAA,KAAK,EAAE0B,IAAI,CAAC1B,KANN;AAONf,UAAAA,QAAQ,eACJ,oBAAC,OAAD;AAAS,YAAA,KAAK,EAAEnB,MAAM,GAAGoB,QAAT,CAAkB,CAAlB,EAAqB,MAArB,EAA6BC,MAA7B,CAAoC,qBAApC,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOrB,MAAM,GAAGoB,QAAT,CAAkB,CAAlB,EAAqB,MAArB,EAA6BE,OAA7B,EAAP,CADJ;AARE,SAAV;AAaAoC,QAAAA,KAAK,CAACI,IAAN,CAAWD,GAAX;AACH,OAfD;AAgBAnC,MAAAA,MAAM,CAACgC,KAAD,CAAN;AACAd,MAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACH,KArBD;AAsBH,GAvBQ,EAuBP,EAvBO,CAAT;AAyBD,sBACI;AAAM,IAAA,EAAE,EAAC,eAAT;AACM,IAAA,KAAK,EAAE;AACHK,MAAAA,MAAM,EAAE,GADL;AAEHC,MAAAA,QAAQ,EAAE,MAFP;AAGHC,MAAAA,OAAO,EAAE,QAHN;AAIHC,MAAAA,MAAM,EAAE;AAJL,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQI,oBAAC,cAAD;AACI,IAAA,UAAU,EAAEzC,GAAG,CAACG,MADpB;AAEI,IAAA,OAAO,EAAEH,GAAG,CAACG,MAAJ,GAAa,EAF1B;AAGI,IAAA,UAAU,eAAE,oBAAC,OAAD;AAAS,MAAA,KAAK,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAHhB;AAII,IAAA,gBAAgB,EAAC,eAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMJ,oBAAC,IAAD;AACI,IAAA,SAAS,EAAC,cADd;AAEI,IAAA,MAAM,YAAKH,GAAG,CAACG,MAAT,aAFV;AAGI,IAAA,UAAU,EAAC,YAHf;AAII,IAAA,UAAU,EAAEH,GAJhB;AAKI,IAAA,UAAU,EAAE,oBAACmC,IAAD;AAAA,0BACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,OAAD;AACI,QAAA,OAAO,EAAEA,IAAI,CAAC7C,OADlB;AAEI,QAAA,MAAM,EAAE6C,IAAI,CAAC5C,MAFjB;AAGI,QAAA,MAAM,EAAE4C,IAAI,CAAC3C,MAHjB;AAII,QAAA,OAAO,EAAE2C,IAAI,CAAC1B,KAJlB;AAKI,QAAA,QAAQ,EAAE0B,IAAI,CAACzC,QALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADQ;AAAA,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANI,CARJ,EAiCKD,QAAQ,CAACU,MAAT,GAAkB,CAAlB,iBAAuB,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAEV,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjC5B,eAkCI,oBAAC,OAAD;AACI,IAAA,MAAM,eAAE,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAC,oCAAZ;AAAiD,MAAA,GAAG,EAAC,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADZ;AAEI,IAAA,OAAO,eACH,oBAAC,MAAD;AACI,MAAA,QAAQ,EAAEiC,YADd;AAEI,MAAA,QAAQ,EAAEZ,YAFd;AAGI,MAAA,UAAU,EAAEN,UAHhB;AAII,MAAA,KAAK,EAAEC,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCJ,CADJ;AAgDF","sourcesContent":["import { DislikeFilled, DislikeOutlined, LikeFilled, LikeOutlined } from '@ant-design/icons';\nimport React, {createElement, useEffect, useState} from 'react';\nimport {Avatar, Comment, Tooltip, Button, Form, Input, List, Skeleton, Divider} from 'antd';\nimport moment from 'moment';\nimport { message } from 'antd';\nimport VirtualList from 'rc-virtual-list';\nimport {AddCommentDataApi, CommentListApi, GetCommentDataApi} from \"./request/api\";\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport TextArea from \"antd/es/input/TextArea\";\n\n\nexport default function Means() {\n    const [action, setAction] = useState(null);\n\n    const like = () => {\n        setLikes(1);\n        setDislikes(0);\n        setAction('liked');\n    };\n\n    const dislike = () => {\n        setLikes(0);\n        setDislikes(1);\n        setAction('disliked');\n    };\n    const[arr,setArr]=useState([\n        {\n            actions: [<span key=\"comment-list-reply-to-0\">Reply to</span>],\n            author: 'Han Solo',\n            avatar: 'https://joeschmoe.io/api/v1/random',\n            comments: (\n                <p>\n                    We supply a series of design principles, practical patterns and high quality design\n                    resources (Sketch and Axure), to help people create their product prototypes beautifully and\n                    efficiently.\n                </p>\n            ),\n            datetime: (\n                <Tooltip title={moment().subtract(1, 'days').format('YYYY-MM-DD HH:mm:ss')}>\n                    <span>{moment().subtract(1, 'days').fromNow()}</span>\n                </Tooltip>\n            ),\n        },\n        {\n            actions: [\n                <Tooltip key=\"comment-basic-like\" title=\"Like\">\n                <span onClick={like}>\n                {createElement(action === 'liked' ? LikeFilled : LikeOutlined)}\n                <span className=\"comment-action\">{likes}</span>\n                </span>\n                </Tooltip>,\n                <Tooltip key=\"comment-basic-dislike\" title=\"Dislike\">\n                <span onClick={dislike}>\n                {React.createElement(action === 'disliked' ? DislikeFilled : DislikeOutlined)}\n                <span className=\"comment-action\">{dislikes}</span>\n                </span>\n                </Tooltip>,\n                <span key=\"comment-list-reply-to-0\">Reply to</span>],\n            author: 'Han Solo',\n            avatar: 'https://joeschmoe.io/api/v1/random',\n            comments: (\n                <p>\n                    We supply a series of design principles, practical patterns and high quality design\n                    resources (Sketch and Axure), to help people create their product prototypes beautifully and\n                    efficiently.\n                </p>\n            ),\n            datetime: (\n                <Tooltip title={moment().subtract(2, 'days').format('YYYY-MM-DD HH:mm:ss')}>\n                    <span>{moment().subtract(2, 'days').fromNow()}</span>\n                </Tooltip>\n            ),\n        },\n    ]);\n\n\n    const CommentList = ({ comments }) => (\n        <List\n            dataSource={comments}\n            header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\n            itemLayout=\"horizontal\"\n            renderItem={(props) => <Comment {...props} />}\n        />\n    );\n\n    const Editor = ({ onChange, onSubmit, submitting, value }) => (\n        <>\n            <Form.Item>\n                <TextArea rows={4} onChange={onChange} value={value} />\n            </Form.Item>\n            <Form.Item>\n                <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit} type=\"primary\">\n                    Add Comment\n                </Button>\n            </Form.Item>\n        </>\n    );\n\n    const [comments, setComments] = useState([]);\n    const [author, setAuthor] = useState([]);\n    const [submitting, setSubmitting] = useState(false);\n    const [value, setValue] = useState('');\n\n    const handleSubmit = () => {\n       let params={\n           id:'8',\n           author:author,\n           comments:comments,\n           value:value\n       }\n        AddCommentDataApi({params}).then(response=>{\n            console.log(response);\n            window.location.reload()\n        })\n            .catch(function (error) {\n            console.log(error);\n        })\n    };\n\n    const handleChange = (e) => {\n        setValue(e.target.value);\n    };\n\n    useEffect(()=>{\n        GetCommentDataApi().then(response=> {\n            let newArr = JSON.parse(JSON.stringify(response));//深拷贝\n            let myarr = []//用来获取自己想要的属性\n            newArr.map(item => {\n                let obj = {\n                    id: item.id,\n                    avatar: 'https://joeschmoe.io/api/v1/random',\n                    actions: [<span key=\"comment-list-reply-to-0\">Reply to</span>],\n                    author: item.author,\n                    comments: item.comments,\n                    value: item.value,\n                    datetime: (\n                        <Tooltip title={moment().subtract(2, 'days').format('YYYY-MM-DD HH:mm:ss')}>\n                            <span>{moment().subtract(2, 'days').fromNow()}</span>\n                        </Tooltip>\n                    ),\n                }\n                myarr.push(obj);\n            })\n            setArr(myarr)\n            console.log(myarr)\n        })\n    },[])\n\n   return(\n       <div  id=\"scrollableDiv\"\n             style={{\n                 height: 600,\n                 overflow: 'auto',\n                 padding: '0 16px',\n                 border: '1px solid rgba(140, 140, 140, 0.35)',\n             }}\n       >\n           <InfiniteScroll\n               dataLength={arr.length}\n               hasMore={arr.length < 50}\n               endMessage={<Divider plain>It is all, nothing more 🤐</Divider>}\n               scrollableTarget=\"scrollableDiv\"\n           >\n       <List\n           className=\"comment-list\"\n           header={`${arr.length} replies`}\n           itemLayout=\"horizontal\"\n           dataSource={arr}\n           renderItem={(item) => (\n               <li>\n                   <Comment\n                       actions={item.actions}\n                       author={item.author}\n                       avatar={item.avatar}\n                       content={item.value}\n                       datetime={item.datetime}\n                   />\n               </li>\n           )}\n       />\n       </InfiniteScroll>\n\n           {comments.length > 0 && <CommentList comments={comments} />}\n           <Comment\n               avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" alt=\"Han Solo\" />}\n               content={\n                   <Editor\n                       onChange={handleChange}\n                       onSubmit={handleSubmit}\n                       submitting={submitting}\n                       value={value}\n                   />\n               }\n           />\n       </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}