{"ast":null,"code":"import _classCallCheck from \"/Users/kong/Downloads/urban computing/urban_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kong/Downloads/urban computing/urban_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"/Users/kong/Downloads/urban computing/urban_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport firebase from '@firebase/app-compat';\nimport { Component } from '@firebase/component';\nimport { ReCaptchaV3Provider, ReCaptchaEnterpriseProvider, CustomProvider, initializeAppCheck, setTokenAutoRefreshEnabled as _setTokenAutoRefreshEnabled, getToken as _getToken, onTokenChanged as _onTokenChanged } from '@firebase/app-check';\nimport { ErrorFactory } from '@firebase/util';\nvar name = \"@firebase/app-check-compat\";\nvar version = \"0.2.17\";\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar ERRORS = _defineProperty({}, \"use-before-activation\"\n/* USE_BEFORE_ACTIVATION */\n, 'App Check is being used before activate() is called for FirebaseApp {$appName}. ' + 'Call activate() before instantiating other Firebase services.');\n\nvar ERROR_FACTORY = new ErrorFactory('appCheck', 'AppCheck', ERRORS);\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar AppCheckService = /*#__PURE__*/function () {\n  function AppCheckService(app) {\n    _classCallCheck(this, AppCheckService);\n\n    this.app = app;\n  }\n\n  _createClass(AppCheckService, [{\n    key: \"activate\",\n    value: function activate(siteKeyOrProvider, isTokenAutoRefreshEnabled) {\n      var provider;\n\n      if (typeof siteKeyOrProvider === 'string') {\n        provider = new ReCaptchaV3Provider(siteKeyOrProvider);\n      } else if (siteKeyOrProvider instanceof ReCaptchaEnterpriseProvider || siteKeyOrProvider instanceof ReCaptchaV3Provider || siteKeyOrProvider instanceof CustomProvider) {\n        provider = siteKeyOrProvider;\n      } else {\n        provider = new CustomProvider({\n          getToken: siteKeyOrProvider.getToken\n        });\n      }\n\n      this._delegate = initializeAppCheck(this.app, {\n        provider: provider,\n        isTokenAutoRefreshEnabled: isTokenAutoRefreshEnabled\n      });\n    }\n  }, {\n    key: \"setTokenAutoRefreshEnabled\",\n    value: function setTokenAutoRefreshEnabled(isTokenAutoRefreshEnabled) {\n      if (!this._delegate) {\n        throw ERROR_FACTORY.create(\"use-before-activation\"\n        /* USE_BEFORE_ACTIVATION */\n        , {\n          appName: this.app.name\n        });\n      }\n\n      _setTokenAutoRefreshEnabled(this._delegate, isTokenAutoRefreshEnabled);\n    }\n  }, {\n    key: \"getToken\",\n    value: function getToken(forceRefresh) {\n      if (!this._delegate) {\n        throw ERROR_FACTORY.create(\"use-before-activation\"\n        /* USE_BEFORE_ACTIVATION */\n        , {\n          appName: this.app.name\n        });\n      }\n\n      return _getToken(this._delegate, forceRefresh);\n    }\n  }, {\n    key: \"onTokenChanged\",\n    value: function onTokenChanged(onNextOrObserver, onError, onCompletion) {\n      if (!this._delegate) {\n        throw ERROR_FACTORY.create(\"use-before-activation\"\n        /* USE_BEFORE_ACTIVATION */\n        , {\n          appName: this.app.name\n        });\n      }\n\n      return _onTokenChanged(this._delegate,\n      /**\r\n       * Exp onTokenChanged() will handle both overloads but we need\r\n       * to specify one to not confuse Typescript.\r\n       */\n      onNextOrObserver, onError, onCompletion);\n    }\n  }]);\n\n  return AppCheckService;\n}();\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar factory = function factory(container) {\n  // Dependencies\n  var app = container.getProvider('app-compat').getImmediate();\n  return new AppCheckService(app);\n};\n\nfunction registerAppCheck() {\n  firebase.INTERNAL.registerComponent(new Component('appCheck-compat', factory, \"PUBLIC\"\n  /* PUBLIC */\n  ).setServiceProps({\n    ReCaptchaEnterpriseProvider: ReCaptchaEnterpriseProvider,\n    ReCaptchaV3Provider: ReCaptchaV3Provider,\n    CustomProvider: CustomProvider\n  }));\n}\n\nregisterAppCheck();\nfirebase.registerVersion(name, version);\nexport { registerAppCheck };","map":null,"metadata":{},"sourceType":"module"}