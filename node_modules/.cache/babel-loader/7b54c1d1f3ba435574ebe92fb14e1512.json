{"ast":null,"code":"import _slicedToArray from \"/Users/kong/Desktop/game-cloud-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kong/Desktop/game-cloud-frontend/src/pages/Means.jsx\";\nimport { DislikeFilled, DislikeOutlined, LikeFilled, LikeOutlined } from '@ant-design/icons';\nimport React, { createElement, useEffect, useState } from 'react';\nimport { Avatar, Comment, Tooltip, Button, Form, Input, List, Skeleton, Divider } from 'antd';\nimport moment from 'moment';\nimport { AddCommentDataApi, AddLikeDataApi, GetCommentDataApi, AddDislikeDataApi } from \"./request/api\";\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport TextArea from \"antd/es/input/TextArea\";\nexport default function Means() {\n  var _this = this;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      action = _useState2[0],\n      setAction = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      likes = _useState4[0],\n      setLikes = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dislikes = _useState6[0],\n      setDislikes = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      show = _useState8[0],\n      setShow = _useState8[1];\n\n  useEffect(function () {\n    setShow(show);\n  }, [show]);\n\n  var like = function like(item) {\n    var params = {\n      id: item.id,\n      likes: item.likes + 1\n    };\n    console.log(params);\n    AddLikeDataApi({\n      params: params\n    }).then(function (response) {\n      console.log(response);\n      window.location.reload();\n      setLikes(likes + 1);\n      setDislikes(0);\n      setAction('liked');\n    });\n  };\n\n  console.log(likes);\n\n  var dislike = function dislike(item) {\n    var params = {\n      id: item.id,\n      dislikes: item.dislikes + 1\n    };\n    console.log(params);\n    AddDislikeDataApi({\n      params: params\n    }).then(function (response) {\n      console.log(response);\n      window.location.reload();\n      setLikes(0);\n      setDislikes(1);\n      setAction('liked');\n    });\n  };\n\n  var _useState9 = useState([{\n    actions: [/*#__PURE__*/React.createElement(Tooltip, {\n      key: \"comment-basic-like\",\n      title: \"Like\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: like,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, createElement(action === 'liked' ? LikeFilled : LikeOutlined), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"comment-action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 16\n      }\n    }, likes))), /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"comment-basic-dislike\",\n      title: \"Dislike\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: dislike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, React.createElement(action === 'disliked' ? DislikeFilled : DislikeOutlined), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"comment-action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, dislikes))), /*#__PURE__*/React.createElement(\"span\", {\n      key: \"comment-basic-reply-to\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, \"Reply to\")],\n    author: 'Han Solo',\n    avatar: 'https://joeschmoe.io/api/v1/random',\n    comments: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, \"We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.\"),\n    datetime: /*#__PURE__*/React.createElement(Tooltip, {\n      title: moment().subtract(1, 'days').format('YYYY-MM-DD HH:mm:ss'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, moment().subtract(1, 'days').fromNow()))\n  }, {\n    actions: [/*#__PURE__*/React.createElement(Tooltip, {\n      key: \"comment-basic-like\",\n      title: \"Like\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: like,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, createElement(action === 'liked' ? LikeFilled : LikeOutlined), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"comment-action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, likes))), /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"comment-basic-dislike\",\n      title: \"Dislike\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: dislike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, React.createElement(action === 'disliked' ? DislikeFilled : DislikeOutlined), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"comment-action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, dislikes))), /*#__PURE__*/React.createElement(\"span\", {\n      key: \"comment-list-reply-to-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, \"Reply to\")],\n    author: 'Han Solo',\n    avatar: 'https://joeschmoe.io/api/v1/random',\n    comments: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, \"We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.\"),\n    datetime: /*#__PURE__*/React.createElement(Tooltip, {\n      title: moment().subtract(2, 'days').format('YYYY-MM-DD HH:mm:ss'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, moment().subtract(2, 'days').fromNow()))\n  }]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      arr = _useState10[0],\n      setArr = _useState10[1];\n\n  var open = function open(item) {\n    return /*#__PURE__*/React.createElement(Input, {\n      style: item.id != '' ? {\n        display: 'true'\n      } : {\n        display: 'none'\n      },\n      placeholder: \"Basic usage\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }), console.log(item.id);\n  };\n\n  var CommentList = function CommentList(_ref) {\n    var comments = _ref.comments;\n    return /*#__PURE__*/React.createElement(List, {\n      dataSource: comments,\n      header: \"\".concat(comments.length, \" \").concat(comments.length > 1 ? 'replies' : 'reply'),\n      itemLayout: \"horizontal\",\n      renderItem: function renderItem(props) {\n        return /*#__PURE__*/React.createElement(Comment, Object.assign({}, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 36\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    });\n  };\n\n  var Editor = function Editor(_ref2) {\n    var onChange = _ref2.onChange,\n        onSubmit = _ref2.onSubmit,\n        submitting = _ref2.submitting,\n        value = _ref2.value;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Item, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextArea, {\n      rows: 4,\n      onChange: onChange,\n      value: value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      htmlType: \"submit\",\n      loading: submitting,\n      onClick: onSubmit,\n      type: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, \"Add Comment\")));\n  };\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      comments = _useState12[0],\n      setComments = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      author = _useState14[0],\n      setAuthor = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      submitting = _useState16[0],\n      setSubmitting = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      value = _useState18[0],\n      setValue = _useState18[1];\n\n  console.log(show);\n\n  var handleSubmit = function handleSubmit() {\n    var params = {\n      id: arr.length + 2,\n      author: '我',\n      comments: comments,\n      value: value\n    };\n    AddCommentDataApi({\n      params: params\n    }).then(function (response) {\n      console.log(response);\n      window.location.reload();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var handleChange = function handleChange(e) {\n    setValue(e.target.value);\n  };\n\n  useEffect(function () {\n    GetCommentDataApi().then(function (response) {\n      var newArr = JSON.parse(JSON.stringify(response)); //深拷贝\n\n      var myarr = []; //用来获取自己想要的属性\n\n      newArr.map(function (item) {\n        var obj = {\n          id: item.id,\n          avatar: 'https://joeschmoe.io/api/v1/random',\n          actions: [/*#__PURE__*/React.createElement(Tooltip, {\n            key: \"comment-basic-like\",\n            title: \"Like\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            onClick: like.bind(_this, item),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 25\n            }\n          }, createElement(action === 'liked' ? LikeFilled : LikeOutlined), /*#__PURE__*/React.createElement(\"span\", {\n            className: \"comment-action\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 25\n            }\n          }, item.likes))), /*#__PURE__*/React.createElement(Tooltip, {\n            key: \"comment-basic-dislike\",\n            title: \"Dislike\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            onClick: dislike.bind(_this, item),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 25\n            }\n          }, React.createElement(action === 'disliked' ? DislikeFilled : DislikeOutlined), /*#__PURE__*/React.createElement(\"span\", {\n            className: \"comment-action\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 25\n            }\n          }, item.dislikes))), /*#__PURE__*/React.createElement(\"div\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 25\n            }\n          }, !show ? /*#__PURE__*/React.createElement(\"div\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 37\n            }\n          }, \"\\u663E\\u793A\\u7684\\u5143\\u7D20\") : null)],\n          author: item.author,\n          comments: item.comments,\n          value: item.value,\n          datetime: /*#__PURE__*/React.createElement(Tooltip, {\n            title: moment().subtract(2, 'days').format('YYYY-MM-DD HH:mm:ss'),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }\n          }, moment().subtract(2, 'days').fromNow()))\n        };\n        myarr.push(obj);\n      });\n      setArr(myarr);\n      console.log(myarr);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"scrollableDiv\",\n    style: {\n      height: 600,\n      overflow: 'auto',\n      padding: '0 16px',\n      border: '1px solid rgba(140, 140, 140, 0.35)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n    dataLength: arr.length,\n    hasMore: arr.length < 50,\n    endMessage: /*#__PURE__*/React.createElement(Divider, {\n      plain: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 28\n      }\n    }, \"It is all, nothing more \\uD83E\\uDD10\"),\n    scrollableTarget: \"scrollableDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    className: \"comment-list\",\n    header: \"\".concat(arr.length, \" replies\"),\n    itemLayout: \"horizontal\",\n    dataSource: arr,\n    renderItem: function renderItem(item) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(Comment, {\n        actions: item.actions,\n        author: item.author,\n        avatar: item.avatar,\n        content: item.value,\n        datetime: item.datetime,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 20\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 8\n    }\n  })), comments.length > 0 && /*#__PURE__*/React.createElement(CommentList, {\n    comments: comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 36\n    }\n  }), /*#__PURE__*/React.createElement(Comment, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: \"https://joeschmoe.io/api/v1/random\",\n      alt: \"Han Solo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 24\n      }\n    }),\n    content: /*#__PURE__*/React.createElement(Editor, {\n      onChange: handleChange,\n      onSubmit: handleSubmit,\n      submitting: submitting,\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 20\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 12\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/kong/Desktop/game-cloud-frontend/src/pages/Means.jsx"],"names":["DislikeFilled","DislikeOutlined","LikeFilled","LikeOutlined","React","createElement","useEffect","useState","Avatar","Comment","Tooltip","Button","Form","Input","List","Skeleton","Divider","moment","AddCommentDataApi","AddLikeDataApi","GetCommentDataApi","AddDislikeDataApi","InfiniteScroll","TextArea","Means","action","setAction","likes","setLikes","dislikes","setDislikes","show","setShow","like","item","params","id","console","log","then","response","window","location","reload","dislike","actions","author","avatar","comments","datetime","subtract","format","fromNow","arr","setArr","open","display","CommentList","length","props","Editor","onChange","onSubmit","submitting","value","setComments","setAuthor","setSubmitting","setValue","handleSubmit","catch","error","handleChange","e","target","newArr","JSON","parse","stringify","myarr","map","obj","bind","push","height","overflow","padding","border"],"mappings":"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","sourcesContent":["import { DislikeFilled, DislikeOutlined, LikeFilled, LikeOutlined } from '@ant-design/icons';\nimport React, {createElement, useEffect, useState} from 'react';\nimport {Avatar, Comment, Tooltip, Button, Form, Input, List, Skeleton, Divider} from 'antd';\nimport moment from 'moment';\nimport {AddCommentDataApi, AddLikeDataApi, GetCommentDataApi,AddDislikeDataApi} from \"./request/api\";\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport TextArea from \"antd/es/input/TextArea\";\n\n\nexport default function Means() {\n    const [action, setAction] = useState(null);\n    const [likes, setLikes] = useState(0);\n    const [dislikes, setDislikes] = useState(0);\n    const [show, setShow] = useState(false);\n\n    useEffect(()=>{\n    setShow(show)\n        },[show])\n\n    const like = (item) => {\n        let params={\n            id:item.id,\n            likes:item.likes+1\n        }\n        console.log(params)\n        AddLikeDataApi({params}).then(response => {\n            console.log(response);\n            window.location.reload()\n            setLikes(likes + 1);\n            setDislikes(0);\n            setAction('liked');\n        })\n    }\n    console.log(likes)\n\n    const dislike = (item) => {\n        let params={\n            id:item.id,\n            dislikes:item.dislikes+1\n        }\n        console.log(params)\n        AddDislikeDataApi({params}).then(response => {\n            console.log(response);\n            window.location.reload()\n            setLikes(0);\n            setDislikes(1);\n            setAction('liked');\n        })\n    }\n    const[arr,setArr]=useState([\n        {\n            actions:[\n                <Tooltip key=\"comment-basic-like\" title=\"Like\">\n                <span onClick={like}>\n               {createElement(action === 'liked' ? LikeFilled : LikeOutlined)}\n               <span className=\"comment-action\">{likes}</span>\n                </span>\n                </Tooltip>,\n                <Tooltip key=\"comment-basic-dislike\" title=\"Dislike\">\n                <span onClick={dislike}>\n                {React.createElement(action === 'disliked' ? DislikeFilled : DislikeOutlined)}\n                <span className=\"comment-action\">{dislikes}</span>\n                </span>\n                </Tooltip>,\n                <span key=\"comment-basic-reply-to\">Reply to</span>,\n            ],\n            author: 'Han Solo',\n            avatar: 'https://joeschmoe.io/api/v1/random',\n            comments: (\n                <p>\n                    We supply a series of design principles, practical patterns and high quality design\n                    resources (Sketch and Axure), to help people create their product prototypes beautifully and\n                    efficiently.\n                </p>\n            ),\n            datetime: (\n                <Tooltip title={moment().subtract(1, 'days').format('YYYY-MM-DD HH:mm:ss')}>\n                    <span>{moment().subtract(1, 'days').fromNow()}</span>\n                </Tooltip>\n            ),\n        },\n        {\n            actions: [\n                <Tooltip key=\"comment-basic-like\" title=\"Like\">\n                <span onClick={like}>\n                {createElement(action === 'liked' ? LikeFilled : LikeOutlined)}\n                <span className=\"comment-action\">{likes}</span>\n                </span>\n                </Tooltip>,\n                <Tooltip key=\"comment-basic-dislike\" title=\"Dislike\">\n                <span onClick={dislike}>\n                {React.createElement(action === 'disliked' ? DislikeFilled : DislikeOutlined)}\n                <span className=\"comment-action\">{dislikes}</span>\n                </span>\n                </Tooltip>,\n                <span key=\"comment-list-reply-to-0\">Reply to</span>\n            ],\n            author: 'Han Solo',\n            avatar: 'https://joeschmoe.io/api/v1/random',\n            comments: (\n                <p>\n                    We supply a series of design principles, practical patterns and high quality design\n                    resources (Sketch and Axure), to help people create their product prototypes beautifully and\n                    efficiently.\n                </p>\n            ),\n            datetime: (\n                <Tooltip title={moment().subtract(2, 'days').format('YYYY-MM-DD HH:mm:ss')}>\n                    <span>{moment().subtract(2, 'days').fromNow()}</span>\n                </Tooltip>\n            ),\n        },\n    ]);\n\n    const open = (item) => (\n        <Input style={item.id!=''?{display:'true'}:{display:'none'}} placeholder=\"Basic usage\" />,\n        console.log(item.id)\n    );\n\n    const CommentList = ({ comments }) => (\n        <List\n            dataSource={comments}\n            header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\n            itemLayout=\"horizontal\"\n            renderItem={(props) => <Comment {...props} />}\n        />\n    );\n\n    const Editor = ({ onChange, onSubmit, submitting, value }) => (\n        <>\n            <Form.Item>\n                <TextArea rows={4} onChange={onChange} value={value} />\n            </Form.Item>\n            <Form.Item>\n                <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit} type=\"primary\">\n                    Add Comment\n                </Button>\n            </Form.Item>\n        </>\n    );\n\n    const [comments, setComments] = useState([]);\n    const [author, setAuthor] = useState([]);\n    const [submitting, setSubmitting] = useState(false);\n    const [value, setValue] = useState('');\n    console.log(show)\n    const handleSubmit = () => {\n       let params={\n           id:arr.length+2,\n           author:'我',\n           comments:comments,\n           value:value\n       }\n        AddCommentDataApi({params}).then(response=>{\n            console.log(response);\n            window.location.reload()\n        })\n            .catch(function (error) {\n            console.log(error);\n        })\n    };\n\n    const handleChange = (e) => {\n        setValue(e.target.value);\n    };\n\n    useEffect(()=>{\n        GetCommentDataApi().then(response=> {\n            let newArr = JSON.parse(JSON.stringify(response));//深拷贝\n            let myarr = []//用来获取自己想要的属性\n            newArr.map(item => {\n                let obj = {\n                    id: item.id,\n                    avatar: 'https://joeschmoe.io/api/v1/random',\n                    actions: [\n                        <Tooltip key=\"comment-basic-like\" title=\"Like\">\n                        <span onClick={like.bind(this,item)}>\n                        {createElement(action === 'liked' ? LikeFilled : LikeOutlined)}\n                        <span className=\"comment-action\">{item.likes}</span>\n                        </span>\n                        </Tooltip>,\n                        <Tooltip key=\"comment-basic-dislike\" title=\"Dislike\">\n                        <span onClick={dislike.bind(this,item)}>\n                        {React.createElement(action === 'disliked' ? DislikeFilled : DislikeOutlined)}\n                        <span className=\"comment-action\">{item.dislikes}</span>\n                        </span>\n                        </Tooltip>,\n                        <div>\n                            {\n                                !show ? (\n                                    <div>显示的元素</div>\n                                ) : null\n                            }\n                        </div>\n                    ],\n                    author: item.author,\n                    comments: item.comments,\n                    value: item.value,\n                    datetime: (\n                        <Tooltip title={moment().subtract(2, 'days').format('YYYY-MM-DD HH:mm:ss')}>\n                            <span>{moment().subtract(2, 'days').fromNow()}</span>\n                        </Tooltip>\n                    ),\n                }\n                myarr.push(obj);\n            })\n            setArr(myarr)\n            console.log(myarr)\n        })\n    },[])\n\n   return(\n       <div  id=\"scrollableDiv\"\n             style={{\n                 height: 600,\n                 overflow: 'auto',\n                 padding: '0 16px',\n                 border: '1px solid rgba(140, 140, 140, 0.35)',\n             }}\n       >\n           <InfiniteScroll\n               dataLength={arr.length}\n               hasMore={arr.length < 50}\n               endMessage={<Divider plain>It is all, nothing more 🤐</Divider>}\n               scrollableTarget=\"scrollableDiv\"\n           >\n       <List\n           className=\"comment-list\"\n           header={`${arr.length} replies`}\n           itemLayout=\"horizontal\"\n           dataSource={arr}\n           renderItem={(item) => (\n               <li>\n                   <Comment\n                       actions={item.actions}\n                       author={item.author}\n                       avatar={item.avatar}\n                       content={item.value}\n                       datetime={item.datetime}\n                   />\n               </li>\n           )}\n       />\n       </InfiniteScroll>\n\n           {comments.length > 0 && <CommentList comments={comments} />}\n           <Comment\n               avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" alt=\"Han Solo\" />}\n               content={\n                   <Editor\n                       onChange={handleChange}\n                       onSubmit={handleSubmit}\n                       submitting={submitting}\n                       value={value}\n                   />\n               }\n           />\n       </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}