{"ast":null,"code":"import _slicedToArray from \"/Users/kong/Desktop/urban_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kong/Desktop/urban_react/src/pages/map.jsx\";\n\n/* jshint esversion: 6 */\nimport React from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api'; // Import the functions you need from the SDKs you need\n\nimport firebase from \"firebase/compat\";\nimport axios from \"axios\";\nimport { Input } from \"antd\";\nimport { FindUserDataApi } from \"./request/api\";\nvar Search = Input.Search;\nvar containerStyle = {\n  width: '800px',\n  height: '400px'\n};\nvar arr = [];\n\nvar getApi = function getApi() {\n  axios.get('https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=53.49332,-6.31718&radius=1000000&types=coffee&key=AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c').then(function (response) {\n    var result = response.data.results;\n\n    for (var key in result) {\n      arr.push(result[key].geometry.location);\n    }\n  }).catch(function (error) {\n    console.log(error);\n  });\n};\n\ngetApi();\nconsole.log(arr);\nexport default function map() {\n  var onSearch = function onSearch(value) {\n    console.log(value);\n\n    if (value === '') {\n      window.location.reload();\n    }\n  };\n\n  var firebaseConfig = {\n    apiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\",\n    authDomain: \"urban-computing-cb07c.firebaseapp.com\",\n    databaseURL: \"https://urban-computing-cb07c-default-rtdb.firebaseio.com\",\n    projectId: \"urban-computing-cb07c\",\n    storageBucket: \"urban-computing-cb07c.appspot.com\",\n    messagingSenderId: \"293478437107\",\n    appId: \"1:293478437107:web:4cd5199b68f68eac542786\",\n    measurementId: \"G-3Z5DD1SJYQ\"\n  };\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      count = _React$useState2[0],\n      setCount = _React$useState2[1];\n\n  React.useEffect(function () {\n    setTimeout(function () {\n      firebase.initializeApp(firebaseConfig);\n      firebase.database().ref('/').on('value', function (snap) {\n        var obj = snap.val();\n\n        if (obj !== null) {\n          for (var key in obj) {\n            setCount(obj[key]);\n          }\n        }\n      });\n    }, 1000);\n  }, []);\n\n  var _useJsApiLoader = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\"\n  }),\n      isLoaded = _useJsApiLoader.isLoaded;\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      map = _React$useState4[0],\n      setMap = _React$useState4[1];\n\n  var onLoad = React.useCallback(function callback(map) {\n    var bounds = new window.google.maps.LatLngBounds(count);\n    map.fitBounds(bounds);\n\n    for (var i = 0; i < arr.length; i++) {\n      var marker = new window.google.maps.Marker({\n        position: arr[i],\n        title: \"starting\"\n      });\n      marker.setMap(map);\n    }\n  }, []);\n  var onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  return isLoaded ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: count,\n    zoom: 25,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginLeft: '5px',\n      fontWeight: 'bold',\n      marginTop: '10px',\n      color: '#0066FF'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"\\u641C\\u7D22\\u9644\\u8FD1\\u9910\\u996E\\u5E97:\"), /*#__PURE__*/React.createElement(Search, {\n    style: {\n      width: '330px',\n      marginLeft: '110px',\n      marginBottom: '5px',\n      marginTop: '-42px'\n    },\n    placeholder: \"input search text\",\n    onSearch: onSearch,\n    enterButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 102\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null);\n}","map":{"version":3,"sources":["/Users/kong/Desktop/urban_react/src/pages/map.jsx"],"names":["React","GoogleMap","useJsApiLoader","firebase","axios","Input","FindUserDataApi","Search","containerStyle","width","height","arr","getApi","get","then","response","result","data","results","key","push","geometry","location","catch","error","console","log","map","onSearch","value","window","reload","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","useState","count","setCount","useEffect","setTimeout","initializeApp","database","ref","on","snap","obj","val","id","googleMapsApiKey","isLoaded","setMap","onLoad","useCallback","callback","bounds","google","maps","LatLngBounds","fitBounds","i","length","marker","Marker","position","title","onUnmount","marginLeft","fontWeight","marginTop","color","marginBottom"],"mappings":"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","sourcesContent":["/* jshint esversion: 6 */\n\nimport React from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\n// Import the functions you need from the SDKs you need\nimport firebase from \"firebase/compat\";\nimport axios from \"axios\";\nimport {Input} from \"antd\";\nimport {FindUserDataApi} from \"./request/api\";\nconst { Search } = Input;\n\nconst containerStyle = {\n    width: '800px',\n    height: '400px'\n};\n\nlet arr=[];\nconst getApi = () => {\n    axios.get('https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=53.49332,-6.31718&radius=1000000&types=coffee&key=AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c')\n        .then(function (response) {\n            const result = response.data.results;\n            for(var key in result){\n                arr.push(result[key].geometry.location);\n            }\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n};\ngetApi();\n\nconsole.log(arr);\n\n\nexport default function map() {\n    const onSearch = (value: string) => {\n        console.log(value);\n\n        if(value===''){\n            window.location.reload();\n        }\n    };\n    const firebaseConfig = {\n        apiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\",\n        authDomain: \"urban-computing-cb07c.firebaseapp.com\",\n        databaseURL: \"https://urban-computing-cb07c-default-rtdb.firebaseio.com\",\n        projectId: \"urban-computing-cb07c\",\n        storageBucket: \"urban-computing-cb07c.appspot.com\",\n        messagingSenderId: \"293478437107\",\n        appId: \"1:293478437107:web:4cd5199b68f68eac542786\",\n        measurementId: \"G-3Z5DD1SJYQ\"\n    };\n\n    const [count, setCount] =React.useState(0);\n    React.useEffect(()=>{\n        setTimeout(()=>{\n        firebase.initializeApp(firebaseConfig);\n        firebase.database().ref('/').on('value',(snap)=> {\n            let obj = snap.val();\n            if (obj !== null) {\n                for (var key in obj) {\n                    setCount(obj[key]);\n                }\n            }\n        });\n        },1000);\n    },[]);\n\n\n    const { isLoaded } = useJsApiLoader({\n        id: 'google-map-script',\n        googleMapsApiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\"\n    });\n\n    const [map, setMap] = React.useState(null);\n\n    const onLoad = React.useCallback(function callback(map) {\n        const bounds = new window.google.maps.LatLngBounds(count);\n        map.fitBounds(bounds);\n        for(let i =0;i<arr.length;i++)\n        {\n            const marker = new window.google.maps.Marker({\n                position: arr[i],\n                title: \"starting\"\n            });\n            marker.setMap(map);\n        }\n    }, []);\n    const onUnmount = React.useCallback(function callback(map) {\n        setMap(null);\n    }, []);\n\n\n    return isLoaded ? (\n        <div>\n        <GoogleMap  mapContainerStyle={containerStyle}  center={count}  zoom={25}  onLoad={onLoad}  onUnmount={onUnmount}> </GoogleMap>\n        <p style={{marginLeft:'5px',fontWeight:'bold',marginTop:'10px',color:'#0066FF'}}>搜索附近餐饮店:</p><Search style={{width:'330px',marginLeft:'110px',marginBottom:'5px',marginTop:'-42px'}} placeholder=\"input search text\" onSearch={onSearch} enterButton />\n        </div>\n    ) : <></>\n}\n\n"]},"metadata":{},"sourceType":"module"}