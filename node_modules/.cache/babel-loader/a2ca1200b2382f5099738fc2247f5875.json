{"ast":null,"code":"import _slicedToArray from \"/Users/kong/Desktop/urban_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kong/Desktop/urban_react/src/pages/map.jsx\";\n\n/* jshint esversion: 6 */\nimport React from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api'; // Import the functions you need from the SDKs you need\n\nimport firebase from \"firebase/compat\";\nimport { useState, useEffect } from 'react';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\",\n  authDomain: \"urban-computing-cb07c.firebaseapp.com\",\n  databaseURL: \"https://urban-computing-cb07c-default-rtdb.firebaseio.com\",\n  projectId: \"urban-computing-cb07c\",\n  storageBucket: \"urban-computing-cb07c.appspot.com\",\n  messagingSenderId: \"293478437107\",\n  appId: \"1:293478437107:web:4cd5199b68f68eac542786\",\n  measurementId: \"G-3Z5DD1SJYQ\"\n}; // const [count, setCount] =React.useState(0);\n// React.useEffect(()=>{\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.database().ref('/').on('value', function (snap) {\n  var obj = snap.val();\n\n  for (var key in obj) {\n    console.log(obj[key]);\n  }\n}); //         }\n//     });\n// },[]);\n\nvar containerStyle = {\n  width: '400px',\n  height: '400px'\n};\nvar center = {\n  lat: -3.745,\n  lng: -38.523\n};\nexport default function map() {\n  var _useJsApiLoader = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\"\n  }),\n      isLoaded = _useJsApiLoader.isLoaded;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      map = _React$useState2[0],\n      setMap = _React$useState2[1];\n\n  var onLoad = React.useCallback(function callback(map) {\n    var bounds = new window.google.maps.LatLngBounds(center);\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  var onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  return isLoaded ? /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 10,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null);\n}","map":{"version":3,"sources":["/Users/kong/Desktop/urban_react/src/pages/map.jsx"],"names":["React","GoogleMap","useJsApiLoader","firebase","useState","useEffect","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","database","ref","on","snap","obj","val","key","console","log","containerStyle","width","height","center","lat","lng","map","id","googleMapsApiKey","isLoaded","setMap","onLoad","useCallback","callback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,wBAA1C,C,CACA;;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,uCAFO;AAGnBC,EAAAA,WAAW,EAAE,2DAHM;AAInBC,EAAAA,SAAS,EAAE,uBAJQ;AAKnBC,EAAAA,aAAa,EAAE,mCALI;AAMnBC,EAAAA,iBAAiB,EAAE,cANA;AAOnBC,EAAAA,KAAK,EAAE,2CAPY;AAQnBC,EAAAA,aAAa,EAAE;AARI,CAAvB,C,CAWA;AACA;;AACIX,QAAQ,CAACY,aAAT,CAAuBT,cAAvB;AACAH,QAAQ,CAACa,QAAT,GAAoBC,GAApB,CAAwB,GAAxB,EAA6BC,EAA7B,CAAgC,OAAhC,EAAwC,UAACC,IAAD,EAAS;AAC7C,MAAIC,GAAG,GAAGD,IAAI,CAACE,GAAL,EAAV;;AACA,OAAK,IAAIC,GAAT,IAAgBF,GAAhB,EAAqB;AACjBG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACE,GAAD,CAAf;AACH;AACJ,CALD,E,CAMJ;AACA;AACA;;AAEA,IAAMG,cAAc,GAAG;AACnBC,EAAAA,KAAK,EAAE,OADY;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAAvB;AAKA,IAAMC,MAAM,GAAG;AACXC,EAAAA,GAAG,EAAE,CAAC,KADK;AAEXC,EAAAA,GAAG,EAAE,CAAC;AAFK,CAAf;AAMA,eAAe,SAASC,GAAT,GAAe;AAAA,wBACL7B,cAAc,CAAC;AAChC8B,IAAAA,EAAE,EAAE,mBAD4B;AAEhCC,IAAAA,gBAAgB,EAAE;AAFc,GAAD,CADT;AAAA,MAClBC,QADkB,mBAClBA,QADkB;;AAAA,wBAMJlC,KAAK,CAACI,QAAN,CAAe,IAAf,CANI;AAAA;AAAA,MAMnB2B,GANmB;AAAA,MAMdI,MANc;;AAQ1B,MAAMC,MAAM,GAAGpC,KAAK,CAACqC,WAAN,CAAkB,SAASC,QAAT,CAAkBP,GAAlB,EAAuB;AACpD,QAAMQ,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,YAAvB,CAAoCf,MAApC,CAAf;AACAG,IAAAA,GAAG,CAACa,SAAJ,CAAcL,MAAd;AACAJ,IAAAA,MAAM,CAACJ,GAAD,CAAN;AACH,GAJc,EAIZ,EAJY,CAAf;AAMA,MAAMc,SAAS,GAAG7C,KAAK,CAACqC,WAAN,CAAkB,SAASC,QAAT,CAAkBP,GAAlB,EAAuB;AACvDI,IAAAA,MAAM,CAAC,IAAD,CAAN;AACH,GAFiB,EAEf,EAFe,CAAlB;AAIA,SAAOD,QAAQ,gBACX,oBAAC,SAAD;AACI,IAAA,iBAAiB,EAAET,cADvB;AAEI,IAAA,MAAM,EAAEG,MAFZ;AAGI,IAAA,IAAI,EAAE,EAHV;AAII,IAAA,MAAM,EAAEQ,MAJZ;AAKI,IAAA,SAAS,EAAES,SALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADW,gBAUX,yCAVJ;AAWH","sourcesContent":["/* jshint esversion: 6 */\nimport React from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\n// Import the functions you need from the SDKs you need\nimport firebase from \"firebase/compat\";\nimport { useState, useEffect } from 'react';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\",\n    authDomain: \"urban-computing-cb07c.firebaseapp.com\",\n    databaseURL: \"https://urban-computing-cb07c-default-rtdb.firebaseio.com\",\n    projectId: \"urban-computing-cb07c\",\n    storageBucket: \"urban-computing-cb07c.appspot.com\",\n    messagingSenderId: \"293478437107\",\n    appId: \"1:293478437107:web:4cd5199b68f68eac542786\",\n    measurementId: \"G-3Z5DD1SJYQ\"\n};\n\n// const [count, setCount] =React.useState(0);\n// React.useEffect(()=>{\n    firebase.initializeApp(firebaseConfig);\n    firebase.database().ref('/').on('value',(snap)=> {\n        let obj = snap.val();\n        for (var key in obj) {\n            console.log(obj[key]);\n        }\n    });\n//         }\n//     });\n// },[]);\n\nconst containerStyle = {\n    width: '400px',\n    height: '400px'\n};\n\nconst center = {\n    lat: -3.745,\n    lng: -38.523\n};\n\n\nexport default function map() {\n    const { isLoaded } = useJsApiLoader({\n        id: 'google-map-script',\n        googleMapsApiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\"\n    });\n\n    const [map, setMap] = React.useState(null);\n\n    const onLoad = React.useCallback(function callback(map) {\n        const bounds = new window.google.maps.LatLngBounds(center);\n        map.fitBounds(bounds);\n        setMap(map);\n    }, []);\n\n    const onUnmount = React.useCallback(function callback(map) {\n        setMap(null);\n    }, []);\n\n    return isLoaded ? (\n        <GoogleMap\n            mapContainerStyle={containerStyle}\n            center={center}\n            zoom={10}\n            onLoad={onLoad}\n            onUnmount={onUnmount}\n        >\n        </GoogleMap>\n\n    ) : <></>\n}\n\n"]},"metadata":{},"sourceType":"module"}