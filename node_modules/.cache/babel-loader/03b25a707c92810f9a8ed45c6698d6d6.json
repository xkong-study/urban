{"ast":null,"code":"import _toConsumableArray from \"/Users/kong/Desktop/game-cloud-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/kong/Desktop/game-cloud-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kong/Desktop/game-cloud-frontend/src/pages/Means.jsx\";\nimport { DislikeFilled, DislikeOutlined, LikeFilled, LikeOutlined } from '@ant-design/icons';\nimport React, { createElement, useState } from 'react';\nimport { Avatar, Comment, Tooltip, Button, Form, Input, List } from 'antd';\nimport moment from 'moment';\nvar TextArea = Input.TextArea;\nexport default function Means() {\n  var _this = this;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      likes = _useState2[0],\n      setLikes = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dislikes = _useState4[0],\n      setDislikes = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      action = _useState6[0],\n      setAction = _useState6[1];\n\n  var like = function like() {\n    setLikes(1);\n    setDislikes(0);\n    setAction('liked');\n  };\n\n  var dislike = function dislike() {\n    setLikes(0);\n    setDislikes(1);\n    setAction('disliked');\n  };\n\n  var CommentList = function CommentList(_ref) {\n    var comments = _ref.comments;\n    return /*#__PURE__*/React.createElement(List, {\n      dataSource: comments,\n      header: \"\".concat(comments.length, \" \").concat(comments.length > 1 ? 'replies' : 'reply'),\n      itemLayout: \"horizontal\",\n      renderItem: function renderItem(props) {\n        return /*#__PURE__*/React.createElement(Comment, Object.assign({}, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 36\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    });\n  };\n\n  var Editor = function Editor(_ref2) {\n    var onChange = _ref2.onChange,\n        onSubmit = _ref2.onSubmit,\n        submitting = _ref2.submitting,\n        value = _ref2.value;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Item, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextArea, {\n      rows: 4,\n      onChange: onChange,\n      value: value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      htmlType: \"submit\",\n      loading: submitting,\n      onClick: onSubmit,\n      type: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, \"Add Comment\")));\n  };\n\n  var actions = [/*#__PURE__*/React.createElement(Tooltip, {\n    key: \"comment-basic-like\",\n    title: \"Like\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: like,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, createElement(action === 'liked' ? LikeFilled : LikeOutlined), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"comment-action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, likes))), /*#__PURE__*/React.createElement(Tooltip, {\n    key: \"comment-basic-dislike\",\n    title: \"Dislike\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: dislike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(action === 'disliked' ? DislikeFilled : DislikeOutlined), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"comment-action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, dislikes))), /*#__PURE__*/React.createElement(\"span\", {\n    key: \"comment-basic-reply-to\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Reply to\")];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      comments = _useState8[0],\n      setComments = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      submitting = _useState10[0],\n      setSubmitting = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      value = _useState12[0],\n      setValue = _useState12[1];\n\n  var handleSubmit = function handleSubmit() {\n    if (!value) return;\n    setSubmitting(true);\n    setTimeout(function () {\n      setSubmitting(false);\n      setValue('');\n      setComments([].concat(_toConsumableArray(comments), [{\n        author: 'Han Solo',\n        avatar: 'https://joeschmoe.io/api/v1/random',\n        content: /*#__PURE__*/React.createElement(\"p\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 30\n          }\n        }, value),\n        datetime: moment().fromNow()\n      }]));\n    }, 1000);\n  };\n\n  var handleChange = function handleChange(e) {\n    setValue(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '800px',\n      height: '400px',\n      backgroundColor: 'pink'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Comment, {\n    style: {\n      width: '700px'\n    },\n    actions: actions,\n    author: /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, \"Han Solo\"),\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: \"https://joeschmoe.io/api/v1/random\",\n      alt: \"Han Solo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }),\n    content: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, \"We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.\"),\n    datetime: /*#__PURE__*/React.createElement(Tooltip, {\n      title: moment().format('YYYY-MM-DD HH:mm:ss'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, moment().fromNow())),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Comment, {\n    style: {\n      width: '700px'\n    },\n    actions: actions,\n    author: /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, \"Han Solo\"),\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: \"https://joeschmoe.io/api/v1/random\",\n      alt: \"Han Solo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }),\n    content: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, \"We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.\"),\n    datetime: /*#__PURE__*/React.createElement(Tooltip, {\n      title: moment().format('YYYY-MM-DD HH:mm:ss'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }, moment().fromNow())),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Comment, {\n    style: {\n      width: '700px'\n    },\n    actions: actions,\n    author: /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, \"Han Solo\"),\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: \"https://joeschmoe.io/api/v1/random\",\n      alt: \"Han Solo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }),\n    content: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, \"We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.\"),\n    datetime: /*#__PURE__*/React.createElement(Tooltip, {\n      title: moment().format('YYYY-MM-DD HH:mm:ss'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }, moment().fromNow())),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Comment, {\n    style: {\n      width: '700px'\n    },\n    actions: actions,\n    author: /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }, \"Han Solo\"),\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: \"https://joeschmoe.io/api/v1/random\",\n      alt: \"Han Solo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 25\n      }\n    }),\n    content: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, \"We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.\"),\n    datetime: /*#__PURE__*/React.createElement(Tooltip, {\n      title: moment().format('YYYY-MM-DD HH:mm:ss'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }, moment().fromNow())),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }), comments.length > 0 && /*#__PURE__*/React.createElement(CommentList, {\n    comments: comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Comment, {\n    style: {\n      width: '700px'\n    },\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: \"https://joeschmoe.io/api/v1/random\",\n      alt: \"Han Solo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 25\n      }\n    }),\n    content: /*#__PURE__*/React.createElement(Editor, {\n      onChange: handleChange,\n      onSubmit: handleSubmit,\n      submitting: submitting,\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/kong/Desktop/game-cloud-frontend/src/pages/Means.jsx"],"names":["DislikeFilled","DislikeOutlined","LikeFilled","LikeOutlined","React","createElement","useState","Avatar","Comment","Tooltip","Button","Form","Input","List","moment","TextArea","Means","likes","setLikes","dislikes","setDislikes","action","setAction","like","dislike","CommentList","comments","length","props","Editor","onChange","onSubmit","submitting","value","actions","setComments","setSubmitting","setValue","handleSubmit","setTimeout","author","avatar","content","datetime","fromNow","handleChange","e","target","width","height","backgroundColor","format"],"mappings":"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","sourcesContent":["import { DislikeFilled, DislikeOutlined, LikeFilled, LikeOutlined } from '@ant-design/icons';\nimport React, { createElement, useState } from 'react';\nimport { Avatar, Comment, Tooltip, Button, Form, Input, List } from 'antd';\nimport moment from 'moment';\nconst { TextArea } = Input;\n\nexport default function Means() {\n    const [likes, setLikes] = useState(0);\n    const [dislikes, setDislikes] = useState(0);\n    const [action, setAction] = useState(null);\n\n    const like = () => {\n        setLikes(1);\n        setDislikes(0);\n        setAction('liked');\n    };\n\n    const dislike = () => {\n        setLikes(0);\n        setDislikes(1);\n        setAction('disliked');\n    };\n\n    const CommentList = ({ comments }) => (\n        <List\n            dataSource={comments}\n            header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\n            itemLayout=\"horizontal\"\n            renderItem={(props) => <Comment {...props} />}\n        />\n    );\n\n    const Editor = ({ onChange, onSubmit, submitting, value }) => (\n        <>\n            <Form.Item>\n                <TextArea rows={4} onChange={onChange} value={value} />\n            </Form.Item>\n            <Form.Item>\n                <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit} type=\"primary\">\n                    Add Comment\n                </Button>\n            </Form.Item>\n        </>\n    );\n\n    const actions = [\n        <Tooltip key=\"comment-basic-like\" title=\"Like\">\n      <span onClick={like}>\n        {createElement(action === 'liked' ? LikeFilled : LikeOutlined)}\n          <span className=\"comment-action\">{likes}</span>\n      </span>\n        </Tooltip>,\n        <Tooltip key=\"comment-basic-dislike\" title=\"Dislike\">\n      <span onClick={dislike}>\n        {React.createElement(action === 'disliked' ? DislikeFilled : DislikeOutlined)}\n          <span className=\"comment-action\">{dislikes}</span>\n      </span>\n        </Tooltip>,\n        <span key=\"comment-basic-reply-to\">Reply to</span>,\n    ];\n\n    const [comments, setComments] = useState([]);\n    const [submitting, setSubmitting] = useState(false);\n    const [value, setValue] = useState('');\n\n    const handleSubmit = () => {\n        if (!value) return;\n        setSubmitting(true);\n        setTimeout(() => {\n            setSubmitting(false);\n            setValue('');\n            setComments([\n                ...comments,\n                {\n                    author: 'Han Solo',\n                    avatar: 'https://joeschmoe.io/api/v1/random',\n                    content: <p>{value}</p>,\n                    datetime: moment().fromNow(),\n                },\n            ]);\n        }, 1000);\n    };\n\n    const handleChange = (e) => {\n        setValue(e.target.value);\n    };\n    return (\n        <div  style={{width:'800px',height:'400px',backgroundColor:'pink'}}>\n            <Comment\n                style={{width:'700px'}}\n                actions={actions}\n                author={<a>Han Solo</a>}\n                avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" alt=\"Han Solo\"/>}\n                content={\n                    <p>\n                        We supply a series of design principles, practical patterns and high quality design\n                        resources (Sketch and Axure), to help people create their product prototypes beautifully\n                        and efficiently.\n                    </p>\n                }\n                datetime={\n                    <Tooltip title={moment().format('YYYY-MM-DD HH:mm:ss')}>\n                        <span>{moment().fromNow()}</span>\n                    </Tooltip>\n                }\n            />\n            <Comment\n                style={{width:'700px'}}\n                actions={actions}\n                author={<a>Han Solo</a>}\n                avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" alt=\"Han Solo\"/>}\n                content={\n                    <p>\n                        We supply a series of design principles, practical patterns and high quality design\n                        resources (Sketch and Axure), to help people create their product prototypes beautifully\n                        and efficiently.\n                    </p>\n                }\n                datetime={\n                    <Tooltip title={moment().format('YYYY-MM-DD HH:mm:ss')}>\n                        <span>{moment().fromNow()}</span>\n                    </Tooltip>\n                }\n            />\n            <Comment\n                style={{width:'700px'}}\n                actions={actions}\n                author={<a>Han Solo</a>}\n                avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" alt=\"Han Solo\"/>}\n                content={\n                    <p>\n                        We supply a series of design principles, practical patterns and high quality design\n                        resources (Sketch and Axure), to help people create their product prototypes beautifully\n                        and efficiently.\n                    </p>\n                }\n                datetime={\n                    <Tooltip title={moment().format('YYYY-MM-DD HH:mm:ss')}>\n                        <span>{moment().fromNow()}</span>\n                    </Tooltip>\n                }\n            />\n            <Comment\n                style={{width:'700px'}}\n                actions={actions}\n                author={<a>Han Solo</a>}\n                avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" alt=\"Han Solo\"/>}\n                content={\n                    <p>\n                        We supply a series of design principles, practical patterns and high quality design\n                        resources (Sketch and Axure), to help people create their product prototypes beautifully\n                        and efficiently.\n                    </p>\n                }\n                datetime={\n                    <Tooltip title={moment().format('YYYY-MM-DD HH:mm:ss')}>\n                        <span>{moment().fromNow()}</span>\n                    </Tooltip>\n                }\n            />\n            {comments.length > 0 && <CommentList comments={comments} />}\n            <Comment\n                style={{width:'700px'}}\n                avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" alt=\"Han Solo\" />}\n                content={\n                    <Editor\n                        onChange={handleChange}\n                        onSubmit={handleSubmit}\n                        submitting={submitting}\n                        value={value}\n                    />\n                }\n             />\n        </div>\n    );\n }\n"]},"metadata":{},"sourceType":"module"}