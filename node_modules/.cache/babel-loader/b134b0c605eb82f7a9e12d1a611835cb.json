{"ast":null,"code":"import _slicedToArray from \"/Users/kong/Desktop/urban_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kong/Desktop/urban_react/src/pages/map.jsx\";\n\n/* jshint esversion: 6 */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { GoogleMap, MarkerClusterer, useJsApiLoader } from '@react-google-maps/api';\nimport { Map, Marker, Markers } from 'react-amap';\nimport { FindUserDataApi, FindTextApi, ArticleSearchApi, UpdateTextApi, CommentListApi } from './request/api';\nimport firebase from \"firebase/compat\";\nimport axios from \"axios\";\nimport { Input } from \"antd\";\nimport ErrorBoundary from \"antd/es/alert/ErrorBoundary\";\nvar Search = Input.Search;\nvar containerStyle = {\n  width: '600px',\n  height: '400px',\n  float: 'left'\n};\nexport default function map() {\n  var firebaseConfig = {\n    apiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\",\n    authDomain: \"urban-computing-cb07c.firebaseapp.com\",\n    databaseURL: \"https://urban-computing-cb07c-default-rtdb.firebaseio.com\",\n    projectId: \"urban-computing-cb07c\",\n    storageBucket: \"urban-computing-cb07c.appspot.com\",\n    messagingSenderId: \"293478437107\",\n    appId: \"1:293478437107:web:4cd5199b68f68eac542786\",\n    measurementId: \"G-3Z5DD1SJYQ\"\n  };\n\n  var _React$useState = React.useState({\n    lat: 53.49332,\n    lng: -6.31718\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      count = _React$useState2[0],\n      setCount = _React$useState2[1];\n\n  React.useEffect(function () {\n    firebase.initializeApp(firebaseConfig);\n    firebase.database().ref('/').on('value', function (snap) {\n      var obj = snap.val();\n\n      if (obj !== null) {\n        for (var key in obj) {\n          if (key.split(',')[2] > '22 13:35:00') {\n            setCount(obj[key]);\n            console.log(obj[key]);\n          }\n        }\n      }\n    });\n  }, []);\n\n  var _useJsApiLoader = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\"\n  }),\n      isLoaded = _useJsApiLoader.isLoaded;\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      map = _React$useState4[0],\n      setMap = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      myArr = _React$useState6[0],\n      setMyArr = _React$useState6[1];\n\n  function QueryData(value) {\n    axios.get('https://maps.googleapis.com/maps/api/place/nearbysearch/json', {\n      params: {\n        key: 'AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c',\n        types: value,\n        location: '53.26,-6.15',\n        radius: '1000000'\n      }\n    }).then(function (response) {\n      var result = response.data.results;\n\n      for (var key in result) {\n        myArr.push(result[key].geometry.location);\n      }\n\n      setMyArr(myArr);\n      console.log(myArr);\n\n      for (var _key in myArr) {\n        axios.get('/api/add', {\n          params: {\n            id: 0,\n            title: myArr[_key],\n            text: ''\n          }\n        });\n      }\n\n      window.location.reload();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  function query() {\n    var marker2 = new window.google.maps.Marker({\n      position: {\n        lat: 51.49332,\n        lng: -6.31718\n      },\n      title: \"starting\"\n    });\n\n    for (var key in myArr) {\n      var marker = new window.google.maps.Marker({\n        position: myArr[key],\n        title: \"starting\"\n      });\n      marker.setMap(map);\n    }\n\n    marker2.setMap(map);\n    console.log('1');\n  }\n\n  var forceUpdate = React.useCallback(function (map) {\n    var marker1 = new window.google.maps.Marker({\n      position: count,\n      title: \"starting\"\n    });\n    FindUserDataApi({}).then(function (response) {\n      var result = response;\n\n      for (var key in result) {\n        var marker = new window.google.maps.Marker({\n          position: {\n            lat: parseFloat(result[key].title.replace(/\\\"/g, \"\").split(',')[0].split(':')[1]),\n            lng: parseFloat(result[key].title.replace(/\\\"/g, \"\").split(',')[1].split(':')[1].replace(/\\}/g, \"\"))\n          }\n        });\n        console.log(1);\n        marker.setMap(map);\n      }\n    });\n    marker1.setMap(map);\n  }, []);\n  return isLoaded ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: count,\n    zoom: 10,\n    onLoad: forceUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginLeft: '5px',\n      fontWeight: 'bold',\n      marginTop: '10px',\n      color: '#0066FF'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, \"\\u641C\\u7D22\\u9644\\u8FD1\\u9910\\u996E\\u5E97:\"), /*#__PURE__*/React.createElement(Search, {\n    style: {\n      width: '330px',\n      marginLeft: '110px',\n      marginBottom: '5px',\n      marginTop: '-42px'\n    },\n    placeholder: \"input search text\",\n    onSearch: QueryData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 106\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null);\n}","map":{"version":3,"sources":["/Users/kong/Desktop/urban_react/src/pages/map.jsx"],"names":["React","useEffect","useRef","useState","GoogleMap","MarkerClusterer","useJsApiLoader","Map","Marker","Markers","FindUserDataApi","FindTextApi","ArticleSearchApi","UpdateTextApi","CommentListApi","firebase","axios","Input","ErrorBoundary","Search","containerStyle","width","height","float","map","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","lat","lng","count","setCount","initializeApp","database","ref","on","snap","obj","val","key","split","console","log","id","googleMapsApiKey","isLoaded","setMap","myArr","setMyArr","QueryData","value","get","params","types","location","radius","then","response","result","data","results","push","geometry","title","text","window","reload","catch","error","query","marker2","google","maps","position","marker","forceUpdate","useCallback","marker1","parseFloat","replace","marginLeft","fontWeight","marginTop","color","marginBottom"],"mappings":"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","sourcesContent":["/* jshint esversion: 6 */\n\nimport React, {useEffect, useRef, useState} from 'react';\nimport {GoogleMap, MarkerClusterer, useJsApiLoader} from '@react-google-maps/api';\nimport {Map, Marker, Markers} from 'react-amap';\nimport {FindUserDataApi, FindTextApi, ArticleSearchApi, UpdateTextApi, CommentListApi} from './request/api';\nimport firebase from \"firebase/compat\";\nimport axios from \"axios\";\nimport {Input} from \"antd\";\nimport ErrorBoundary from \"antd/es/alert/ErrorBoundary\";\nconst { Search } = Input;\n\n\nconst containerStyle = {\n    width: '600px',\n    height: '400px',\n    float:'left'\n};\n\n\nexport default function map() {\n\n    const firebaseConfig = {\n        apiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\",\n        authDomain: \"urban-computing-cb07c.firebaseapp.com\",\n        databaseURL: \"https://urban-computing-cb07c-default-rtdb.firebaseio.com\",\n        projectId: \"urban-computing-cb07c\",\n        storageBucket: \"urban-computing-cb07c.appspot.com\",\n        messagingSenderId: \"293478437107\",\n        appId: \"1:293478437107:web:4cd5199b68f68eac542786\",\n        measurementId: \"G-3Z5DD1SJYQ\"\n    };\n    const [count, setCount] =React.useState({lat: 53.49332, lng: -6.31718});\n\n    React.useEffect(()=>{\n            firebase.initializeApp(firebaseConfig);\n            firebase.database().ref('/').on('value',(snap)=> {\n                let obj = snap.val();\n                if (obj !== null) {\n                    for (var key in obj) {\n                        if(key.split(',')[2]>'22 13:35:00') {\n                            setCount(obj[key]);\n                            console.log(obj[key]);\n                        }\n                    }\n                }\n            });\n    },[]);\n\n\n    const {isLoaded} = useJsApiLoader({\n        id: 'google-map-script',\n        googleMapsApiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\"\n    });\n    let [map, setMap] = React.useState(null);\n\n    const [myArr, setMyArr] = React.useState([]);\n\n    function QueryData(value:string){\n        axios.get('https://maps.googleapis.com/maps/api/place/nearbysearch/json', {\n            params: {\n                key: 'AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c',\n                types: value,\n                location: '53.26,-6.15',\n                radius: '1000000'\n            }\n        }).then(function (response) {\n            const result = response.data.results;\n            for (var key in result) {\n                myArr.push(result[key].geometry.location);\n            }\n            setMyArr(myArr);\n            console.log(myArr);\n            for(let key in myArr) {\n                axios.get('/api/add', {\n                    params: {\n                        id:0,\n                        title:myArr[key],\n                        text:''\n                    }\n                });\n            }\n            window.location.reload();\n        })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    function query(){\n        const marker2 = new window.google.maps.Marker({\n            position: {lat: 51.49332, lng: -6.31718},\n            title: \"starting\"\n        });\n        for(let key in myArr) {\n            const marker = new window.google.maps.Marker({\n                position: myArr[key],\n                title: \"starting\"\n            });\n            marker.setMap(map);\n      }\n        marker2.setMap(map);\n        console.log('1');\n    }\n    const forceUpdate= React.useCallback((map) =>{\n\n            const marker1 = new window.google.maps.Marker({\n                position: count,\n                title: \"starting\"\n            });\n            FindUserDataApi({}).then(response => {\n                const result = response;\n                for (var key in result) {\n                    \n                    const marker = new window.google.maps.Marker({\n                        position: {lat: parseFloat(result[key].title.replace(/\\\"/g, \"\").split(',')[0].split(':')[1]), lng: parseFloat(result[key].title.replace(/\\\"/g, \"\").split(',')[1].split(':')[1].replace(/\\}/g,\"\"))},\n                    });\n                    console.log(1);\n                    marker.setMap(map);\n                }\n            });\n            marker1.setMap(map);\n        },[]);\n\n\n    return isLoaded?(\n        <div>\n            <GoogleMap  mapContainerStyle={containerStyle}  center={count}  zoom={10}  onLoad={forceUpdate}> </GoogleMap>\n            <p style={{marginLeft:'5px',fontWeight:'bold',marginTop:'10px',color:'#0066FF'}}>搜索附近餐饮店:</p><Search style={{width:'330px',marginLeft:'110px',marginBottom:'5px',marginTop:'-42px'}} placeholder=\"input search text\" onSearch={QueryData}></Search>\n        </div>):<></>\n}\n\n"]},"metadata":{},"sourceType":"module"}