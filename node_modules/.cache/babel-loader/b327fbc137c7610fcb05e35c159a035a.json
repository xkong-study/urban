{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kong/Desktop/urban_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/Users/kong/Desktop/urban_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kong/Desktop/urban_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"/Users/kong/Desktop/urban_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/kong/Desktop/urban_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/kong/Desktop/urban_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _ERROR_MAP;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport '@firebase/installations';\nimport { Component } from '@firebase/component';\nimport { openDB, deleteDB } from 'idb';\nimport { ErrorFactory, isIndexedDBAvailable, validateIndexedDBOpenable, getModularInstance } from '@firebase/util';\nimport { _registerComponent, _getProvider, getApp } from '@firebase/app';\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar DEFAULT_VAPID_KEY = 'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\nvar ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\n/** Key of FCM Payload in Notification's data field. */\n\nvar FCM_MSG = 'FCM_MSG';\nvar CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id'; // Defined as in proto/messaging_event.proto. Neglecting fields that are supported.\n\nvar SDK_PLATFORM_WEB = 3;\nvar EVENT_MESSAGE_DELIVERED = 1;\nvar MessageType$1;\n\n(function (MessageType) {\n  MessageType[MessageType[\"DATA_MESSAGE\"] = 1] = \"DATA_MESSAGE\";\n  MessageType[MessageType[\"DISPLAY_NOTIFICATION\"] = 3] = \"DISPLAY_NOTIFICATION\";\n})(MessageType$1 || (MessageType$1 = {}));\n/**\r\n * @license\r\n * Copyright 2018 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\r\n * in compliance with the License. You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under the License\r\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\r\n * or implied. See the License for the specific language governing permissions and limitations under\r\n * the License.\r\n */\n\n\nvar MessageType;\n\n(function (MessageType) {\n  MessageType[\"PUSH_RECEIVED\"] = \"push-received\";\n  MessageType[\"NOTIFICATION_CLICKED\"] = \"notification-clicked\";\n})(MessageType || (MessageType = {}));\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction arrayToBase64(array) {\n  var uint8Array = new Uint8Array(array);\n  var base64String = btoa(String.fromCharCode.apply(String, _toConsumableArray(uint8Array)));\n  return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\nfunction base64ToArray(base64String) {\n  var padding = '='.repeat((4 - base64String.length % 4) % 4);\n  var base64 = (base64String + padding).replace(/\\-/g, '+').replace(/_/g, '/');\n  var rawData = atob(base64);\n  var outputArray = new Uint8Array(rawData.length);\n\n  for (var i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n\n  return outputArray;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar OLD_DB_NAME = 'fcm_token_details_db';\n/**\r\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher, so that the upgrade\r\n * callback is called for all versions of the old DB.\r\n */\n\nvar OLD_DB_VERSION = 5;\nvar OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\n\nfunction migrateOldDatabase(_x) {\n  return _migrateOldDatabase.apply(this, arguments);\n}\n\nfunction _migrateOldDatabase() {\n  _migrateOldDatabase = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(senderId) {\n    var databases, dbNames, tokenDetails, db;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!('databases' in indexedDB)) {\n              _context2.next = 7;\n              break;\n            }\n\n            _context2.next = 3;\n            return indexedDB.databases();\n\n          case 3:\n            databases = _context2.sent;\n            dbNames = databases.map(function (db) {\n              return db.name;\n            });\n\n            if (dbNames.includes(OLD_DB_NAME)) {\n              _context2.next = 7;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", null);\n\n          case 7:\n            tokenDetails = null;\n            _context2.next = 10;\n            return openDB(OLD_DB_NAME, OLD_DB_VERSION, {\n              upgrade: function () {\n                var _upgrade = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(db, oldVersion, newVersion, upgradeTransaction) {\n                  var _a, objectStore, value, oldDetails, _oldDetails, _oldDetails2;\n\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          if (!(oldVersion < 2)) {\n                            _context.next = 2;\n                            break;\n                          }\n\n                          return _context.abrupt(\"return\");\n\n                        case 2:\n                          if (db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\n                            _context.next = 4;\n                            break;\n                          }\n\n                          return _context.abrupt(\"return\");\n\n                        case 4:\n                          objectStore = upgradeTransaction.objectStore(OLD_OBJECT_STORE_NAME);\n                          _context.next = 7;\n                          return objectStore.index('fcmSenderId').get(senderId);\n\n                        case 7:\n                          value = _context.sent;\n                          _context.next = 10;\n                          return objectStore.clear();\n\n                        case 10:\n                          if (value) {\n                            _context.next = 12;\n                            break;\n                          }\n\n                          return _context.abrupt(\"return\");\n\n                        case 12:\n                          if (!(oldVersion === 2)) {\n                            _context.next = 19;\n                            break;\n                          }\n\n                          oldDetails = value;\n\n                          if (!(!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint)) {\n                            _context.next = 16;\n                            break;\n                          }\n\n                          return _context.abrupt(\"return\");\n\n                        case 16:\n                          tokenDetails = {\n                            token: oldDetails.fcmToken,\n                            createTime: (_a = oldDetails.createTime) !== null && _a !== void 0 ? _a : Date.now(),\n                            subscriptionOptions: {\n                              auth: oldDetails.auth,\n                              p256dh: oldDetails.p256dh,\n                              endpoint: oldDetails.endpoint,\n                              swScope: oldDetails.swScope,\n                              vapidKey: typeof oldDetails.vapidKey === 'string' ? oldDetails.vapidKey : arrayToBase64(oldDetails.vapidKey)\n                            }\n                          };\n                          _context.next = 20;\n                          break;\n\n                        case 19:\n                          if (oldVersion === 3) {\n                            _oldDetails = value;\n                            tokenDetails = {\n                              token: _oldDetails.fcmToken,\n                              createTime: _oldDetails.createTime,\n                              subscriptionOptions: {\n                                auth: arrayToBase64(_oldDetails.auth),\n                                p256dh: arrayToBase64(_oldDetails.p256dh),\n                                endpoint: _oldDetails.endpoint,\n                                swScope: _oldDetails.swScope,\n                                vapidKey: arrayToBase64(_oldDetails.vapidKey)\n                              }\n                            };\n                          } else if (oldVersion === 4) {\n                            _oldDetails2 = value;\n                            tokenDetails = {\n                              token: _oldDetails2.fcmToken,\n                              createTime: _oldDetails2.createTime,\n                              subscriptionOptions: {\n                                auth: arrayToBase64(_oldDetails2.auth),\n                                p256dh: arrayToBase64(_oldDetails2.p256dh),\n                                endpoint: _oldDetails2.endpoint,\n                                swScope: _oldDetails2.swScope,\n                                vapidKey: arrayToBase64(_oldDetails2.vapidKey)\n                              }\n                            };\n                          }\n\n                        case 20:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                function upgrade(_x29, _x30, _x31, _x32) {\n                  return _upgrade.apply(this, arguments);\n                }\n\n                return upgrade;\n              }()\n            });\n\n          case 10:\n            db = _context2.sent;\n            db.close(); // Delete all old databases.\n\n            _context2.next = 14;\n            return deleteDB(OLD_DB_NAME);\n\n          case 14:\n            _context2.next = 16;\n            return deleteDB('fcm_vapid_details_db');\n\n          case 16:\n            _context2.next = 18;\n            return deleteDB('undefined');\n\n          case 18:\n            return _context2.abrupt(\"return\", checkTokenDetails(tokenDetails) ? tokenDetails : null);\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _migrateOldDatabase.apply(this, arguments);\n}\n\nfunction checkTokenDetails(tokenDetails) {\n  if (!tokenDetails || !tokenDetails.subscriptionOptions) {\n    return false;\n  }\n\n  var subscriptionOptions = tokenDetails.subscriptionOptions;\n  return typeof tokenDetails.createTime === 'number' && tokenDetails.createTime > 0 && typeof tokenDetails.token === 'string' && tokenDetails.token.length > 0 && typeof subscriptionOptions.auth === 'string' && subscriptionOptions.auth.length > 0 && typeof subscriptionOptions.p256dh === 'string' && subscriptionOptions.p256dh.length > 0 && typeof subscriptionOptions.endpoint === 'string' && subscriptionOptions.endpoint.length > 0 && typeof subscriptionOptions.swScope === 'string' && subscriptionOptions.swScope.length > 0 && typeof subscriptionOptions.vapidKey === 'string' && subscriptionOptions.vapidKey.length > 0;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Exported for tests.\n\n\nvar DATABASE_NAME = 'firebase-messaging-database';\nvar DATABASE_VERSION = 1;\nvar OBJECT_STORE_NAME = 'firebase-messaging-store';\nvar dbPromise = null;\n\nfunction getDbPromise() {\n  if (!dbPromise) {\n    dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n      upgrade: function upgrade(upgradeDb, oldVersion) {\n        // We don't use 'break' in this switch statement, the fall-through behavior is what we want,\n        // because if there are multiple versions between the old version and the current version, we\n        // want ALL the migrations that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            upgradeDb.createObjectStore(OBJECT_STORE_NAME);\n        }\n      }\n    });\n  }\n\n  return dbPromise;\n}\n/** Gets record(s) from the objectStore that match the given key. */\n\n\nfunction dbGet(_x2) {\n  return _dbGet.apply(this, arguments);\n}\n/** Assigns or overwrites the record for the given key with the given value. */\n\n\nfunction _dbGet() {\n  _dbGet = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(firebaseDependencies) {\n    var key, db, tokenDetails, oldTokenDetails;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            key = getKey(firebaseDependencies);\n            _context3.next = 3;\n            return getDbPromise();\n\n          case 3:\n            db = _context3.sent;\n            _context3.next = 6;\n            return db.transaction(OBJECT_STORE_NAME).objectStore(OBJECT_STORE_NAME).get(key);\n\n          case 6:\n            tokenDetails = _context3.sent;\n\n            if (!tokenDetails) {\n              _context3.next = 11;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", tokenDetails);\n\n          case 11:\n            _context3.next = 13;\n            return migrateOldDatabase(firebaseDependencies.appConfig.senderId);\n\n          case 13:\n            oldTokenDetails = _context3.sent;\n\n            if (!oldTokenDetails) {\n              _context3.next = 18;\n              break;\n            }\n\n            _context3.next = 17;\n            return dbSet(firebaseDependencies, oldTokenDetails);\n\n          case 17:\n            return _context3.abrupt(\"return\", oldTokenDetails);\n\n          case 18:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _dbGet.apply(this, arguments);\n}\n\nfunction dbSet(_x3, _x4) {\n  return _dbSet.apply(this, arguments);\n}\n/** Removes record(s) from the objectStore that match the given key. */\n\n\nfunction _dbSet() {\n  _dbSet = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(firebaseDependencies, tokenDetails) {\n    var key, db, tx;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            key = getKey(firebaseDependencies);\n            _context4.next = 3;\n            return getDbPromise();\n\n          case 3:\n            db = _context4.sent;\n            tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n            _context4.next = 7;\n            return tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key);\n\n          case 7:\n            _context4.next = 9;\n            return tx.done;\n\n          case 9:\n            return _context4.abrupt(\"return\", tokenDetails);\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _dbSet.apply(this, arguments);\n}\n\nfunction dbRemove(_x5) {\n  return _dbRemove.apply(this, arguments);\n}\n\nfunction _dbRemove() {\n  _dbRemove = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(firebaseDependencies) {\n    var key, db, tx;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            key = getKey(firebaseDependencies);\n            _context5.next = 3;\n            return getDbPromise();\n\n          case 3:\n            db = _context5.sent;\n            tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n            _context5.next = 7;\n            return tx.objectStore(OBJECT_STORE_NAME).delete(key);\n\n          case 7:\n            _context5.next = 9;\n            return tx.done;\n\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _dbRemove.apply(this, arguments);\n}\n\nfunction getKey(_ref) {\n  var appConfig = _ref.appConfig;\n  return appConfig.appId;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ERROR_MAP = (_ERROR_MAP = {}, _defineProperty(_ERROR_MAP, \"missing-app-config-values\"\n/* MISSING_APP_CONFIG_VALUES */\n, 'Missing App configuration value: \"{$valueName}\"'), _defineProperty(_ERROR_MAP, \"only-available-in-window\"\n/* AVAILABLE_IN_WINDOW */\n, 'This method is available in a Window context.'), _defineProperty(_ERROR_MAP, \"only-available-in-sw\"\n/* AVAILABLE_IN_SW */\n, 'This method is available in a service worker context.'), _defineProperty(_ERROR_MAP, \"permission-default\"\n/* PERMISSION_DEFAULT */\n, 'The notification permission was not granted and dismissed instead.'), _defineProperty(_ERROR_MAP, \"permission-blocked\"\n/* PERMISSION_BLOCKED */\n, 'The notification permission was not granted and blocked instead.'), _defineProperty(_ERROR_MAP, \"unsupported-browser\"\n/* UNSUPPORTED_BROWSER */\n, \"This browser doesn't support the API's required to use the Firebase SDK.\"), _defineProperty(_ERROR_MAP, \"indexed-db-unsupported\"\n/* INDEXED_DB_UNSUPPORTED */\n, \"This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)\"), _defineProperty(_ERROR_MAP, \"failed-service-worker-registration\"\n/* FAILED_DEFAULT_REGISTRATION */\n, 'We are unable to register the default service worker. {$browserErrorMessage}'), _defineProperty(_ERROR_MAP, \"token-subscribe-failed\"\n/* TOKEN_SUBSCRIBE_FAILED */\n, 'A problem occurred while subscribing the user to FCM: {$errorInfo}'), _defineProperty(_ERROR_MAP, \"token-subscribe-no-token\"\n/* TOKEN_SUBSCRIBE_NO_TOKEN */\n, 'FCM returned no token when subscribing the user to push.'), _defineProperty(_ERROR_MAP, \"token-unsubscribe-failed\"\n/* TOKEN_UNSUBSCRIBE_FAILED */\n, 'A problem occurred while unsubscribing the ' + 'user from FCM: {$errorInfo}'), _defineProperty(_ERROR_MAP, \"token-update-failed\"\n/* TOKEN_UPDATE_FAILED */\n, 'A problem occurred while updating the user from FCM: {$errorInfo}'), _defineProperty(_ERROR_MAP, \"token-update-no-token\"\n/* TOKEN_UPDATE_NO_TOKEN */\n, 'FCM returned no token when updating the user to push.'), _defineProperty(_ERROR_MAP, \"use-sw-after-get-token\"\n/* USE_SW_AFTER_GET_TOKEN */\n, 'The useServiceWorker() method may only be called once and must be ' + 'called before calling getToken() to ensure your service worker is used.'), _defineProperty(_ERROR_MAP, \"invalid-sw-registration\"\n/* INVALID_SW_REGISTRATION */\n, 'The input to useServiceWorker() must be a ServiceWorkerRegistration.'), _defineProperty(_ERROR_MAP, \"invalid-bg-handler\"\n/* INVALID_BG_HANDLER */\n, 'The input to setBackgroundMessageHandler() must be a function.'), _defineProperty(_ERROR_MAP, \"invalid-vapid-key\"\n/* INVALID_VAPID_KEY */\n, 'The public VAPID key must be a string.'), _defineProperty(_ERROR_MAP, \"use-vapid-key-after-get-token\"\n/* USE_VAPID_KEY_AFTER_GET_TOKEN */\n, 'The usePublicVapidKey() method may only be called once and must be ' + 'called before calling getToken() to ensure your VAPID key is used.'), _ERROR_MAP);\nvar ERROR_FACTORY = new ErrorFactory('messaging', 'Messaging', ERROR_MAP);\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nfunction requestGetToken(_x6, _x7) {\n  return _requestGetToken.apply(this, arguments);\n}\n\nfunction _requestGetToken() {\n  _requestGetToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(firebaseDependencies, subscriptionOptions) {\n    var _a, headers, body, subscribeOptions, responseData, response, message;\n\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return getHeaders(firebaseDependencies);\n\n          case 2:\n            headers = _context6.sent;\n            body = getBody(subscriptionOptions);\n            subscribeOptions = {\n              method: 'POST',\n              headers: headers,\n              body: JSON.stringify(body)\n            };\n            _context6.prev = 5;\n            _context6.next = 8;\n            return fetch(getEndpoint(firebaseDependencies.appConfig), subscribeOptions);\n\n          case 8:\n            response = _context6.sent;\n            _context6.next = 11;\n            return response.json();\n\n          case 11:\n            responseData = _context6.sent;\n            _context6.next = 17;\n            break;\n\n          case 14:\n            _context6.prev = 14;\n            _context6.t0 = _context6[\"catch\"](5);\n            throw ERROR_FACTORY.create(\"token-subscribe-failed\"\n            /* TOKEN_SUBSCRIBE_FAILED */\n            , {\n              errorInfo: (_a = _context6.t0) === null || _a === void 0 ? void 0 : _a.toString()\n            });\n\n          case 17:\n            if (!responseData.error) {\n              _context6.next = 20;\n              break;\n            }\n\n            message = responseData.error.message;\n            throw ERROR_FACTORY.create(\"token-subscribe-failed\"\n            /* TOKEN_SUBSCRIBE_FAILED */\n            , {\n              errorInfo: message\n            });\n\n          case 20:\n            if (responseData.token) {\n              _context6.next = 22;\n              break;\n            }\n\n            throw ERROR_FACTORY.create(\"token-subscribe-no-token\"\n            /* TOKEN_SUBSCRIBE_NO_TOKEN */\n            );\n\n          case 22:\n            return _context6.abrupt(\"return\", responseData.token);\n\n          case 23:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[5, 14]]);\n  }));\n  return _requestGetToken.apply(this, arguments);\n}\n\nfunction requestUpdateToken(_x8, _x9) {\n  return _requestUpdateToken.apply(this, arguments);\n}\n\nfunction _requestUpdateToken() {\n  _requestUpdateToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(firebaseDependencies, tokenDetails) {\n    var _a, headers, body, updateOptions, responseData, response, message;\n\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return getHeaders(firebaseDependencies);\n\n          case 2:\n            headers = _context7.sent;\n            body = getBody(tokenDetails.subscriptionOptions);\n            updateOptions = {\n              method: 'PATCH',\n              headers: headers,\n              body: JSON.stringify(body)\n            };\n            _context7.prev = 5;\n            _context7.next = 8;\n            return fetch(\"\".concat(getEndpoint(firebaseDependencies.appConfig), \"/\").concat(tokenDetails.token), updateOptions);\n\n          case 8:\n            response = _context7.sent;\n            _context7.next = 11;\n            return response.json();\n\n          case 11:\n            responseData = _context7.sent;\n            _context7.next = 17;\n            break;\n\n          case 14:\n            _context7.prev = 14;\n            _context7.t0 = _context7[\"catch\"](5);\n            throw ERROR_FACTORY.create(\"token-update-failed\"\n            /* TOKEN_UPDATE_FAILED */\n            , {\n              errorInfo: (_a = _context7.t0) === null || _a === void 0 ? void 0 : _a.toString()\n            });\n\n          case 17:\n            if (!responseData.error) {\n              _context7.next = 20;\n              break;\n            }\n\n            message = responseData.error.message;\n            throw ERROR_FACTORY.create(\"token-update-failed\"\n            /* TOKEN_UPDATE_FAILED */\n            , {\n              errorInfo: message\n            });\n\n          case 20:\n            if (responseData.token) {\n              _context7.next = 22;\n              break;\n            }\n\n            throw ERROR_FACTORY.create(\"token-update-no-token\"\n            /* TOKEN_UPDATE_NO_TOKEN */\n            );\n\n          case 22:\n            return _context7.abrupt(\"return\", responseData.token);\n\n          case 23:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[5, 14]]);\n  }));\n  return _requestUpdateToken.apply(this, arguments);\n}\n\nfunction requestDeleteToken(_x10, _x11) {\n  return _requestDeleteToken.apply(this, arguments);\n}\n\nfunction _requestDeleteToken() {\n  _requestDeleteToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(firebaseDependencies, token) {\n    var _a, headers, unsubscribeOptions, response, responseData, message;\n\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return getHeaders(firebaseDependencies);\n\n          case 2:\n            headers = _context8.sent;\n            unsubscribeOptions = {\n              method: 'DELETE',\n              headers: headers\n            };\n            _context8.prev = 4;\n            _context8.next = 7;\n            return fetch(\"\".concat(getEndpoint(firebaseDependencies.appConfig), \"/\").concat(token), unsubscribeOptions);\n\n          case 7:\n            response = _context8.sent;\n            _context8.next = 10;\n            return response.json();\n\n          case 10:\n            responseData = _context8.sent;\n\n            if (!responseData.error) {\n              _context8.next = 14;\n              break;\n            }\n\n            message = responseData.error.message;\n            throw ERROR_FACTORY.create(\"token-unsubscribe-failed\"\n            /* TOKEN_UNSUBSCRIBE_FAILED */\n            , {\n              errorInfo: message\n            });\n\n          case 14:\n            _context8.next = 19;\n            break;\n\n          case 16:\n            _context8.prev = 16;\n            _context8.t0 = _context8[\"catch\"](4);\n            throw ERROR_FACTORY.create(\"token-unsubscribe-failed\"\n            /* TOKEN_UNSUBSCRIBE_FAILED */\n            , {\n              errorInfo: (_a = _context8.t0) === null || _a === void 0 ? void 0 : _a.toString()\n            });\n\n          case 19:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[4, 16]]);\n  }));\n  return _requestDeleteToken.apply(this, arguments);\n}\n\nfunction getEndpoint(_ref2) {\n  var projectId = _ref2.projectId;\n  return \"\".concat(ENDPOINT, \"/projects/\").concat(projectId, \"/registrations\");\n}\n\nfunction getHeaders(_x12) {\n  return _getHeaders.apply(this, arguments);\n}\n\nfunction _getHeaders() {\n  _getHeaders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(_ref3) {\n    var appConfig, installations, authToken;\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            appConfig = _ref3.appConfig, installations = _ref3.installations;\n            _context9.next = 3;\n            return installations.getToken();\n\n          case 3:\n            authToken = _context9.sent;\n            return _context9.abrupt(\"return\", new Headers({\n              'Content-Type': 'application/json',\n              Accept: 'application/json',\n              'x-goog-api-key': appConfig.apiKey,\n              'x-goog-firebase-installations-auth': \"FIS \".concat(authToken)\n            }));\n\n          case 5:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _getHeaders.apply(this, arguments);\n}\n\nfunction getBody(_ref4) {\n  var p256dh = _ref4.p256dh,\n      auth = _ref4.auth,\n      endpoint = _ref4.endpoint,\n      vapidKey = _ref4.vapidKey;\n  var body = {\n    web: {\n      endpoint: endpoint,\n      auth: auth,\n      p256dh: p256dh\n    }\n  };\n\n  if (vapidKey !== DEFAULT_VAPID_KEY) {\n    body.web.applicationPubKey = vapidKey;\n  }\n\n  return body;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// UpdateRegistration will be called once every week.\n\n\nvar TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\n\nfunction getTokenInternal(_x13) {\n  return _getTokenInternal.apply(this, arguments);\n}\n/**\r\n * This method deletes the token from the database, unsubscribes the token from FCM, and unregisters\r\n * the push subscription if it exists.\r\n */\n\n\nfunction _getTokenInternal() {\n  _getTokenInternal = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(messaging) {\n    var pushSubscription, subscriptionOptions, tokenDetails;\n    return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.next = 2;\n            return getPushSubscription(messaging.swRegistration, messaging.vapidKey);\n\n          case 2:\n            pushSubscription = _context10.sent;\n            subscriptionOptions = {\n              vapidKey: messaging.vapidKey,\n              swScope: messaging.swRegistration.scope,\n              endpoint: pushSubscription.endpoint,\n              auth: arrayToBase64(pushSubscription.getKey('auth')),\n              p256dh: arrayToBase64(pushSubscription.getKey('p256dh'))\n            };\n            _context10.next = 6;\n            return dbGet(messaging.firebaseDependencies);\n\n          case 6:\n            tokenDetails = _context10.sent;\n\n            if (tokenDetails) {\n              _context10.next = 11;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", getNewToken(messaging.firebaseDependencies, subscriptionOptions));\n\n          case 11:\n            if (isTokenValid(tokenDetails.subscriptionOptions, subscriptionOptions)) {\n              _context10.next = 23;\n              break;\n            }\n\n            _context10.prev = 12;\n            _context10.next = 15;\n            return requestDeleteToken(messaging.firebaseDependencies, tokenDetails.token);\n\n          case 15:\n            _context10.next = 20;\n            break;\n\n          case 17:\n            _context10.prev = 17;\n            _context10.t0 = _context10[\"catch\"](12);\n            // Suppress errors because of #2364\n            console.warn(_context10.t0);\n\n          case 20:\n            return _context10.abrupt(\"return\", getNewToken(messaging.firebaseDependencies, subscriptionOptions));\n\n          case 23:\n            if (!(Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS)) {\n              _context10.next = 27;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", updateToken(messaging, {\n              token: tokenDetails.token,\n              createTime: Date.now(),\n              subscriptionOptions: subscriptionOptions\n            }));\n\n          case 27:\n            return _context10.abrupt(\"return\", tokenDetails.token);\n\n          case 28:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, null, [[12, 17]]);\n  }));\n  return _getTokenInternal.apply(this, arguments);\n}\n\nfunction deleteTokenInternal(_x14) {\n  return _deleteTokenInternal.apply(this, arguments);\n}\n\nfunction _deleteTokenInternal() {\n  _deleteTokenInternal = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(messaging) {\n    var tokenDetails, pushSubscription;\n    return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.next = 2;\n            return dbGet(messaging.firebaseDependencies);\n\n          case 2:\n            tokenDetails = _context11.sent;\n\n            if (!tokenDetails) {\n              _context11.next = 8;\n              break;\n            }\n\n            _context11.next = 6;\n            return requestDeleteToken(messaging.firebaseDependencies, tokenDetails.token);\n\n          case 6:\n            _context11.next = 8;\n            return dbRemove(messaging.firebaseDependencies);\n\n          case 8:\n            _context11.next = 10;\n            return messaging.swRegistration.pushManager.getSubscription();\n\n          case 10:\n            pushSubscription = _context11.sent;\n\n            if (!pushSubscription) {\n              _context11.next = 13;\n              break;\n            }\n\n            return _context11.abrupt(\"return\", pushSubscription.unsubscribe());\n\n          case 13:\n            return _context11.abrupt(\"return\", true);\n\n          case 14:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n  return _deleteTokenInternal.apply(this, arguments);\n}\n\nfunction updateToken(_x15, _x16) {\n  return _updateToken.apply(this, arguments);\n}\n\nfunction _updateToken() {\n  _updateToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(messaging, tokenDetails) {\n    var updatedToken, updatedTokenDetails;\n    return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.prev = 0;\n            _context12.next = 3;\n            return requestUpdateToken(messaging.firebaseDependencies, tokenDetails);\n\n          case 3:\n            updatedToken = _context12.sent;\n            updatedTokenDetails = Object.assign(Object.assign({}, tokenDetails), {\n              token: updatedToken,\n              createTime: Date.now()\n            });\n            _context12.next = 7;\n            return dbSet(messaging.firebaseDependencies, updatedTokenDetails);\n\n          case 7:\n            return _context12.abrupt(\"return\", updatedToken);\n\n          case 10:\n            _context12.prev = 10;\n            _context12.t0 = _context12[\"catch\"](0);\n            _context12.next = 14;\n            return deleteTokenInternal(messaging);\n\n          case 14:\n            throw _context12.t0;\n\n          case 15:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12, null, [[0, 10]]);\n  }));\n  return _updateToken.apply(this, arguments);\n}\n\nfunction getNewToken(_x17, _x18) {\n  return _getNewToken.apply(this, arguments);\n}\n/**\r\n * Gets a PushSubscription for the current user.\r\n */\n\n\nfunction _getNewToken() {\n  _getNewToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(firebaseDependencies, subscriptionOptions) {\n    var token, tokenDetails;\n    return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _context13.next = 2;\n            return requestGetToken(firebaseDependencies, subscriptionOptions);\n\n          case 2:\n            token = _context13.sent;\n            tokenDetails = {\n              token: token,\n              createTime: Date.now(),\n              subscriptionOptions: subscriptionOptions\n            };\n            _context13.next = 6;\n            return dbSet(firebaseDependencies, tokenDetails);\n\n          case 6:\n            return _context13.abrupt(\"return\", tokenDetails.token);\n\n          case 7:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13);\n  }));\n  return _getNewToken.apply(this, arguments);\n}\n\nfunction getPushSubscription(_x19, _x20) {\n  return _getPushSubscription.apply(this, arguments);\n}\n/**\r\n * Checks if the saved tokenDetails object matches the configuration provided.\r\n */\n\n\nfunction _getPushSubscription() {\n  _getPushSubscription = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(swRegistration, vapidKey) {\n    var subscription;\n    return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            _context14.next = 2;\n            return swRegistration.pushManager.getSubscription();\n\n          case 2:\n            subscription = _context14.sent;\n\n            if (!subscription) {\n              _context14.next = 5;\n              break;\n            }\n\n            return _context14.abrupt(\"return\", subscription);\n\n          case 5:\n            return _context14.abrupt(\"return\", swRegistration.pushManager.subscribe({\n              userVisibleOnly: true,\n              // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\n              // submitted to pushManager#subscribe must be of type Uint8Array.\n              applicationServerKey: base64ToArray(vapidKey)\n            }));\n\n          case 6:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14);\n  }));\n  return _getPushSubscription.apply(this, arguments);\n}\n\nfunction isTokenValid(dbOptions, currentOptions) {\n  var isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\n  var isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\n  var isAuthEqual = currentOptions.auth === dbOptions.auth;\n  var isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\n  return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction externalizePayload(internalPayload) {\n  var payload = {\n    from: internalPayload.from,\n    // eslint-disable-next-line camelcase\n    collapseKey: internalPayload.collapse_key,\n    // eslint-disable-next-line camelcase\n    messageId: internalPayload.fcmMessageId\n  };\n  propagateNotificationPayload(payload, internalPayload);\n  propagateDataPayload(payload, internalPayload);\n  propagateFcmOptions(payload, internalPayload);\n  return payload;\n}\n\nfunction propagateNotificationPayload(payload, messagePayloadInternal) {\n  if (!messagePayloadInternal.notification) {\n    return;\n  }\n\n  payload.notification = {};\n  var title = messagePayloadInternal.notification.title;\n\n  if (!!title) {\n    payload.notification.title = title;\n  }\n\n  var body = messagePayloadInternal.notification.body;\n\n  if (!!body) {\n    payload.notification.body = body;\n  }\n\n  var image = messagePayloadInternal.notification.image;\n\n  if (!!image) {\n    payload.notification.image = image;\n  }\n\n  var icon = messagePayloadInternal.notification.icon;\n\n  if (!!icon) {\n    payload.notification.icon = icon;\n  }\n}\n\nfunction propagateDataPayload(payload, messagePayloadInternal) {\n  if (!messagePayloadInternal.data) {\n    return;\n  }\n\n  payload.data = messagePayloadInternal.data;\n}\n\nfunction propagateFcmOptions(payload, messagePayloadInternal) {\n  var _a, _b, _c, _d, _e; // fcmOptions.link value is written into notification.click_action. see more in b/232072111\n\n\n  if (!messagePayloadInternal.fcmOptions && !((_a = messagePayloadInternal.notification) === null || _a === void 0 ? void 0 : _a.click_action)) {\n    return;\n  }\n\n  payload.fcmOptions = {};\n  var link = (_c = (_b = messagePayloadInternal.fcmOptions) === null || _b === void 0 ? void 0 : _b.link) !== null && _c !== void 0 ? _c : (_d = messagePayloadInternal.notification) === null || _d === void 0 ? void 0 : _d.click_action;\n\n  if (!!link) {\n    payload.fcmOptions.link = link;\n  } // eslint-disable-next-line camelcase\n\n\n  var analyticsLabel = (_e = messagePayloadInternal.fcmOptions) === null || _e === void 0 ? void 0 : _e.analytics_label;\n\n  if (!!analyticsLabel) {\n    payload.fcmOptions.analyticsLabel = analyticsLabel;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction isConsoleMessage(data) {\n  // This message has a campaign ID, meaning it was sent using the Firebase Console.\n  return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** Returns a promise that resolves after given time passes. */\n\n\nfunction sleep(ms) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, ms);\n  });\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n_mergeStrings('hts/frbslgigp.ogepscmv/ieo/eaylg', 'tp:/ieaeogn-agolai.o/1frlglgc/o');\n\n_mergeStrings('AzSCbw63g1R0nCw85jG8', 'Iaya3yLKwmgvh7cF0q4');\n\nfunction stageLog(_x21, _x22) {\n  return _stageLog.apply(this, arguments);\n}\n\nfunction _stageLog() {\n  _stageLog = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(messaging, internalPayload) {\n    var fcmEvent;\n    return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            _context15.t0 = createFcmEvent;\n            _context15.t1 = internalPayload;\n            _context15.next = 4;\n            return messaging.firebaseDependencies.installations.getId();\n\n          case 4:\n            _context15.t2 = _context15.sent;\n            fcmEvent = (0, _context15.t0)(_context15.t1, _context15.t2);\n            createAndEnqueueLogEvent(messaging, fcmEvent);\n\n          case 7:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15);\n  }));\n  return _stageLog.apply(this, arguments);\n}\n\nfunction createFcmEvent(internalPayload, fid) {\n  var _a, _b;\n\n  var fcmEvent = {};\n  /* eslint-disable camelcase */\n  // some fields should always be non-null. Still check to ensure.\n\n  if (!!internalPayload.from) {\n    fcmEvent.project_number = internalPayload.from;\n  }\n\n  if (!!internalPayload.fcmMessageId) {\n    fcmEvent.message_id = internalPayload.fcmMessageId;\n  }\n\n  fcmEvent.instance_id = fid;\n\n  if (!!internalPayload.notification) {\n    fcmEvent.message_type = MessageType$1.DISPLAY_NOTIFICATION.toString();\n  } else {\n    fcmEvent.message_type = MessageType$1.DATA_MESSAGE.toString();\n  }\n\n  fcmEvent.sdk_platform = SDK_PLATFORM_WEB.toString();\n  fcmEvent.package_name = self.origin.replace(/(^\\w+:|^)\\/\\//, '');\n\n  if (!!internalPayload.collapse_key) {\n    fcmEvent.collapse_key = internalPayload.collapse_key;\n  }\n\n  fcmEvent.event = EVENT_MESSAGE_DELIVERED.toString();\n\n  if (!!((_a = internalPayload.fcmOptions) === null || _a === void 0 ? void 0 : _a.analytics_label)) {\n    fcmEvent.analytics_label = (_b = internalPayload.fcmOptions) === null || _b === void 0 ? void 0 : _b.analytics_label;\n  }\n  /* eslint-enable camelcase */\n\n\n  return fcmEvent;\n}\n\nfunction createAndEnqueueLogEvent(messaging, fcmEvent) {\n  var logEvent = {};\n  /* eslint-disable camelcase */\n\n  logEvent.event_time_ms = Math.floor(Date.now()).toString();\n  logEvent.source_extension_json_proto3 = JSON.stringify(fcmEvent); // eslint-disable-next-line camelcase\n\n  messaging.logEvents.push(logEvent);\n}\n\nfunction _mergeStrings(s1, s2) {\n  var resultArray = [];\n\n  for (var i = 0; i < s1.length; i++) {\n    resultArray.push(s1.charAt(i));\n\n    if (i < s2.length) {\n      resultArray.push(s2.charAt(i));\n    }\n  }\n\n  return resultArray.join('');\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction onSubChange(_x23, _x24) {\n  return _onSubChange.apply(this, arguments);\n}\n\nfunction _onSubChange() {\n  _onSubChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(event, messaging) {\n    var _a, _b, newSubscription, tokenDetails;\n\n    return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            newSubscription = event.newSubscription;\n\n            if (newSubscription) {\n              _context16.next = 5;\n              break;\n            }\n\n            _context16.next = 4;\n            return deleteTokenInternal(messaging);\n\n          case 4:\n            return _context16.abrupt(\"return\");\n\n          case 5:\n            _context16.next = 7;\n            return dbGet(messaging.firebaseDependencies);\n\n          case 7:\n            tokenDetails = _context16.sent;\n            _context16.next = 10;\n            return deleteTokenInternal(messaging);\n\n          case 10:\n            messaging.vapidKey = (_b = (_a = tokenDetails === null || tokenDetails === void 0 ? void 0 : tokenDetails.subscriptionOptions) === null || _a === void 0 ? void 0 : _a.vapidKey) !== null && _b !== void 0 ? _b : DEFAULT_VAPID_KEY;\n            _context16.next = 13;\n            return getTokenInternal(messaging);\n\n          case 13:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    }, _callee16);\n  }));\n  return _onSubChange.apply(this, arguments);\n}\n\nfunction onPush(_x25, _x26) {\n  return _onPush.apply(this, arguments);\n}\n\nfunction _onPush() {\n  _onPush = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17(event, messaging) {\n    var internalPayload, clientList, payload;\n    return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            internalPayload = getMessagePayloadInternal(event);\n\n            if (internalPayload) {\n              _context17.next = 3;\n              break;\n            }\n\n            return _context17.abrupt(\"return\");\n\n          case 3:\n            if (!messaging.deliveryMetricsExportedToBigQueryEnabled) {\n              _context17.next = 6;\n              break;\n            }\n\n            _context17.next = 6;\n            return stageLog(messaging, internalPayload);\n\n          case 6:\n            _context17.next = 8;\n            return getClientList();\n\n          case 8:\n            clientList = _context17.sent;\n\n            if (!hasVisibleClients(clientList)) {\n              _context17.next = 11;\n              break;\n            }\n\n            return _context17.abrupt(\"return\", sendMessagePayloadInternalToWindows(clientList, internalPayload));\n\n          case 11:\n            if (!internalPayload.notification) {\n              _context17.next = 14;\n              break;\n            }\n\n            _context17.next = 14;\n            return showNotification(wrapInternalPayload(internalPayload));\n\n          case 14:\n            if (messaging) {\n              _context17.next = 16;\n              break;\n            }\n\n            return _context17.abrupt(\"return\");\n\n          case 16:\n            if (!messaging.onBackgroundMessageHandler) {\n              _context17.next = 24;\n              break;\n            }\n\n            payload = externalizePayload(internalPayload);\n\n            if (!(typeof messaging.onBackgroundMessageHandler === 'function')) {\n              _context17.next = 23;\n              break;\n            }\n\n            _context17.next = 21;\n            return messaging.onBackgroundMessageHandler(payload);\n\n          case 21:\n            _context17.next = 24;\n            break;\n\n          case 23:\n            messaging.onBackgroundMessageHandler.next(payload);\n\n          case 24:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    }, _callee17);\n  }));\n  return _onPush.apply(this, arguments);\n}\n\nfunction onNotificationClick(_x27) {\n  return _onNotificationClick.apply(this, arguments);\n}\n\nfunction _onNotificationClick() {\n  _onNotificationClick = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18(event) {\n    var _a, _b, internalPayload, link, url, originUrl, client;\n\n    return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            internalPayload = (_b = (_a = event.notification) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b[FCM_MSG];\n\n            if (internalPayload) {\n              _context18.next = 5;\n              break;\n            }\n\n            return _context18.abrupt(\"return\");\n\n          case 5:\n            if (!event.action) {\n              _context18.next = 7;\n              break;\n            }\n\n            return _context18.abrupt(\"return\");\n\n          case 7:\n            // Prevent other listeners from receiving the event\n            event.stopImmediatePropagation();\n            event.notification.close(); // Note clicking on a notification with no link set will focus the Chrome's current tab.\n\n            link = getLink(internalPayload);\n\n            if (link) {\n              _context18.next = 12;\n              break;\n            }\n\n            return _context18.abrupt(\"return\");\n\n          case 12:\n            // FM should only open/focus links from app's origin.\n            url = new URL(link, self.location.href);\n            originUrl = new URL(self.location.origin);\n\n            if (!(url.host !== originUrl.host)) {\n              _context18.next = 16;\n              break;\n            }\n\n            return _context18.abrupt(\"return\");\n\n          case 16:\n            _context18.next = 18;\n            return getWindowClient(url);\n\n          case 18:\n            client = _context18.sent;\n\n            if (client) {\n              _context18.next = 27;\n              break;\n            }\n\n            _context18.next = 22;\n            return self.clients.openWindow(link);\n\n          case 22:\n            client = _context18.sent;\n            _context18.next = 25;\n            return sleep(3000);\n\n          case 25:\n            _context18.next = 30;\n            break;\n\n          case 27:\n            _context18.next = 29;\n            return client.focus();\n\n          case 29:\n            client = _context18.sent;\n\n          case 30:\n            if (client) {\n              _context18.next = 32;\n              break;\n            }\n\n            return _context18.abrupt(\"return\");\n\n          case 32:\n            internalPayload.messageType = MessageType.NOTIFICATION_CLICKED;\n            internalPayload.isFirebaseMessaging = true;\n            return _context18.abrupt(\"return\", client.postMessage(internalPayload));\n\n          case 35:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    }, _callee18);\n  }));\n  return _onNotificationClick.apply(this, arguments);\n}\n\nfunction wrapInternalPayload(internalPayload) {\n  var wrappedInternalPayload = Object.assign({}, internalPayload.notification); // Put the message payload under FCM_MSG name so we can identify the notification as being an FCM\n  // notification vs a notification from somewhere else (i.e. normal web push or developer generated\n  // notification).\n\n  wrappedInternalPayload.data = _defineProperty({}, FCM_MSG, internalPayload);\n  return wrappedInternalPayload;\n}\n\nfunction getMessagePayloadInternal(_ref5) {\n  var data = _ref5.data;\n\n  if (!data) {\n    return null;\n  }\n\n  try {\n    return data.json();\n  } catch (err) {\n    // Not JSON so not an FCM message.\n    return null;\n  }\n}\n/**\r\n * @param url The URL to look for when focusing a client.\r\n * @return Returns an existing window client or a newly opened WindowClient.\r\n */\n\n\nfunction getWindowClient(_x28) {\n  return _getWindowClient.apply(this, arguments);\n}\n/**\r\n * @returns If there is currently a visible WindowClient, this method will resolve to true,\r\n * otherwise false.\r\n */\n\n\nfunction _getWindowClient() {\n  _getWindowClient = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19(url) {\n    var clientList, _iterator2, _step2, client, clientUrl;\n\n    return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n      while (1) {\n        switch (_context19.prev = _context19.next) {\n          case 0:\n            _context19.next = 2;\n            return getClientList();\n\n          case 2:\n            clientList = _context19.sent;\n            _iterator2 = _createForOfIteratorHelper(clientList);\n            _context19.prev = 4;\n\n            _iterator2.s();\n\n          case 6:\n            if ((_step2 = _iterator2.n()).done) {\n              _context19.next = 13;\n              break;\n            }\n\n            client = _step2.value;\n            clientUrl = new URL(client.url, self.location.href);\n\n            if (!(url.host === clientUrl.host)) {\n              _context19.next = 11;\n              break;\n            }\n\n            return _context19.abrupt(\"return\", client);\n\n          case 11:\n            _context19.next = 6;\n            break;\n\n          case 13:\n            _context19.next = 18;\n            break;\n\n          case 15:\n            _context19.prev = 15;\n            _context19.t0 = _context19[\"catch\"](4);\n\n            _iterator2.e(_context19.t0);\n\n          case 18:\n            _context19.prev = 18;\n\n            _iterator2.f();\n\n            return _context19.finish(18);\n\n          case 21:\n            return _context19.abrupt(\"return\", null);\n\n          case 22:\n          case \"end\":\n            return _context19.stop();\n        }\n      }\n    }, _callee19, null, [[4, 15, 18, 21]]);\n  }));\n  return _getWindowClient.apply(this, arguments);\n}\n\nfunction hasVisibleClients(clientList) {\n  return clientList.some(function (client) {\n    return client.visibilityState === 'visible' && // Ignore chrome-extension clients as that matches the background pages of extensions, which\n    // are always considered visible for some reason.\n    !client.url.startsWith('chrome-extension://');\n  });\n}\n\nfunction sendMessagePayloadInternalToWindows(clientList, internalPayload) {\n  internalPayload.isFirebaseMessaging = true;\n  internalPayload.messageType = MessageType.PUSH_RECEIVED;\n\n  var _iterator = _createForOfIteratorHelper(clientList),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var client = _step.value;\n      client.postMessage(internalPayload);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\n\nfunction getClientList() {\n  return self.clients.matchAll({\n    type: 'window',\n    includeUncontrolled: true // TS doesn't know that \"type: 'window'\" means it'll return WindowClient[]\n\n  });\n}\n\nfunction showNotification(notificationPayloadInternal) {\n  var _a; // Note: Firefox does not support the maxActions property.\n  // https://developer.mozilla.org/en-US/docs/Web/API/notification/maxActions\n\n\n  var actions = notificationPayloadInternal.actions;\n  var _Notification = Notification,\n      maxActions = _Notification.maxActions;\n\n  if (actions && maxActions && actions.length > maxActions) {\n    console.warn(\"This browser only supports \".concat(maxActions, \" actions. The remaining actions will not be displayed.\"));\n  }\n\n  return self.registration.showNotification(\n  /* title= */\n  (_a = notificationPayloadInternal.title) !== null && _a !== void 0 ? _a : '', notificationPayloadInternal);\n}\n\nfunction getLink(payload) {\n  var _a, _b, _c; // eslint-disable-next-line camelcase\n\n\n  var link = (_b = (_a = payload.fcmOptions) === null || _a === void 0 ? void 0 : _a.link) !== null && _b !== void 0 ? _b : (_c = payload.notification) === null || _c === void 0 ? void 0 : _c.click_action;\n\n  if (link) {\n    return link;\n  }\n\n  if (isConsoleMessage(payload.data)) {\n    // Notification created in the Firebase Console. Redirect to origin.\n    return self.location.origin;\n  } else {\n    return null;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction extractAppConfig(app) {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration Object');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  } // Required app config keys\n\n\n  var configKeys = ['projectId', 'apiKey', 'appId', 'messagingSenderId'];\n  var options = app.options;\n\n  for (var _i = 0, _configKeys = configKeys; _i < _configKeys.length; _i++) {\n    var keyName = _configKeys[_i];\n\n    if (!options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: options.projectId,\n    apiKey: options.apiKey,\n    appId: options.appId,\n    senderId: options.messagingSenderId\n  };\n}\n\nfunction getMissingValueError(valueName) {\n  return ERROR_FACTORY.create(\"missing-app-config-values\"\n  /* MISSING_APP_CONFIG_VALUES */\n  , {\n    valueName: valueName\n  });\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar MessagingService = /*#__PURE__*/function () {\n  function MessagingService(app, installations, analyticsProvider) {\n    _classCallCheck(this, MessagingService);\n\n    // logging is only done with end user consent. Default to false.\n    this.deliveryMetricsExportedToBigQueryEnabled = false;\n    this.onBackgroundMessageHandler = null;\n    this.onMessageHandler = null;\n    this.logEvents = [];\n    this.isLogServiceStarted = false;\n    var appConfig = extractAppConfig(app);\n    this.firebaseDependencies = {\n      app: app,\n      appConfig: appConfig,\n      installations: installations,\n      analyticsProvider: analyticsProvider\n    };\n  }\n\n  _createClass(MessagingService, [{\n    key: \"_delete\",\n    value: function _delete() {\n      return Promise.resolve();\n    }\n  }]);\n\n  return MessagingService;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar SwMessagingFactory = function SwMessagingFactory(container) {\n  var messaging = new MessagingService(container.getProvider('app').getImmediate(), container.getProvider('installations-internal').getImmediate(), container.getProvider('analytics-internal'));\n  self.addEventListener('push', function (e) {\n    e.waitUntil(onPush(e, messaging));\n  });\n  self.addEventListener('pushsubscriptionchange', function (e) {\n    e.waitUntil(onSubChange(e, messaging));\n  });\n  self.addEventListener('notificationclick', function (e) {\n    e.waitUntil(onNotificationClick(e));\n  });\n  return messaging;\n};\n/**\r\n * The messaging instance registered in sw is named differently than that of in client. This is\r\n * because both `registerMessagingInWindow` and `registerMessagingInSw` would be called in\r\n * `messaging-compat` and component with the same name can only be registered once.\r\n */\n\n\nfunction registerMessagingInSw() {\n  _registerComponent(new Component('messaging-sw', SwMessagingFactory, \"PUBLIC\"\n  /* PUBLIC */\n  ));\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Checks whether all required APIs exist within SW Context\r\n * @returns a Promise that resolves to a boolean.\r\n *\r\n * @public\r\n */\n\n\nfunction isSwSupported() {\n  return _isSwSupported.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction _isSwSupported() {\n  _isSwSupported = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee20() {\n    return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n      while (1) {\n        switch (_context20.prev = _context20.next) {\n          case 0:\n            _context20.t4 = isIndexedDBAvailable();\n\n            if (!_context20.t4) {\n              _context20.next = 5;\n              break;\n            }\n\n            _context20.next = 4;\n            return validateIndexedDBOpenable();\n\n          case 4:\n            _context20.t4 = _context20.sent;\n\n          case 5:\n            _context20.t3 = _context20.t4;\n\n            if (!_context20.t3) {\n              _context20.next = 8;\n              break;\n            }\n\n            _context20.t3 = 'PushManager' in self;\n\n          case 8:\n            _context20.t2 = _context20.t3;\n\n            if (!_context20.t2) {\n              _context20.next = 11;\n              break;\n            }\n\n            _context20.t2 = 'Notification' in self;\n\n          case 11:\n            _context20.t1 = _context20.t2;\n\n            if (!_context20.t1) {\n              _context20.next = 14;\n              break;\n            }\n\n            _context20.t1 = ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification');\n\n          case 14:\n            _context20.t0 = _context20.t1;\n\n            if (!_context20.t0) {\n              _context20.next = 17;\n              break;\n            }\n\n            _context20.t0 = PushSubscription.prototype.hasOwnProperty('getKey');\n\n          case 17:\n            return _context20.abrupt(\"return\", _context20.t0);\n\n          case 18:\n          case \"end\":\n            return _context20.stop();\n        }\n      }\n    }, _callee20);\n  }));\n  return _isSwSupported.apply(this, arguments);\n}\n\nfunction onBackgroundMessage$1(messaging, nextOrObserver) {\n  if (self.document !== undefined) {\n    throw ERROR_FACTORY.create(\"only-available-in-sw\"\n    /* AVAILABLE_IN_SW */\n    );\n  }\n\n  messaging.onBackgroundMessageHandler = nextOrObserver;\n  return function () {\n    messaging.onBackgroundMessageHandler = null;\n  };\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction _setDeliveryMetricsExportedToBigQueryEnabled(messaging, enable) {\n  messaging.deliveryMetricsExportedToBigQueryEnabled = enable;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Retrieves a Firebase Cloud Messaging instance.\r\n *\r\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\r\n *\r\n * @public\r\n */\n\n\nfunction getMessagingInSw() {\n  var app = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getApp();\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isSwSupported().then(function (isSupported) {\n    // If `isSwSupported()` resolved, but returned false.\n    if (!isSupported) {\n      throw ERROR_FACTORY.create(\"unsupported-browser\"\n      /* UNSUPPORTED_BROWSER */\n      );\n    }\n  }, function (_) {\n    // If `isSwSupported()` rejected.\n    throw ERROR_FACTORY.create(\"indexed-db-unsupported\"\n    /* INDEXED_DB_UNSUPPORTED */\n    );\n  });\n  return _getProvider(getModularInstance(app), 'messaging-sw').getImmediate();\n}\n/**\r\n * Called when a message is received while the app is in the background. An app is considered to be\r\n * in the background if no active window is displayed.\r\n *\r\n * @param messaging - The {@link Messaging} instance.\r\n * @param nextOrObserver - This function, or observer object with `next` defined, is called when a\r\n * message is received and the app is currently in the background.\r\n *\r\n * @returns To stop listening for messages execute this returned function\r\n *\r\n * @public\r\n */\n\n\nfunction onBackgroundMessage(messaging, nextOrObserver) {\n  messaging = getModularInstance(messaging);\n  return onBackgroundMessage$1(messaging, nextOrObserver);\n}\n/**\r\n * Enables or disables Firebase Cloud Messaging message delivery metrics export to BigQuery. By\r\n * default, message delivery metrics are not exported to BigQuery. Use this method to enable or\r\n * disable the export at runtime.\r\n *\r\n * @param messaging - The `FirebaseMessaging` instance.\r\n * @param enable - Whether Firebase Cloud Messaging should export message delivery metrics to\r\n * BigQuery.\r\n *\r\n * @public\r\n */\n\n\nfunction experimentalSetDeliveryMetricsExportedToBigQueryEnabled(messaging, enable) {\n  messaging = getModularInstance(messaging);\n  return _setDeliveryMetricsExportedToBigQueryEnabled(messaging, enable);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nregisterMessagingInSw();\nexport { experimentalSetDeliveryMetricsExportedToBigQueryEnabled, getMessagingInSw as getMessaging, isSwSupported as isSupported, onBackgroundMessage };","map":null,"metadata":{},"sourceType":"module"}