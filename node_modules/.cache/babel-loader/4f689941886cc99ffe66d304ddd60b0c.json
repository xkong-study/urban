{"ast":null,"code":"import _toConsumableArray from \"/Users/kong/Desktop/game-cloud-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/kong/Desktop/game-cloud-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kong/Desktop/game-cloud-frontend/src/pages/Means.jsx\";\nimport { DislikeFilled, DislikeOutlined, LikeFilled, LikeOutlined } from '@ant-design/icons';\nimport React, { createElement, useEffect, useState } from 'react';\nimport { Avatar, Comment, Tooltip, Button, Form, Input, List } from 'antd';\nimport moment from 'moment';\nimport { message } from 'antd';\nimport VirtualList from 'rc-virtual-list';\nvar TextArea = Input.TextArea;\nvar fakeDataUrl = 'https://randomuser.me/api/?results=20&inc=name,gender,email,nat,picture&noinfo';\nvar ContainerHeight = 400;\nexport default function Means() {\n  var _this = this;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      likes = _useState2[0],\n      setLikes = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dislikes = _useState4[0],\n      setDislikes = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      action = _useState6[0],\n      setAction = _useState6[1];\n\n  var like = function like() {\n    setLikes(1);\n    setDislikes(0);\n    setAction('liked');\n  };\n\n  var dislike = function dislike() {\n    setLikes(0);\n    setDislikes(1);\n    setAction('disliked');\n  };\n\n  var CommentList = function CommentList(_ref) {\n    var comments = _ref.comments;\n    return /*#__PURE__*/React.createElement(List, {\n      dataSource: comments,\n      header: \"\".concat(comments.length, \" \").concat(comments.length > 1 ? 'replies' : 'reply'),\n      itemLayout: \"horizontal\",\n      renderItem: function renderItem(props) {\n        return /*#__PURE__*/React.createElement(Comment, Object.assign({}, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 36\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    });\n  };\n\n  var Editor = function Editor(_ref2) {\n    var onChange = _ref2.onChange,\n        onSubmit = _ref2.onSubmit,\n        submitting = _ref2.submitting,\n        value = _ref2.value;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Item, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextArea, {\n      rows: 4,\n      onChange: onChange,\n      value: value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      htmlType: \"submit\",\n      loading: submitting,\n      onClick: onSubmit,\n      type: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \"Add Comment\")));\n  };\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      data = _useState8[0],\n      setData = _useState8[1];\n\n  var appendData = function appendData() {\n    fetch(fakeDataUrl).then(function (res) {\n      return res.json();\n    }).then(function (body) {\n      setData(data.concat(body.results));\n      message.success(\"\".concat(body.results.length, \" more items loaded!\"));\n    });\n  };\n\n  useEffect(function () {\n    appendData();\n  }, []);\n\n  var onScroll = function onScroll(e) {\n    if (e.currentTarget.scrollHeight - e.currentTarget.scrollTop === ContainerHeight) {\n      appendData();\n    }\n  };\n\n  var actions = [/*#__PURE__*/React.createElement(Tooltip, {\n    key: \"comment-basic-like\",\n    title: \"Like\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: like,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, createElement(action === 'liked' ? LikeFilled : LikeOutlined), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"comment-action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, likes))), /*#__PURE__*/React.createElement(Tooltip, {\n    key: \"comment-basic-dislike\",\n    title: \"Dislike\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: dislike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, React.createElement(action === 'disliked' ? DislikeFilled : DislikeOutlined), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"comment-action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, dislikes))), /*#__PURE__*/React.createElement(\"span\", {\n    key: \"comment-basic-reply-to\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Reply to\")];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      comments = _useState10[0],\n      setComments = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      submitting = _useState12[0],\n      setSubmitting = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      value = _useState14[0],\n      setValue = _useState14[1];\n\n  var handleSubmit = function handleSubmit() {\n    if (!value) return;\n    setSubmitting(true);\n    setTimeout(function () {\n      setSubmitting(false);\n      setValue('');\n      setComments([].concat(_toConsumableArray(comments), [{\n        author: 'Han Solo',\n        avatar: 'https://joeschmoe.io/api/v1/random',\n        content: /*#__PURE__*/React.createElement(\"p\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 30\n          }\n        }, value),\n        datetime: moment().fromNow()\n      }]));\n    }, 1000);\n  };\n\n  var handleChange = function handleChange(e) {\n    setValue(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '800px',\n      height: '300px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(VirtualList, {\n    data: data,\n    height: ContainerHeight,\n    itemHeight: 47,\n    itemKey: \"email\",\n    onScroll: onScroll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, function (item) {\n    return /*#__PURE__*/React.createElement(List.Item, {\n      key: item.email,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n      avatar: /*#__PURE__*/React.createElement(Avatar, {\n        src: item.picture.large,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 41\n        }\n      }),\n      title: /*#__PURE__*/React.createElement(\"a\", {\n        href: \"https://ant.design\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 40\n        }\n      }, item.name.last),\n      description: item.email,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }\n    }, \"Content\"));\n  })), comments.length > 0 && /*#__PURE__*/React.createElement(CommentList, {\n    comments: comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Comment, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: \"https://joeschmoe.io/api/v1/random\",\n      alt: \"Han Solo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }),\n    content: /*#__PURE__*/React.createElement(Editor, {\n      onChange: handleChange,\n      onSubmit: handleSubmit,\n      submitting: submitting,\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/kong/Desktop/game-cloud-frontend/src/pages/Means.jsx"],"names":["DislikeFilled","DislikeOutlined","LikeFilled","LikeOutlined","React","createElement","useEffect","useState","Avatar","Comment","Tooltip","Button","Form","Input","List","moment","message","VirtualList","TextArea","fakeDataUrl","ContainerHeight","Means","likes","setLikes","dislikes","setDislikes","action","setAction","like","dislike","CommentList","comments","length","props","Editor","onChange","onSubmit","submitting","value","data","setData","appendData","fetch","then","res","json","body","concat","results","success","onScroll","e","currentTarget","scrollHeight","scrollTop","actions","setComments","setSubmitting","setValue","handleSubmit","setTimeout","author","avatar","content","datetime","fromNow","handleChange","target","width","height","item","email","picture","large","name","last"],"mappings":"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","sourcesContent":["import { DislikeFilled, DislikeOutlined, LikeFilled, LikeOutlined } from '@ant-design/icons';\nimport React, {createElement, useEffect, useState} from 'react';\nimport { Avatar, Comment, Tooltip, Button, Form, Input, List } from 'antd';\nimport moment from 'moment';\nimport { message } from 'antd';\nimport VirtualList from 'rc-virtual-list';\nconst { TextArea } = Input;\nconst fakeDataUrl =\n    'https://randomuser.me/api/?results=20&inc=name,gender,email,nat,picture&noinfo';\nconst ContainerHeight = 400;\nexport default function Means() {\n    const [likes, setLikes] = useState(0);\n    const [dislikes, setDislikes] = useState(0);\n    const [action, setAction] = useState(null);\n    const like = () => {\n        setLikes(1);\n        setDislikes(0);\n        setAction('liked');\n    };\n\n    const dislike = () => {\n        setLikes(0);\n        setDislikes(1);\n        setAction('disliked');\n    };\n\n    const CommentList = ({ comments }) => (\n        <List\n            dataSource={comments}\n            header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\n            itemLayout=\"horizontal\"\n            renderItem={(props) => <Comment {...props} />}\n        />\n    );\n\n    const Editor = ({ onChange, onSubmit, submitting, value }) => (\n        <>\n            <Form.Item>\n                <TextArea rows={4} onChange={onChange} value={value} />\n            </Form.Item>\n            <Form.Item>\n                <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit} type=\"primary\">\n                    Add Comment\n                </Button>\n            </Form.Item>\n        </>\n    );\n\n    const [data, setData] = useState([]);\n\n    const appendData = () => {\n        fetch(fakeDataUrl)\n            .then((res) => res.json())\n            .then((body) => {\n                setData(data.concat(body.results));\n                message.success(`${body.results.length} more items loaded!`);\n            });\n    };\n\n    useEffect(() => {\n        appendData();\n    }, []);\n\n    const onScroll = (e) => {\n        if (e.currentTarget.scrollHeight - e.currentTarget.scrollTop === ContainerHeight) {\n            appendData();\n        }\n    };\n    const actions = [\n        <Tooltip key=\"comment-basic-like\" title=\"Like\">\n      <span onClick={like}>\n        {createElement(action === 'liked' ? LikeFilled : LikeOutlined)}\n          <span className=\"comment-action\">{likes}</span>\n      </span>\n        </Tooltip>,\n        <Tooltip key=\"comment-basic-dislike\" title=\"Dislike\">\n      <span onClick={dislike}>\n        {React.createElement(action === 'disliked' ? DislikeFilled : DislikeOutlined)}\n          <span className=\"comment-action\">{dislikes}</span>\n      </span>\n        </Tooltip>,\n        <span key=\"comment-basic-reply-to\">Reply to</span>,\n    ];\n\n    const [comments, setComments] = useState([]);\n    const [submitting, setSubmitting] = useState(false);\n    const [value, setValue] = useState('');\n\n    const handleSubmit = () => {\n        if (!value) return;\n        setSubmitting(true);\n        setTimeout(() => {\n            setSubmitting(false);\n            setValue('');\n            setComments([\n                ...comments,\n                {\n                    author: 'Han Solo',\n                    avatar: 'https://joeschmoe.io/api/v1/random',\n                    content: <p>{value}</p>,\n                    datetime: moment().fromNow(),\n                },\n            ]);\n        }, 1000);\n    };\n\n    const handleChange = (e) => {\n        setValue(e.target.value);\n    };\n    return (\n        <div  style={{width:'800px',height:'300px'}}>\n            <List>\n                <VirtualList\n                    data={data}\n                    height={ContainerHeight}\n                    itemHeight={47}\n                    itemKey=\"email\"\n                    onScroll={onScroll}\n                >\n                    {(item) => (\n                        <List.Item key={item.email}>\n                            <List.Item.Meta\n                                avatar={<Avatar src={item.picture.large} />}\n                                title={<a href=\"https://ant.design\">{item.name.last}</a>}\n                                description={item.email}\n                            />\n                            <div>Content</div>\n                        </List.Item>\n                    )}\n                </VirtualList>\n            </List>\n            {comments.length > 0 && <CommentList comments={comments} />}\n            <Comment\n                avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" alt=\"Han Solo\" />}\n                content={\n                    <Editor\n                        onChange={handleChange}\n                        onSubmit={handleSubmit}\n                        submitting={submitting}\n                        value={value}\n                    />\n                }\n             />\n        </div>\n    );\n }\n"]},"metadata":{},"sourceType":"module"}