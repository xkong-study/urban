{"ast":null,"code":"import _slicedToArray from \"/Users/kong/Desktop/urban_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kong/Desktop/urban_react/src/pages/map.jsx\";\n\n/* jshint esversion: 6 */\nimport React, { useState } from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api'; // Import the functions you need from the SDKs you need\n\nimport firebase from \"firebase/compat\";\nimport axios from \"axios\";\nimport { Input } from \"antd\";\nvar Search = Input.Search;\nvar containerStyle = {\n  width: '800px',\n  height: '400px'\n};\nexport default function map() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      array = _useState2[0],\n      setArray = _useState2[1];\n\n  var firebaseConfig = {\n    apiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\",\n    authDomain: \"urban-computing-cb07c.firebaseapp.com\",\n    databaseURL: \"https://urban-computing-cb07c-default-rtdb.firebaseio.com\",\n    projectId: \"urban-computing-cb07c\",\n    storageBucket: \"urban-computing-cb07c.appspot.com\",\n    messagingSenderId: \"293478437107\",\n    appId: \"1:293478437107:web:4cd5199b68f68eac542786\",\n    measurementId: \"G-3Z5DD1SJYQ\"\n  };\n  var myArr = [];\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      count = _React$useState2[0],\n      setCount = _React$useState2[1];\n\n  React.useEffect(function () {\n    setTimeout(function () {\n      firebase.initializeApp(firebaseConfig);\n      firebase.database().ref('/').on('value', function (snap) {\n        var obj = snap.val();\n\n        if (obj !== null) {\n          for (var key in obj) {\n            setCount(obj[key]);\n            console.log(obj[key]);\n          }\n        }\n      });\n    }, 1000);\n  }, []);\n\n  var getCoffee = function getCoffee() {\n    axios.get('https://maps.googleapis.com/maps/api/place/nearbysearch/json', {\n      params: {\n        key: 'AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c',\n        types: 'cafe',\n        location: '53.26,-6.15',\n        radius: '100000'\n      }\n    }).then(function (response) {\n      var result = response.data.results;\n\n      for (var key in result) {\n        myArr.push(result[key].geometry.location);\n      }\n\n      setArray(myArr);\n      console.log(myArr);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var _useJsApiLoader = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\"\n  }),\n      isLoaded = _useJsApiLoader.isLoaded;\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      map = _React$useState4[0],\n      setMap = _React$useState4[1];\n\n  var onLoad = React.useCallback(function callback(map) {\n    var bounds = new window.google.maps.LatLngBounds(count);\n    map.fitBounds(bounds);\n\n    for (var i = 0; i < array.length; i++) {\n      var marker = new window.google.maps.Marker({\n        position: array[i],\n        title: \"starting\"\n      });\n      marker.setMap(map);\n    }\n  }, []);\n  var onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  return isLoaded ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: count,\n    zoom: 25,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginLeft: '5px',\n      fontWeight: 'bold',\n      marginTop: '10px',\n      color: '#0066FF'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"\\u641C\\u7D22\\u9644\\u8FD1\\u9910\\u996E\\u5E97:\"), /*#__PURE__*/React.createElement(Search, {\n    style: {\n      width: '330px',\n      marginLeft: '110px',\n      marginBottom: '5px',\n      marginTop: '-42px'\n    },\n    placeholder: \"input search text\",\n    onSearch: getCoffee,\n    enterButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 106\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null);\n}","map":{"version":3,"sources":["/Users/kong/Desktop/urban_react/src/pages/map.jsx"],"names":["React","useState","GoogleMap","useJsApiLoader","firebase","axios","Input","Search","containerStyle","width","height","map","array","setArray","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","myArr","count","setCount","useEffect","setTimeout","initializeApp","database","ref","on","snap","obj","val","key","console","log","getCoffee","get","params","types","location","radius","then","response","result","data","results","push","geometry","catch","error","id","googleMapsApiKey","isLoaded","setMap","onLoad","useCallback","callback","bounds","window","google","maps","LatLngBounds","fitBounds","i","length","marker","Marker","position","title","onUnmount","marginLeft","fontWeight","marginTop","color","marginBottom"],"mappings":"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","sourcesContent":["/* jshint esversion: 6 */\n\nimport React, {useState} from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\n// Import the functions you need from the SDKs you need\nimport firebase from \"firebase/compat\";\nimport axios from \"axios\";\nimport {Input} from \"antd\";\nconst { Search } = Input;\n\n\nconst containerStyle = {\n    width: '800px',\n    height: '400px'\n};\n\n\nexport default function map() {\n    const [array,setArray]=useState([]);\n\n\n    const firebaseConfig = {\n        apiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\",\n        authDomain: \"urban-computing-cb07c.firebaseapp.com\",\n        databaseURL: \"https://urban-computing-cb07c-default-rtdb.firebaseio.com\",\n        projectId: \"urban-computing-cb07c\",\n        storageBucket: \"urban-computing-cb07c.appspot.com\",\n        messagingSenderId: \"293478437107\",\n        appId: \"1:293478437107:web:4cd5199b68f68eac542786\",\n        measurementId: \"G-3Z5DD1SJYQ\"\n    };\n    let myArr=[];\n    const [count, setCount] =React.useState(0);\n\n    React.useEffect(()=>{\n        setTimeout(()=>{\n            firebase.initializeApp(firebaseConfig);\n            firebase.database().ref('/').on('value',(snap)=> {\n                let obj = snap.val();\n                if (obj !== null) {\n                    for (var key in obj) {\n                        setCount(obj[key]);\n                        console.log(obj[key]);\n                    }\n                }\n            });\n        },1000);\n    },[]);\n\n    const getCoffee = () => {\n        axios.get('https://maps.googleapis.com/maps/api/place/nearbysearch/json', {\n            params: {\n                key:'AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c',\n                types:'cafe',\n                location:'53.26,-6.15',\n                radius:'100000'\n            }\n        }).then(function (response) {\n            const result = response.data.results;\n            for(var key in result){\n                myArr.push(result[key].geometry.location);\n            }\n            setArray(myArr);\n            console.log(myArr);\n        })\n            .catch(function (error) {\n                console.log(error);\n            });\n    };\n\n    const { isLoaded } = useJsApiLoader({\n        id: 'google-map-script',\n        googleMapsApiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\"\n    });\n\n    const [map, setMap] = React.useState(null);\n\n    const onLoad = React.useCallback(function callback(map) {\n        const bounds = new window.google.maps.LatLngBounds(count);\n        map.fitBounds(bounds);\n        for(let i =0;i<array.length;i++)\n        {\n            const marker = new window.google.maps.Marker({\n                position: array[i],\n                title: \"starting\"\n            });\n            marker.setMap(map);\n        }\n    }, []);\n    const onUnmount = React.useCallback(function callback(map) {\n        setMap(null);\n    }, []);\n\n\n    return isLoaded ? (\n        <div>\n            <GoogleMap  mapContainerStyle={containerStyle}  center={count}  zoom={25}  onLoad={onLoad}  onUnmount={onUnmount}> </GoogleMap>\n            <p style={{marginLeft:'5px',fontWeight:'bold',marginTop:'10px',color:'#0066FF'}}>搜索附近餐饮店:</p><Search style={{width:'330px',marginLeft:'110px',marginBottom:'5px',marginTop:'-42px'}} placeholder=\"input search text\" onSearch={getCoffee} enterButton />\n        </div>\n    ) : <></>\n}\n"]},"metadata":{},"sourceType":"module"}