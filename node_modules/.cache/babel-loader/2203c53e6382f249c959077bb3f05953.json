{"ast":null,"code":"import _slicedToArray from \"/Users/kong/Desktop/urban_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kong/Desktop/urban_react/src/pages/map.jsx\";\n\n/* jshint esversion: 6 */\nimport React, { useState } from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api'; // Import the functions you need from the SDKs you need\n\nimport firebase from \"firebase/compat\";\nimport axios from \"axios\";\nimport { Input } from \"antd\";\nvar Search = Input.Search;\nvar containerStyle = {\n  width: '800px',\n  height: '400px'\n};\nexport default function map() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      array = _useState2[0],\n      setArray = _useState2[1];\n\n  var firebaseConfig = {\n    apiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\",\n    authDomain: \"urban-computing-cb07c.firebaseapp.com\",\n    databaseURL: \"https://urban-computing-cb07c-default-rtdb.firebaseio.com\",\n    projectId: \"urban-computing-cb07c\",\n    storageBucket: \"urban-computing-cb07c.appspot.com\",\n    messagingSenderId: \"293478437107\",\n    appId: \"1:293478437107:web:4cd5199b68f68eac542786\",\n    measurementId: \"G-3Z5DD1SJYQ\"\n  };\n\n  var _React$useState = React.useState({\n    lat: 53.49332,\n    lng: -6.31718\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      count = _React$useState2[0],\n      setCount = _React$useState2[1];\n\n  var myArr = [];\n  React.useEffect(function () {\n    firebase.initializeApp(firebaseConfig);\n    firebase.database().ref('/').on('value', function (snap) {\n      var obj = snap.val();\n\n      if (obj !== null) {\n        for (var key in obj) {\n          if (key.split(',')[2] > '22 13:35:00') {\n            setCount(obj[key]);\n            console.log(obj[key]);\n          }\n        }\n      }\n    });\n  }, []);\n\n  var _useJsApiLoader = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\"\n  }),\n      isLoaded = _useJsApiLoader.isLoaded;\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      map = _React$useState4[0],\n      setMap = _React$useState4[1];\n\n  var onLoad = React.useCallback(function callback(map) {\n    var bounds = new window.google.maps.LatLngBounds(count);\n    map.fitBounds(bounds);\n    var marker1 = new window.google.maps.Marker({\n      position: count,\n      title: \"starting\"\n    });\n    axios.get('https://maps.googleapis.com/maps/api/place/nearbysearch/json', {\n      params: {\n        key: 'AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c',\n        types: 'dinner',\n        location: '53.26,-6.15',\n        radius: '100000'\n      }\n    }).then(function (response) {\n      var result = response.data.results;\n\n      for (var key in result) {\n        myArr.push(result[key].geometry.location);\n      }\n\n      for (var _key in myArr) {\n        var marker = new window.google.maps.Marker({\n          position: myArr[_key]\n        });\n        marker.setMap(map);\n        console.log(myArr[_key]);\n      }\n    });\n    console.log(count);\n    marker1.setMap(map);\n  }, []);\n\n  var query = function query(value) {\n    axios.get('https://maps.googleapis.com/maps/api/place/nearbysearch/json', {\n      params: {\n        key: 'AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c',\n        types: value === '' ? 'cafe' : value,\n        location: '53.26,-6.15',\n        radius: '100000'\n      }\n    }).then(function (response) {\n      window.location.reload();\n      var result = response.data.results;\n\n      for (var key in result) {\n        myArr.push(result[key].geometry.location);\n      }\n\n      for (var _key2 in myArr) {\n        var marker = new window.google.maps.Marker({\n          position: myArr[_key2],\n          title: \"starting\"\n        });\n        marker.setMap(map);\n        console.log(myArr[_key2]);\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }; // const getApi = (map) => {\n  //     axios.get('https://maps.googleapis.com/maps/api/place/nearbysearch/json', {\n  //         params: {\n  //             key:'AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c',\n  //             types:'dinner',\n  //             location:'53.26,-6.15',\n  //             radius:'100000'\n  //         }\n  //     }).then(function (response) {\n  //         const result = response.data.results;\n  //         for(var key in result){\n  //             myArr.push(result[key].geometry.location);\n  //         }\n  //         const marker = new window.google.maps.Marker({\n  //             position: count,\n  //             map: map\n  //         });\n  //         marker.setMap(map);\n  //         console.log(myArr[key]);\n  //     })\n  //         .catch(function (error) {\n  //             console.log(error);\n  //         });\n  // }\n\n\n  return isLoaded ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: count,\n    zoom: 20,\n    onLoad: onLoad,\n    query: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginLeft: '5px',\n      fontWeight: 'bold',\n      marginTop: '10px',\n      color: '#0066FF'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, \"\\u641C\\u7D22\\u9644\\u8FD1\\u9910\\u996E\\u5E97:\"), /*#__PURE__*/React.createElement(Search, {\n    style: {\n      width: '330px',\n      marginLeft: '110px',\n      marginBottom: '5px',\n      marginTop: '-42px'\n    },\n    placeholder: \"input search text\",\n    onSearch: query,\n    enterButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 106\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null);\n}","map":{"version":3,"sources":["/Users/kong/Desktop/urban_react/src/pages/map.jsx"],"names":["React","useState","GoogleMap","useJsApiLoader","firebase","axios","Input","Search","containerStyle","width","height","map","array","setArray","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","lat","lng","count","setCount","myArr","useEffect","initializeApp","database","ref","on","snap","obj","val","key","split","console","log","id","googleMapsApiKey","isLoaded","setMap","onLoad","useCallback","callback","bounds","window","google","maps","LatLngBounds","fitBounds","marker1","Marker","position","title","get","params","types","location","radius","then","response","result","data","results","push","geometry","marker","query","value","reload","catch","error","marginLeft","fontWeight","marginTop","color","marginBottom"],"mappings":"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","sourcesContent":["/* jshint esversion: 6 */\n\nimport React, {useState} from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\n// Import the functions you need from the SDKs you need\nimport firebase from \"firebase/compat\";\nimport axios from \"axios\";\nimport {Input} from \"antd\";\nconst { Search } = Input;\n\n\nconst containerStyle = {\n    width: '800px',\n    height: '400px'\n};\n\nexport default function map() {\n    const [array,setArray]=useState([]);\n    const firebaseConfig = {\n        apiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\",\n        authDomain: \"urban-computing-cb07c.firebaseapp.com\",\n        databaseURL: \"https://urban-computing-cb07c-default-rtdb.firebaseio.com\",\n        projectId: \"urban-computing-cb07c\",\n        storageBucket: \"urban-computing-cb07c.appspot.com\",\n        messagingSenderId: \"293478437107\",\n        appId: \"1:293478437107:web:4cd5199b68f68eac542786\",\n        measurementId: \"G-3Z5DD1SJYQ\"\n    };\n    const [count, setCount] =React.useState({lat: 53.49332, lng: -6.31718});\n    let myArr=[];\n\n    React.useEffect(()=>{\n            firebase.initializeApp(firebaseConfig);\n            firebase.database().ref('/').on('value',(snap)=> {\n                let obj = snap.val();\n                if (obj !== null) {\n                    for (var key in obj) {\n                        if(key.split(',')[2]>'22 13:35:00') {\n                            setCount(obj[key]);\n                            console.log(obj[key]);\n                        }\n                    }\n                }\n            });\n    },[]);\n\n\n    const { isLoaded } = useJsApiLoader({\n        id: 'google-map-script',\n        googleMapsApiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\"\n    });\n\n    const [map, setMap] = React.useState(null);\n\n\n    const onLoad = React.useCallback(function callback(map) {\n        const bounds = new window.google.maps.LatLngBounds(count);\n        map.fitBounds(bounds);\n        const marker1 = new window.google.maps.Marker({\n            position: count,\n            title: \"starting\"\n        });\n        axios.get('https://maps.googleapis.com/maps/api/place/nearbysearch/json', {\n            params: {\n                key:'AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c',\n                types:'dinner',\n                location:'53.26,-6.15',\n                radius:'100000'\n            }\n        }).then(function (response) {\n            const result = response.data.results;\n            for (var key in result) {\n                myArr.push(result[key].geometry.location);\n            }\n            for (let key in myArr) {\n                const marker = new window.google.maps.Marker({\n                    position: myArr[key],\n                });\n                marker.setMap(map);\n                console.log(myArr[key]);\n            }\n        });\n        console.log(count);\n        marker1.setMap(map);\n    }, []);\n\n\n    const query= function(value:string){\n        axios.get('https://maps.googleapis.com/maps/api/place/nearbysearch/json', {\n            params: {\n                key: 'AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c',\n                types: value===''?'cafe':value,\n                location: '53.26,-6.15',\n                radius: '100000'\n            }\n        }).then(function (response) {\n            window.location.reload();\n            const result = response.data.results;\n            for (var key in result) {\n                myArr.push(result[key].geometry.location);\n            }\n            for(let key in myArr) {\n                const marker = new window.google.maps.Marker({\n                    position: myArr[key],\n                    title: \"starting\"\n                });\n                marker.setMap(map);\n                console.log(myArr[key]);\n            }\n        })\n            .catch(function (error) {\n                console.log(error);\n            });\n    };\n\n    // const getApi = (map) => {\n    //     axios.get('https://maps.googleapis.com/maps/api/place/nearbysearch/json', {\n    //         params: {\n    //             key:'AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c',\n    //             types:'dinner',\n    //             location:'53.26,-6.15',\n    //             radius:'100000'\n    //         }\n    //     }).then(function (response) {\n    //         const result = response.data.results;\n    //         for(var key in result){\n    //             myArr.push(result[key].geometry.location);\n    //         }\n    //         const marker = new window.google.maps.Marker({\n    //             position: count,\n    //             map: map\n    //         });\n    //         marker.setMap(map);\n    //         console.log(myArr[key]);\n    //     })\n    //         .catch(function (error) {\n    //             console.log(error);\n    //         });\n    // }\n\n    return isLoaded ? (\n        <div>\n            <GoogleMap  mapContainerStyle={containerStyle}  center={count}  zoom={20}  onLoad={onLoad} query={query}> </GoogleMap>\n            <p style={{marginLeft:'5px',fontWeight:'bold',marginTop:'10px',color:'#0066FF'}}>搜索附近餐饮店:</p><Search style={{width:'330px',marginLeft:'110px',marginBottom:'5px',marginTop:'-42px'}} placeholder=\"input search text\" onSearch={query}   enterButton />\n        </div>\n    ) : <></>\n}\n"]},"metadata":{},"sourceType":"module"}