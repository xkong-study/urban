{"ast":null,"code":"var _jsxFileName = \"/Users/kong/Desktop/urban_react/src/pages/test.jsx\";\n\n/* jshint esversion: 6 */\n// import React from 'react';\n// import {Map, Markers} from \"react-amap\";\n// const randomPosition = () => ({\n//     longitude: 53 + Math.random(),\n//     latitude: -6 + Math.random()\n// });\n// const randomMarker = (len) => (\n//     Array(len).fill(true).map((e, idx) => ({\n//         position: randomPosition()\n//     }))\n// );\n//\n// export default function test(){\n//\n//     const [count,setCount] = React.useState({markers: randomMarker(10)});\n//     const randomMarkers=function (){\n//         setCount({markers: randomMarker(10)});\n//     };\n//     const plugins = [\n//         'MapType',\n//         'Scale',\n//         'OverView',\n//         'ControlBar', // v1.1.0 新增\n//         {\n//             name: 'ToolBar',\n//             options: {\n//                 visible: true,  // 不设置该属性默认就是 true\n//                 onCreated(ins){\n//                     console.log(ins);\n//                 },\n//             },\n//         }\n//     ];\n//     return(\n//             <div>\n//             <div style={{width: '100%', height: 372}}>\n//                 <Map plugins={plugins}  zoom={6} center={{longitude: 53,latitude: -6}}>\n//                     <Markers\n//                         markers={count.markers}\n//                     />\n//                 </Map>\n//             </div>\n//             <button onClick={randomMarkers.bind(this)}>Random Markers</button>\n//         </div>\n//         )\n// }\nimport React, { Component } from 'react';\nimport { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\nimport CurrentLocation from './Map';\nimport { Map } from \"react-amap\";\nexport default function Test() {\n  var _this = this;\n\n  var state = {\n    showingInfoWindow: false,\n    activeMarker: {},\n    selectedPlace: {}\n  };\n\n  var onMarkerClick = function onMarkerClick(props, marker, e) {\n    return _this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n  };\n\n  var onClose = function onClose(props) {\n    if (_this.state.showingInfoWindow) {\n      _this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(CurrentLocation, {\n    centerAroundCurrentLocation: true,\n    google: this.props.google,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    google: this.props.google,\n    zoom: 14,\n    initialCenter: {\n      lat: -1.2884,\n      lng: 36.8233\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 14\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    onClick: onMarkerClick,\n    name: 'current location',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(InfoWindow, {\n    marker: state.activeMarker,\n    visible: state.showingInfoWindow,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, state.selectedPlace.name))));\n}","map":{"version":3,"sources":["/Users/kong/Desktop/urban_react/src/pages/test.jsx"],"names":["React","Component","GoogleApiWrapper","InfoWindow","Marker","CurrentLocation","Map","Test","state","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","props","marker","e","setState","onClose","google","lat","lng","name"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,gBAAT,EAA2BC,UAA3B,EAAuCC,MAAvC,QAAqD,mBAArD;AAEA,OAAOC,eAAP,MAA4B,OAA5B;AACA,SAAQC,GAAR,QAAkB,YAAlB;AAEA,eAAe,SAASC,IAAT,GAAe;AAAA;;AAC1B,MAAMC,KAAK,GAAG;AACVC,IAAAA,iBAAiB,EAAE,KADT;AAEVC,IAAAA,YAAY,EAAE,EAFJ;AAGVC,IAAAA,aAAa,EAAE;AAHL,GAAd;;AAMA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAQC,MAAR,EAAgBC,CAAhB;AAAA,WAClB,KAAI,CAACC,QAAL,CAAc;AACVL,MAAAA,aAAa,EAAEE,KADL;AAEVH,MAAAA,YAAY,EAAEI,MAFJ;AAGVL,MAAAA,iBAAiB,EAAE;AAHT,KAAd,CADkB;AAAA,GAAtB;;AAOA,MAAMQ,OAAO,GAAG,SAAVA,OAAU,CAAAJ,KAAK,EAAI;AACrB,QAAI,KAAI,CAACL,KAAL,CAAWC,iBAAf,EAAkC;AAC9B,MAAA,KAAI,CAACO,QAAL,CAAc;AACVP,QAAAA,iBAAiB,EAAE,KADT;AAEVC,QAAAA,YAAY,EAAE;AAFJ,OAAd;AAIH;AACJ,GAPD;;AASI,sBACI,oBAAC,eAAD;AACI,IAAA,2BAA2B,MAD/B;AAEI,IAAA,MAAM,EAAE,KAAKG,KAAL,CAAWK,MAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGC,oBAAC,GAAD;AACG,IAAA,MAAM,EAAE,KAAKL,KAAL,CAAWK,MADtB;AAEG,IAAA,IAAI,EAAE,EAFT;AAGG,IAAA,aAAa,EAAE;AACXC,MAAAA,GAAG,EAAE,CAAC,MADK;AAEXC,MAAAA,GAAG,EAAE;AAFM,KAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,eAYI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAER,aAAjB;AAAgC,IAAA,IAAI,EAAE,kBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,eAaI,oBAAC,UAAD;AACI,IAAA,MAAM,EAAEJ,KAAK,CAACE,YADlB;AAEI,IAAA,OAAO,EAAEF,KAAK,CAACC,iBAFnB;AAGI,IAAA,OAAO,EAAEQ,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKT,KAAK,CAACG,aAAN,CAAoBU,IAAzB,CADJ,CALJ,CAbJ,CADJ;AAyBL","sourcesContent":["/* jshint esversion: 6 */\n// import React from 'react';\n// import {Map, Markers} from \"react-amap\";\n// const randomPosition = () => ({\n//     longitude: 53 + Math.random(),\n//     latitude: -6 + Math.random()\n// });\n// const randomMarker = (len) => (\n//     Array(len).fill(true).map((e, idx) => ({\n//         position: randomPosition()\n//     }))\n// );\n//\n// export default function test(){\n//\n//     const [count,setCount] = React.useState({markers: randomMarker(10)});\n//     const randomMarkers=function (){\n//         setCount({markers: randomMarker(10)});\n//     };\n//     const plugins = [\n//         'MapType',\n//         'Scale',\n//         'OverView',\n//         'ControlBar', // v1.1.0 新增\n//         {\n//             name: 'ToolBar',\n//             options: {\n//                 visible: true,  // 不设置该属性默认就是 true\n//                 onCreated(ins){\n//                     console.log(ins);\n//                 },\n//             },\n//         }\n//     ];\n//     return(\n//             <div>\n//             <div style={{width: '100%', height: 372}}>\n//                 <Map plugins={plugins}  zoom={6} center={{longitude: 53,latitude: -6}}>\n//                     <Markers\n//                         markers={count.markers}\n//                     />\n//                 </Map>\n//             </div>\n//             <button onClick={randomMarkers.bind(this)}>Random Markers</button>\n//         </div>\n//         )\n// }\n\n\n\n\nimport React, { Component } from 'react';\nimport { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\n\nimport CurrentLocation from './Map';\nimport {Map} from \"react-amap\";\n\nexport default function Test(){\n    const state = {\n        showingInfoWindow: false,\n        activeMarker: {},\n        selectedPlace: {}\n    };\n\n    const onMarkerClick = (props, marker, e) =>\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true\n        });\n\n    const onClose = props => {\n        if (this.state.showingInfoWindow) {\n            this.setState({\n                showingInfoWindow: false,\n                activeMarker: null\n            });\n        }\n    };\n\n        return (\n            <CurrentLocation\n                centerAroundCurrentLocation\n                google={this.props.google}\n            ><Map\n                google={this.props.google}\n                zoom={14}\n                initialCenter={{\n                    lat: -1.2884,\n                    lng: 36.8233\n                }}\n            />\n\n                <Marker onClick={onMarkerClick} name={'current location'} />\n                <InfoWindow\n                    marker={state.activeMarker}\n                    visible={state.showingInfoWindow}\n                    onClose={onClose}\n                >\n                    <div>\n                        <h4>{state.selectedPlace.name}</h4>\n                    </div>\n                </InfoWindow>\n            </CurrentLocation>\n        );\n  }\n\n"]},"metadata":{},"sourceType":"module"}