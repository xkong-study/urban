{"ast":null,"code":"import _slicedToArray from \"/Users/kong/Desktop/urban_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kong/Desktop/urban_react/src/pages/map.jsx\";\n\n/* jshint esversion: 6 */\nimport React, { useState } from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api'; // Import the functions you need from the SDKs you need\n\nimport firebase from \"firebase/compat\";\nimport axios from \"axios\";\nimport { Input } from \"antd\";\nvar Search = Input.Search;\nvar containerStyle = {\n  width: '800px',\n  height: '400px'\n};\nvar myArr = [];\n\nvar getApi = function getApi() {\n  axios.get('https://maps.googleapis.com/maps/api/place/nearbysearch/json', {\n    params: {\n      key: 'AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c',\n      types: 'dinner',\n      location: '53.26,-6.15',\n      radius: '100000'\n    }\n  }).then(function (response) {\n    var result = response.data.results;\n\n    for (var key in result) {\n      myArr.push(result[key].geometry.location);\n    }\n  }).catch(function (error) {\n    console.log(error);\n  });\n};\n\ngetApi();\nexport default function map() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      array = _useState2[0],\n      setArray = _useState2[1];\n\n  var firebaseConfig = {\n    apiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\",\n    authDomain: \"urban-computing-cb07c.firebaseapp.com\",\n    databaseURL: \"https://urban-computing-cb07c-default-rtdb.firebaseio.com\",\n    projectId: \"urban-computing-cb07c\",\n    storageBucket: \"urban-computing-cb07c.appspot.com\",\n    messagingSenderId: \"293478437107\",\n    appId: \"1:293478437107:web:4cd5199b68f68eac542786\",\n    measurementId: \"G-3Z5DD1SJYQ\"\n  };\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      count = _React$useState2[0],\n      setCount = _React$useState2[1];\n\n  React.useEffect(function () {\n    firebase.initializeApp(firebaseConfig);\n    firebase.database().ref('/').on('value', function (snap) {\n      var obj = snap.val();\n\n      if (obj !== null) {\n        for (var key in obj) {\n          if (key.split(',')[2] > '22 13:35:00') {\n            setCount(obj[key]);\n            console.log(obj[key]);\n          }\n        }\n      }\n    });\n  }, []);\n\n  var query = function query(value) {\n    axios.get('https://maps.googleapis.com/maps/api/place/nearbysearch/json', {\n      params: {\n        key: 'AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c',\n        types: value === '' ? 'cafe' : value,\n        location: '53.26,-6.15',\n        radius: '100000'\n      }\n    }).then(function (response) {\n      var result = response.data.results;\n\n      for (var key in result) {\n        myArr.push(result[key].geometry.location);\n      }\n\n      for (var i = 0; i < myArr.length; i++) {\n        var marker = new window.google.maps.Marker({\n          position: myArr[i],\n          title: \"starting\"\n        });\n        marker.setMap(map);\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var _useJsApiLoader = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\"\n  }),\n      isLoaded = _useJsApiLoader.isLoaded;\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      map = _React$useState4[0],\n      setMap = _React$useState4[1];\n\n  var onLoad = React.useCallback(function callback(map) {\n    var bounds = new window.google.maps.LatLngBounds(count);\n    map.fitBounds(bounds);\n    var marker = new window.google.maps.Marker({\n      position: count,\n      title: \"starting\"\n    });\n    console.log(count);\n    marker.setMap(map);\n  }, []);\n  var onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  return isLoaded ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: count,\n    zoom: 25,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginLeft: '5px',\n      fontWeight: 'bold',\n      marginTop: '10px',\n      color: '#0066FF'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"\\u641C\\u7D22\\u9644\\u8FD1\\u9910\\u996E\\u5E97:\"), /*#__PURE__*/React.createElement(Search, {\n    style: {\n      width: '330px',\n      marginLeft: '110px',\n      marginBottom: '5px',\n      marginTop: '-42px'\n    },\n    placeholder: \"input search text\",\n    onSearch: query,\n    enterButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 106\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null);\n}","map":{"version":3,"sources":["/Users/kong/Desktop/urban_react/src/pages/map.jsx"],"names":["React","useState","GoogleMap","useJsApiLoader","firebase","axios","Input","Search","containerStyle","width","height","myArr","getApi","get","params","key","types","location","radius","then","response","result","data","results","push","geometry","catch","error","console","log","map","array","setArray","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","count","setCount","useEffect","initializeApp","database","ref","on","snap","obj","val","split","query","value","i","length","marker","window","google","maps","Marker","position","title","setMap","id","googleMapsApiKey","isLoaded","onLoad","useCallback","callback","bounds","LatLngBounds","fitBounds","onUnmount","marginLeft","fontWeight","marginTop","color","marginBottom"],"mappings":"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","sourcesContent":["/* jshint esversion: 6 */\n\nimport React, {useState} from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\n// Import the functions you need from the SDKs you need\nimport firebase from \"firebase/compat\";\nimport axios from \"axios\";\nimport {Input} from \"antd\";\nconst { Search } = Input;\n\n\nconst containerStyle = {\n    width: '800px',\n    height: '400px'\n};\nlet myArr=[];\nconst getApi = () => {\n    axios.get('https://maps.googleapis.com/maps/api/place/nearbysearch/json', {\n        params: {\n            key:'AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c',\n            types:'dinner',\n            location:'53.26,-6.15',\n            radius:'100000'\n        }\n    }).then(function (response) {\n        const result = response.data.results;\n        for(var key in result){\n        myArr.push(result[key].geometry.location);\n        }\n    })\n        .catch(function (error) {\n            console.log(error);\n        });\n};\ngetApi();\n\nexport default function map() {\n    const [array,setArray]=useState([]);\n    const firebaseConfig = {\n        apiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\",\n        authDomain: \"urban-computing-cb07c.firebaseapp.com\",\n        databaseURL: \"https://urban-computing-cb07c-default-rtdb.firebaseio.com\",\n        projectId: \"urban-computing-cb07c\",\n        storageBucket: \"urban-computing-cb07c.appspot.com\",\n        messagingSenderId: \"293478437107\",\n        appId: \"1:293478437107:web:4cd5199b68f68eac542786\",\n        measurementId: \"G-3Z5DD1SJYQ\"\n    };\n    const [count, setCount] =React.useState(0);\n\n    React.useEffect(()=>{\n            firebase.initializeApp(firebaseConfig);\n            firebase.database().ref('/').on('value',(snap)=> {\n                let obj = snap.val();\n                if (obj !== null) {\n                    for (var key in obj) {\n                        if(key.split(',')[2]>'22 13:35:00') {\n                            setCount(obj[key]);\n                            console.log(obj[key]);\n                        }\n                    }\n                }\n            });\n    },[]);\n    \n     const query= function(value:string){\n         axios.get('https://maps.googleapis.com/maps/api/place/nearbysearch/json', {\n             params: {\n                 key: 'AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c',\n                 types: value===''?'cafe':value,\n                 location: '53.26,-6.15',\n                 radius: '100000'\n             }\n         }).then(function (response) {\n             const result = response.data.results;\n             for (var key in result) {\n                 myArr.push(result[key].geometry.location);\n             }\n             for(let i =0;i<myArr.length;i++) {\n                 const marker = new window.google.maps.Marker({\n                     position: myArr[i],\n                     title: \"starting\"\n                 });\n                 marker.setMap(map);\n             }\n\n         })\n             .catch(function (error) {\n                 console.log(error);\n             });\n     };\n\n    const { isLoaded } = useJsApiLoader({\n        id: 'google-map-script',\n        googleMapsApiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\"\n    });\n\n    const [map, setMap] = React.useState(null);\n\n    const onLoad = React.useCallback(function callback(map) {\n        const bounds = new window.google.maps.LatLngBounds(count);\n        map.fitBounds(bounds);\n        const marker = new window.google.maps.Marker({\n            position: count,\n            title: \"starting\"\n        });\n        console.log(count);\n        marker.setMap(map);\n    }, []);\n\n    const onUnmount = React.useCallback(function callback(map) {\n        setMap(null);\n    }, []);\n\n\n    return isLoaded ? (\n        <div>\n            <GoogleMap  mapContainerStyle={containerStyle}  center={count}  zoom={25}  onLoad={onLoad}  onUnmount={onUnmount}> </GoogleMap>\n            <p style={{marginLeft:'5px',fontWeight:'bold',marginTop:'10px',color:'#0066FF'}}>搜索附近餐饮店:</p><Search style={{width:'330px',marginLeft:'110px',marginBottom:'5px',marginTop:'-42px'}} placeholder=\"input search text\" onSearch={query}   enterButton />\n        </div>\n    ) : <></>\n}\n"]},"metadata":{},"sourceType":"module"}