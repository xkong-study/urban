{"ast":null,"code":"import _slicedToArray from \"/Users/kong/Desktop/game-cloud-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kong/Desktop/game-cloud-frontend/src/pages/Means.jsx\";\nimport { DislikeFilled, DislikeOutlined, LikeFilled, LikeOutlined } from '@ant-design/icons';\nimport { Avatar, Comment, Tooltip } from 'antd';\nimport moment from 'moment';\nimport React, { createElement, useState } from 'react';\nexport default function Means() {\n  var _this = this;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      likes = _useState2[0],\n      setLikes = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dislikes = _useState4[0],\n      setDislikes = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      action = _useState6[0],\n      setAction = _useState6[1];\n\n  var like = function like() {\n    setLikes(1);\n    setDislikes(0);\n    setAction('liked');\n  };\n\n  var dislike = function dislike() {\n    setLikes(0);\n    setDislikes(1);\n    setAction('disliked');\n  };\n\n  var CommentList = function CommentList(_ref) {\n    var comments = _ref.comments;\n    return /*#__PURE__*/React.createElement(List, {\n      dataSource: comments,\n      header: \"\".concat(comments.length, \" \").concat(comments.length > 1 ? 'replies' : 'reply'),\n      itemLayout: \"horizontal\",\n      renderItem: function renderItem(props) {\n        return /*#__PURE__*/React.createElement(Comment, Object.assign({}, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 36\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    });\n  };\n\n  var Editor = function Editor(_ref2) {\n    var onChange = _ref2.onChange,\n        onSubmit = _ref2.onSubmit,\n        submitting = _ref2.submitting,\n        value = _ref2.value;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Item, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextArea, {\n      rows: 4,\n      onChange: onChange,\n      value: value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      htmlType: \"submit\",\n      loading: submitting,\n      onClick: onSubmit,\n      type: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, \"Add Comment\")));\n  };\n\n  var actions = [/*#__PURE__*/React.createElement(Tooltip, {\n    key: \"comment-basic-like\",\n    title: \"Like\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: like,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, createElement(action === 'liked' ? LikeFilled : LikeOutlined), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"comment-action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, likes))), /*#__PURE__*/React.createElement(Tooltip, {\n    key: \"comment-basic-dislike\",\n    title: \"Dislike\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: dislike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, React.createElement(action === 'disliked' ? DislikeFilled : DislikeOutlined), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"comment-action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, dislikes))), /*#__PURE__*/React.createElement(\"span\", {\n    key: \"comment-basic-reply-to\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Reply to\")];\n  return /*#__PURE__*/React.createElement(Comment, {\n    actions: actions,\n    author: /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, \"Han Solo\"),\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: \"https://joeschmoe.io/api/v1/random\",\n      alt: \"Han Solo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }),\n    content: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, \"We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.\"),\n    datetime: /*#__PURE__*/React.createElement(Tooltip, {\n      title: moment().format('YYYY-MM-DD HH:mm:ss'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, moment().fromNow())),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["/Users/kong/Desktop/game-cloud-frontend/src/pages/Means.jsx"],"names":["DislikeFilled","DislikeOutlined","LikeFilled","LikeOutlined","Avatar","Comment","Tooltip","moment","React","createElement","useState","Means","likes","setLikes","dislikes","setDislikes","action","setAction","like","dislike","CommentList","comments","length","props","Editor","onChange","onSubmit","submitting","value","actions","format","fromNow"],"mappings":"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","sourcesContent":["import { DislikeFilled, DislikeOutlined, LikeFilled, LikeOutlined } from '@ant-design/icons';\nimport { Avatar, Comment, Tooltip } from 'antd';\nimport moment from 'moment';\nimport React, { createElement, useState } from 'react';\n\nexport default function Means() {\n    const [likes, setLikes] = useState(0);\n    const [dislikes, setDislikes] = useState(0);\n    const [action, setAction] = useState(null);\n\n    const like = () => {\n        setLikes(1);\n        setDislikes(0);\n        setAction('liked');\n    };\n\n    const dislike = () => {\n        setLikes(0);\n        setDislikes(1);\n        setAction('disliked');\n    };\n\n    const CommentList = ({ comments }) => (\n        <List\n            dataSource={comments}\n            header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\n            itemLayout=\"horizontal\"\n            renderItem={(props) => <Comment {...props} />}\n        />\n    );\n\n    const Editor = ({ onChange, onSubmit, submitting, value }) => (\n        <>\n            <Form.Item>\n                <TextArea rows={4} onChange={onChange} value={value} />\n            </Form.Item>\n            <Form.Item>\n                <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit} type=\"primary\">\n                    Add Comment\n                </Button>\n            </Form.Item>\n        </>\n    );\n\n    const actions = [\n        <Tooltip key=\"comment-basic-like\" title=\"Like\">\n      <span onClick={like}>\n        {createElement(action === 'liked' ? LikeFilled : LikeOutlined)}\n          <span className=\"comment-action\">{likes}</span>\n      </span>\n        </Tooltip>,\n        <Tooltip key=\"comment-basic-dislike\" title=\"Dislike\">\n      <span onClick={dislike}>\n        {React.createElement(action === 'disliked' ? DislikeFilled : DislikeOutlined)}\n          <span className=\"comment-action\">{dislikes}</span>\n      </span>\n        </Tooltip>,\n        <span key=\"comment-basic-reply-to\">Reply to</span>,\n    ];\n    return (\n        <Comment\n            actions={actions}\n            author={<a>Han Solo</a>}\n            avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" alt=\"Han Solo\"/>}\n            content={\n                <p>\n                    We supply a series of design principles, practical patterns and high quality design\n                    resources (Sketch and Axure), to help people create their product prototypes beautifully\n                    and efficiently.\n                </p>\n            }\n            datetime={\n                <Tooltip title={moment().format('YYYY-MM-DD HH:mm:ss')}>\n                    <span>{moment().fromNow()}</span>\n                </Tooltip>\n            }\n        />\n    );\n}\n"]},"metadata":{},"sourceType":"module"}