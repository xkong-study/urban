{"ast":null,"code":"import _toConsumableArray from \"/Users/kong/Desktop/game-cloud-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/kong/Desktop/game-cloud-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kong/Desktop/game-cloud-frontend/src/pages/Means.jsx\";\nimport { DislikeFilled, DislikeOutlined, LikeFilled, LikeOutlined } from '@ant-design/icons';\nimport React, { createElement, useEffect, useState } from 'react';\nimport { Avatar, Comment, Tooltip, Button, Form, Input, List } from 'antd';\nimport moment from 'moment';\nimport { message } from 'antd';\nimport VirtualList from 'rc-virtual-list';\nimport { AddCommentDataApi, CommentListApi, GetCommentDataApi } from \"./request/api\";\nvar TextArea = Input.TextArea;\nexport default function Means() {\n  var _this = this;\n\n  var _useState = useState([{\n    actions: [/*#__PURE__*/React.createElement(\"span\", {\n      key: \"comment-list-reply-to-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 23\n      }\n    }, \"Reply to\")],\n    author: 'Han Solo',\n    avatar: 'https://joeschmoe.io/api/v1/random',\n    comments: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, \"We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.\"),\n    datetime: /*#__PURE__*/React.createElement(Tooltip, {\n      title: moment().subtract(1, 'days').format('YYYY-MM-DD HH:mm:ss'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }, moment().subtract(1, 'days').fromNow()))\n  }, {\n    actions: [/*#__PURE__*/React.createElement(\"span\", {\n      key: \"comment-list-reply-to-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 23\n      }\n    }, \"Reply to\")],\n    author: 'Han Solo',\n    avatar: 'https://joeschmoe.io/api/v1/random',\n    comments: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, \"We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.\"),\n    datetime: /*#__PURE__*/React.createElement(Tooltip, {\n      title: moment().subtract(2, 'days').format('YYYY-MM-DD HH:mm:ss'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, moment().subtract(2, 'days').fromNow()))\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      arr = _useState2[0],\n      setArr = _useState2[1];\n\n  var loadMoreData = function loadMoreData() {\n    if (loading) {\n      return;\n    }\n\n    setLoading(true);\n    fetch('https://randomuser.me/api/?results=10&inc=name,gender,email,nat,picture&noinfo').then(function (res) {\n      return res.json();\n    }).then(function (body) {\n      setData([].concat(_toConsumableArray(data), _toConsumableArray(body.results)));\n      setLoading(false);\n    }).catch(function () {\n      setLoading(false);\n    });\n  };\n\n  useEffect(function () {\n    GetCommentDataApi().then(function (response) {\n      var newArr = JSON.parse(JSON.stringify(response)); //深拷贝\n\n      var myarr = []; //用来获取自己想要的属性\n\n      newArr.map(function (item) {\n        var obj = {\n          id: item.id,\n          avatar: 'https://joeschmoe.io/api/v1/random',\n          actions: [/*#__PURE__*/React.createElement(\"span\", {\n            key: \"comment-list-reply-to-0\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 31\n            }\n          }, \"Reply to\")],\n          author: item.author,\n          comments: item.comments,\n          value: item.value,\n          datetime: /*#__PURE__*/React.createElement(Tooltip, {\n            title: moment().subtract(2, 'days').format('YYYY-MM-DD HH:mm:ss'),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }\n          }, moment().subtract(2, 'days').fromNow()))\n        };\n        myarr.push(obj);\n      });\n      setArr(myarr);\n      console.log(myarr);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"scrollableDiv\",\n    style: {\n      height: 400,\n      overflow: 'auto',\n      padding: '0 16px',\n      border: '1px solid rgba(140, 140, 140, 0.35)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n    dataLength: data.length,\n    next: loadMoreData,\n    hasMore: data.length < 50,\n    loader: /*#__PURE__*/React.createElement(Skeleton, {\n      avatar: true,\n      paragraph: {\n        rows: 1\n      },\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 20\n      }\n    }),\n    endMessage: /*#__PURE__*/React.createElement(Divider, {\n      plain: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 28\n      }\n    }, \"It is all, nothing more \\uD83E\\uDD10\"),\n    scrollableTarget: \"scrollableDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    className: \"comment-list\",\n    header: \"\".concat(arr.length, \" replies\"),\n    itemLayout: \"horizontal\",\n    dataSource: arr,\n    renderItem: function renderItem(item) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(Comment, {\n        actions: item.actions,\n        author: item.author,\n        avatar: item.avatar,\n        content: item.comments,\n        datetime: item.datetime,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 20\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 8\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/kong/Desktop/game-cloud-frontend/src/pages/Means.jsx"],"names":["DislikeFilled","DislikeOutlined","LikeFilled","LikeOutlined","React","createElement","useEffect","useState","Avatar","Comment","Tooltip","Button","Form","Input","List","moment","message","VirtualList","AddCommentDataApi","CommentListApi","GetCommentDataApi","TextArea","Means","actions","author","avatar","comments","datetime","subtract","format","fromNow","arr","setArr","loadMoreData","loading","setLoading","fetch","then","res","json","body","setData","data","results","catch","response","newArr","JSON","parse","stringify","myarr","map","item","obj","id","value","push","console","log","height","overflow","padding","border","length","rows"],"mappings":"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","sourcesContent":["import { DislikeFilled, DislikeOutlined, LikeFilled, LikeOutlined } from '@ant-design/icons';\nimport React, {createElement, useEffect, useState} from 'react';\nimport { Avatar, Comment, Tooltip, Button, Form, Input, List } from 'antd';\nimport moment from 'moment';\nimport { message } from 'antd';\nimport VirtualList from 'rc-virtual-list';\nimport {AddCommentDataApi, CommentListApi, GetCommentDataApi} from \"./request/api\";\nconst { TextArea } = Input;\n\n\nexport default function Means() {\n    const[arr,setArr]=useState([\n        {\n            actions: [<span key=\"comment-list-reply-to-0\">Reply to</span>],\n            author: 'Han Solo',\n            avatar: 'https://joeschmoe.io/api/v1/random',\n            comments: (\n                <p>\n                    We supply a series of design principles, practical patterns and high quality design\n                    resources (Sketch and Axure), to help people create their product prototypes beautifully and\n                    efficiently.\n                </p>\n            ),\n            datetime: (\n                <Tooltip title={moment().subtract(1, 'days').format('YYYY-MM-DD HH:mm:ss')}>\n                    <span>{moment().subtract(1, 'days').fromNow()}</span>\n                </Tooltip>\n            ),\n        },\n        {\n            actions: [<span key=\"comment-list-reply-to-0\">Reply to</span>],\n            author: 'Han Solo',\n            avatar: 'https://joeschmoe.io/api/v1/random',\n            comments: (\n                <p>\n                    We supply a series of design principles, practical patterns and high quality design\n                    resources (Sketch and Axure), to help people create their product prototypes beautifully and\n                    efficiently.\n                </p>\n            ),\n            datetime: (\n                <Tooltip title={moment().subtract(2, 'days').format('YYYY-MM-DD HH:mm:ss')}>\n                    <span>{moment().subtract(2, 'days').fromNow()}</span>\n                </Tooltip>\n            ),\n        },\n    ]);\n    const loadMoreData = () => {\n        if (loading) {\n            return;\n        }\n\n        setLoading(true);\n        fetch('https://randomuser.me/api/?results=10&inc=name,gender,email,nat,picture&noinfo')\n            .then((res) => res.json())\n            .then((body) => {\n                setData([...data, ...body.results]);\n                setLoading(false);\n            })\n            .catch(() => {\n                setLoading(false);\n            });\n    };\n    useEffect(()=>{\n        GetCommentDataApi().then(response=> {\n            let newArr = JSON.parse(JSON.stringify(response));//深拷贝\n            let myarr = []//用来获取自己想要的属性\n            newArr.map(item => {\n                let obj = {\n                    id: item.id,\n                    avatar: 'https://joeschmoe.io/api/v1/random',\n                    actions: [<span key=\"comment-list-reply-to-0\">Reply to</span>],\n                    author: item.author,\n                    comments: item.comments,\n                    value: item.value,\n                    datetime: (\n                        <Tooltip title={moment().subtract(2, 'days').format('YYYY-MM-DD HH:mm:ss')}>\n                            <span>{moment().subtract(2, 'days').fromNow()}</span>\n                        </Tooltip>\n                    ),\n                }\n                myarr.push(obj);\n            })\n            setArr(myarr)\n            console.log(myarr)\n        })\n    },[])\n\n   return(\n       <div  id=\"scrollableDiv\"\n             style={{\n                 height: 400,\n                 overflow: 'auto',\n                 padding: '0 16px',\n                 border: '1px solid rgba(140, 140, 140, 0.35)',\n             }}\n       >\n           <InfiniteScroll\n               dataLength={data.length}\n               next={loadMoreData}\n               hasMore={data.length < 50}\n               loader={\n                   <Skeleton\n                       avatar\n                       paragraph={{\n                           rows: 1,\n                       }}\n                       active\n                   />\n               }\n               endMessage={<Divider plain>It is all, nothing more 🤐</Divider>}\n               scrollableTarget=\"scrollableDiv\"\n           >\n       <List\n           className=\"comment-list\"\n           header={`${arr.length} replies`}\n           itemLayout=\"horizontal\"\n           dataSource={arr}\n           renderItem={(item) => (\n               <li>\n                   <Comment\n                       actions={item.actions}\n                       author={item.author}\n                       avatar={item.avatar}\n                       content={item.comments}\n                       datetime={item.datetime}\n                   />\n               </li>\n           )}\n       />\n       </InfiniteScroll>\n       </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}