{"ast":null,"code":"import _slicedToArray from \"/Users/kong/Desktop/urban_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kong/Desktop/urban_react/src/pages/map.jsx\";\n\n/* jshint esversion: 6 */\nimport React from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api'; // Import the functions you need from the SDKs you need\n\nimport firebase from \"firebase/compat\";\nimport worker from './worker';\nvar containerStyle = {\n  width: '800px',\n  height: '400px'\n};\nexport default function map() {\n  var w;\n\n  function startWorker() {\n    if (typeof w === \"undefined\") {\n      w = new Worker(\"/Users/kong/Desktop/urban_react/src/pages/request/work.js\");\n    }\n\n    w.onmessage = function (event) {\n      console.log(event.data);\n      document.getElementById(\"result\").innerHTML = event.data;\n    };\n  }\n\n  function stopWorker() {\n    w.terminate();\n    w = undefined;\n  }\n\n  startWorker();\n  var firebaseConfig = {\n    apiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\",\n    authDomain: \"urban-computing-cb07c.firebaseapp.com\",\n    databaseURL: \"https://urban-computing-cb07c-default-rtdb.firebaseio.com\",\n    projectId: \"urban-computing-cb07c\",\n    storageBucket: \"urban-computing-cb07c.appspot.com\",\n    messagingSenderId: \"293478437107\",\n    appId: \"1:293478437107:web:4cd5199b68f68eac542786\",\n    measurementId: \"G-3Z5DD1SJYQ\"\n  };\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      count = _React$useState2[0],\n      setCount = _React$useState2[1];\n\n  React.useEffect(function () {\n    setTimeout(function () {\n      firebase.initializeApp(firebaseConfig);\n      firebase.database().ref('/').on('value', function (snap) {\n        var obj = snap.val();\n\n        if (obj !== null) {\n          for (var key in obj) {\n            setCount(obj[key]);\n          }\n        }\n      });\n    }, 1000);\n  }, []); // console.log(count);\n\n  var _useJsApiLoader = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\"\n  }),\n      isLoaded = _useJsApiLoader.isLoaded;\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      map = _React$useState4[0],\n      setMap = _React$useState4[1];\n\n  var myLatlng = {\n    lat: 53.49332,\n    lng: -6.31718\n  };\n  var onLoad = React.useCallback(function callback(map) {\n    var bounds = new window.google.maps.LatLngBounds(count);\n    map.fitBounds(bounds);\n    var marker = new window.google.maps.Marker({\n      position: myLatlng,\n      title: \"starting\"\n    });\n    marker.setMap(map);\n  }, []);\n  var onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  return isLoaded ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: count,\n    zoom: 10,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \" \")) : /*#__PURE__*/React.createElement(React.Fragment, null);\n}","map":{"version":3,"sources":["/Users/kong/Desktop/urban_react/src/pages/map.jsx"],"names":["React","GoogleMap","useJsApiLoader","firebase","worker","containerStyle","width","height","map","w","startWorker","Worker","onmessage","event","console","log","data","document","getElementById","innerHTML","stopWorker","terminate","undefined","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","useState","count","setCount","useEffect","setTimeout","initializeApp","database","ref","on","snap","obj","val","key","id","googleMapsApiKey","isLoaded","setMap","myLatlng","lat","lng","onLoad","useCallback","callback","bounds","window","google","maps","LatLngBounds","fitBounds","marker","Marker","position","title","onUnmount"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,wBAA1C,C,CACA;;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAGA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,KAAK,EAAE,OADY;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAAvB;AAOA,eAAe,SAASC,GAAT,GAAe;AAC1B,MAAIC,CAAJ;;AACA,WAASC,WAAT,GAAuB;AACnB,QAAI,OAAOD,CAAP,KAAc,WAAlB,EAA+B;AAC3BA,MAAAA,CAAC,GAAG,IAAIE,MAAJ,CAAW,2DAAX,CAAJ;AACH;;AACDF,IAAAA,CAAC,CAACG,SAAF,GAAc,UAASC,KAAT,EAAgB;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,IAAlB;AACAC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,SAAlC,GAA8CN,KAAK,CAACG,IAApD;AACH,KAHD;AAIH;;AAED,WAASI,UAAT,GAAsB;AAClBX,IAAAA,CAAC,CAACY,SAAF;AACAZ,IAAAA,CAAC,GAAGa,SAAJ;AACH;;AACDZ,EAAAA,WAAW;AAEX,MAAMa,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,yCADW;AAEnBC,IAAAA,UAAU,EAAE,uCAFO;AAGnBC,IAAAA,WAAW,EAAE,2DAHM;AAInBC,IAAAA,SAAS,EAAE,uBAJQ;AAKnBC,IAAAA,aAAa,EAAE,mCALI;AAMnBC,IAAAA,iBAAiB,EAAE,cANA;AAOnBC,IAAAA,KAAK,EAAE,2CAPY;AAQnBC,IAAAA,aAAa,EAAE;AARI,GAAvB;;AAlB0B,wBA6BD/B,KAAK,CAACgC,QAAN,CAAe,CAAf,CA7BC;AAAA;AAAA,MA6BnBC,KA7BmB;AAAA,MA6BZC,QA7BY;;AA8B1BlC,EAAAA,KAAK,CAACmC,SAAN,CAAgB,YAAI;AAChBC,IAAAA,UAAU,CAAC,YAAI;AACfjC,MAAAA,QAAQ,CAACkC,aAAT,CAAuBd,cAAvB;AACApB,MAAAA,QAAQ,CAACmC,QAAT,GAAoBC,GAApB,CAAwB,GAAxB,EAA6BC,EAA7B,CAAgC,OAAhC,EAAwC,UAACC,IAAD,EAAS;AAC7C,YAAIC,GAAG,GAAGD,IAAI,CAACE,GAAL,EAAV;;AACA,YAAID,GAAG,KAAK,IAAZ,EAAkB;AACd,eAAK,IAAIE,GAAT,IAAgBF,GAAhB,EAAqB;AACjBR,YAAAA,QAAQ,CAACQ,GAAG,CAACE,GAAD,CAAJ,CAAR;AACH;AACJ;AACJ,OAPD;AAQC,KAVS,EAUR,IAVQ,CAAV;AAWH,GAZD,EAYE,EAZF,EA9B0B,CA4C1B;;AA5C0B,wBA8CL1C,cAAc,CAAC;AAChC2C,IAAAA,EAAE,EAAE,mBAD4B;AAEhCC,IAAAA,gBAAgB,EAAE;AAFc,GAAD,CA9CT;AAAA,MA8ClBC,QA9CkB,mBA8ClBA,QA9CkB;;AAAA,yBAmDJ/C,KAAK,CAACgC,QAAN,CAAe,IAAf,CAnDI;AAAA;AAAA,MAmDnBxB,GAnDmB;AAAA,MAmDdwC,MAnDc;;AAqD1B,MAAMC,QAAQ,GAAG;AAACC,IAAAA,GAAG,EAAE,QAAN;AAAgBC,IAAAA,GAAG,EAAE,CAAC;AAAtB,GAAjB;AACA,MAAMC,MAAM,GAAGpD,KAAK,CAACqD,WAAN,CAAkB,SAASC,QAAT,CAAkB9C,GAAlB,EAAuB;AACpD,QAAM+C,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,YAAvB,CAAoC1B,KAApC,CAAf;AACAzB,IAAAA,GAAG,CAACoD,SAAJ,CAAcL,MAAd;AACA,QAAMM,MAAM,GAAG,IAAIL,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBI,MAAvB,CAA8B;AACzCC,MAAAA,QAAQ,EAACd,QADgC;AAEzCe,MAAAA,KAAK,EAAC;AAFmC,KAA9B,CAAf;AAIAH,IAAAA,MAAM,CAACb,MAAP,CAAcxC,GAAd;AACH,GARc,EAQZ,EARY,CAAf;AASA,MAAMyD,SAAS,GAAGjE,KAAK,CAACqD,WAAN,CAAkB,SAASC,QAAT,CAAkB9C,GAAlB,EAAuB;AACvDwC,IAAAA,MAAM,CAAC,IAAD,CAAN;AACH,GAFiB,EAEf,EAFe,CAAlB;AAIA,SAAOD,QAAQ,gBACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,SAAD;AAAY,IAAA,iBAAiB,EAAE1C,cAA/B;AAAgD,IAAA,MAAM,EAAE4B,KAAxD;AAAgE,IAAA,IAAI,EAAE,EAAtE;AAA2E,IAAA,MAAM,EAAEmB,MAAnF;AAA4F,IAAA,SAAS,EAAEa,SAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADA,CADW,gBAIX,yCAJJ;AAKH","sourcesContent":["/* jshint esversion: 6 */\n\nimport React from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\n// Import the functions you need from the SDKs you need\nimport firebase from \"firebase/compat\";\nimport worker from './worker';\n\n\nconst containerStyle = {\n    width: '800px',\n    height: '400px'\n};\n\n\n\nexport default function map() {\n    let w;\n    function startWorker() {\n        if (typeof(w) === \"undefined\") {\n            w = new Worker(\"/Users/kong/Desktop/urban_react/src/pages/request/work.js\");\n        }\n        w.onmessage = function(event) {\n            console.log(event.data);\n            document.getElementById(\"result\").innerHTML = event.data;\n        };\n    }\n\n    function stopWorker() {\n        w.terminate();\n        w = undefined;\n    }\n    startWorker();\n\n    const firebaseConfig = {\n        apiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\",\n        authDomain: \"urban-computing-cb07c.firebaseapp.com\",\n        databaseURL: \"https://urban-computing-cb07c-default-rtdb.firebaseio.com\",\n        projectId: \"urban-computing-cb07c\",\n        storageBucket: \"urban-computing-cb07c.appspot.com\",\n        messagingSenderId: \"293478437107\",\n        appId: \"1:293478437107:web:4cd5199b68f68eac542786\",\n        measurementId: \"G-3Z5DD1SJYQ\"\n    };\n\n    const [count, setCount] =React.useState(0);\n    React.useEffect(()=>{\n        setTimeout(()=>{\n        firebase.initializeApp(firebaseConfig);\n        firebase.database().ref('/').on('value',(snap)=> {\n            let obj = snap.val();\n            if (obj !== null) {\n                for (var key in obj) {\n                    setCount(obj[key]);\n                }\n            }\n        });\n        },1000);\n    },[]);\n\n    // console.log(count);\n\n    const { isLoaded } = useJsApiLoader({\n        id: 'google-map-script',\n        googleMapsApiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\"\n    });\n\n    const [map, setMap] = React.useState(null);\n\n    const myLatlng = {lat: 53.49332, lng: -6.31718};\n    const onLoad = React.useCallback(function callback(map) {\n        const bounds = new window.google.maps.LatLngBounds(count);\n        map.fitBounds(bounds);\n        const marker = new window.google.maps.Marker({\n            position:myLatlng,\n            title:\"starting\"\n        });\n        marker.setMap(map);\n    }, []);\n    const onUnmount = React.useCallback(function callback(map) {\n        setMap(null);\n    }, []);\n\n    return isLoaded ? (\n        <div>\n        <GoogleMap  mapContainerStyle={containerStyle}  center={count}  zoom={10}  onLoad={onLoad}  onUnmount={onUnmount}> </GoogleMap>\n        </div>\n    ) : <></>\n}\n\n"]},"metadata":{},"sourceType":"module"}