{"ast":null,"code":"/* jshint esversion: 6 */\nimport { MarkerClusterer, useJsApiLoader } from \"@react-google-maps/api\"; // const randomPosition = () => ({\n//     longitude: 53 + Math.random(),\n//     latitude: -6 + Math.random()\n// });\n// const randomMarker = (len) => (\n//     Array(len).fill(true).map((e, idx) => ({\n//         position: randomPosition()\n//     }))\n// );\n//\n//\n//     const [count,setCount] = React.useState({markers: randomMarker(10)});\n//     const randomMarkers=function (){\n//         setCount({markers: randomMarker(10)});\n//     };\n//     const plugins = [\n//         'MapType',\n//         'Scale',\n//         'OverView',\n//         'ControlBar', // v1.1.0 新增\n//         {\n//             name: 'ToolBar',\n//             options: {\n//                 visible: true,  // 不设置该属性默认就是 true\n//                 onCreated(ins){\n//                     console.log(ins);\n//                 },\n//             },\n//         }\n//     ];\n//     return(\n//             <div>\n//             <div style={{width: '100%', height: 372}}>\n//                 <Map plugins={plugins}  zoom={6} center={{longitude: 53,latitude: -6}}>\n//                     <Markers\n//                         markers={count.markers}\n//                     />\n//                 </Map>\n//             </div>\n//             <button onClick={randomMarkers.bind(this)}>Random Markers</button>\n//         </div>\n//         )\n// }\n//\n//\n//\n//\n// // import React, { Component } from 'react';\n// // import { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\n// //\n// // import CurrentLocation from './Map';\n// // import {Map} from \"react-amap\";\n// //\n// // export default function Test(){\n// //     const state = {\n// //         showingInfoWindow: false,\n// //         activeMarker: {},\n// //         selectedPlace: {}\n// //     };\n// //\n// //     const onMarkerClick = (props, marker, e) =>\n// //         this.setState({\n// //             selectedPlace: props,\n// //             activeMarker: marker,\n// //             showingInfoWindow: true\n// //         });\n// //\n// //     const onClose = props => {\n// //         if (this.state.showingInfoWindow) {\n// //             this.setState({\n// //                 showingInfoWindow: false,\n// //                 activeMarker: null\n// //             });\n// //         }\n// //     };\n// //\n// //         return (\n// //             <CurrentLocation\n// //                 centerAroundCurrentLocation\n// //                 google={this.props.google}\n// //             ><Map\n// //                 google={this.props.google}\n// //                 zoom={14}\n// //                 initialCenter={{\n// //                     lat: -1.2884,\n// //                     lng: 36.8233\n// //                 }}\n// //             />\n// //\n// //                 <Marker onClick={onMarkerClick} name={'current location'} />\n// //                 <InfoWindow\n// //                     marker={state.activeMarker}\n// //                     visible={state.showingInfoWindow}\n// //                     onClose={onClose}\n// //                 >\n// //                     <div>\n// //                         <h4>{state.selectedPlace.name}</h4>\n// //                     </div>\n// //                 </InfoWindow>\n// //             </CurrentLocation>\n// //         );\n// //   }\n// //\n//Create a new map\n\nvar locations = [['Liver Office - Liverpool Office', 53.40529, -2.988801, 1], ['Lond office - London Office', 51.515026, -0.086811, 2]];\nexport default function test(loc) {\n  var map_container = document.getElementById('map');\n\n  if (!map_container.map) {\n    map_container.map = new window.google.maps.Map(map_container, {\n      stylers: [{\n        saturation: -100\n      }]\n    });\n    map_container.marker = new window.google.maps.Marker();\n    map_container.infowindow = new window.google.maps.InfoWindow();\n    window.google.maps.event.addListener(map_container.marker, 'click', function () {\n      map_container.infowindow.close();\n      map_container.infowindow.open(this.getMap(), this);\n    });\n    map_container.infowindow.bindTo('content', map_container.marker, 'content');\n  }\n\n  map_container.infowindow.close();\n  map_container.map.setOptions({\n    zoom: 17,\n    center: new window.google.maps.LatLng(locations[loc][1], locations[loc][2])\n  }); //icon: 'marketICO.png',\n\n  map_container.marker.setOptions({\n    position: map_container.map.getCenter(),\n    map: map_container.map,\n    content: locations[loc][0],\n    title: locations[loc][0]\n  });\n}","map":{"version":3,"sources":["/Users/kong/Desktop/urban_react/src/pages/test.jsx"],"names":["MarkerClusterer","useJsApiLoader","locations","test","loc","map_container","document","getElementById","map","window","google","maps","Map","stylers","saturation","marker","Marker","infowindow","InfoWindow","event","addListener","close","open","getMap","bindTo","setOptions","zoom","center","LatLng","position","getCenter","content","title"],"mappings":"AAAA;AACA,SAAQA,eAAR,EAAyBC,cAAzB,QAA8C,wiCAAD,EAAoC,QAApC,EAA8C,CAAC,QAA/C,EAAyD,CAAzD,CADY,EAEZ,CAAC,6BAAD,EAAgC,SAAhC,EAA2C,CAAC,QAA5C,EAAsD,CAAtD,CAFY,CAAhB;AAMA,eAAe,SAASC,IAAT,CAAcC,GAAd,EAAmB;AAC9B,MAAIC,aAAa,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAApB;;AACA,MAAI,CAACF,aAAa,CAACG,GAAnB,EAAwB;AACpBH,IAAAA,aAAa,CAACG,GAAd,GAAoB,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,GAAvB,CAA2BP,aAA3B,EAEhB;AACIQ,MAAAA,OAAO,EAAE,CAAC;AACNC,QAAAA,UAAU,EAAE,CAAC;AADP,OAAD;AADb,KAFgB,CAApB;AAQAT,IAAAA,aAAa,CAACU,MAAd,GAAuB,IAAIN,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBK,MAAvB,EAAvB;AACAX,IAAAA,aAAa,CAACY,UAAd,GAA2B,IAAIR,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBO,UAAvB,EAA3B;AACAT,IAAAA,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBQ,KAAnB,CAAyBC,WAAzB,CAAqCf,aAAa,CAACU,MAAnD,EAA2D,OAA3D,EAAoE,YAAY;AAC5EV,MAAAA,aAAa,CAACY,UAAd,CAAyBI,KAAzB;AACAhB,MAAAA,aAAa,CAACY,UAAd,CAAyBK,IAAzB,CAA8B,KAAKC,MAAL,EAA9B,EAA6C,IAA7C;AACH,KAHD;AAIAlB,IAAAA,aAAa,CAACY,UAAd,CAAyBO,MAAzB,CAAgC,SAAhC,EAA2CnB,aAAa,CAACU,MAAzD,EAAiE,SAAjE;AACH;;AACDV,EAAAA,aAAa,CAACY,UAAd,CAAyBI,KAAzB;AACAhB,EAAAA,aAAa,CAACG,GAAd,CAAkBiB,UAAlB,CAA6B;AACzBC,IAAAA,IAAI,EAAE,EADmB;AAEzBC,IAAAA,MAAM,EAAE,IAAIlB,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBiB,MAAvB,CAA+B1B,SAAS,CAACE,GAAD,CAAT,CAAe,CAAf,CAA/B,EAAoDF,SAAS,CAACE,GAAD,CAAT,CAAe,CAAf,CAApD;AAFiB,GAA7B,EApB8B,CAyB9B;;AACAC,EAAAA,aAAa,CAACU,MAAd,CAAqBU,UAArB,CAAgC;AAC5BI,IAAAA,QAAQ,EAAExB,aAAa,CAACG,GAAd,CAAkBsB,SAAlB,EADkB;AAE5BtB,IAAAA,GAAG,EAAEH,aAAa,CAACG,GAFS;AAG5BuB,IAAAA,OAAO,EAAE7B,SAAS,CAACE,GAAD,CAAT,CAAe,CAAf,CAHmB;AAI5B4B,IAAAA,KAAK,EAAE9B,SAAS,CAACE,GAAD,CAAT,CAAe,CAAf;AAJqB,GAAhC;AAMH","sourcesContent":["/* jshint esversion: 6 */\nimport {MarkerClusterer, useJsApiLoader} from \"@react-google-maps/api\";\n// const randomPosition = () => ({\n//     longitude: 53 + Math.random(),\n//     latitude: -6 + Math.random()\n// });\n// const randomMarker = (len) => (\n//     Array(len).fill(true).map((e, idx) => ({\n//         position: randomPosition()\n//     }))\n// );\n//\n\n//\n//     const [count,setCount] = React.useState({markers: randomMarker(10)});\n//     const randomMarkers=function (){\n//         setCount({markers: randomMarker(10)});\n//     };\n//     const plugins = [\n//         'MapType',\n//         'Scale',\n//         'OverView',\n//         'ControlBar', // v1.1.0 新增\n//         {\n//             name: 'ToolBar',\n//             options: {\n//                 visible: true,  // 不设置该属性默认就是 true\n//                 onCreated(ins){\n//                     console.log(ins);\n//                 },\n//             },\n//         }\n//     ];\n//     return(\n//             <div>\n//             <div style={{width: '100%', height: 372}}>\n//                 <Map plugins={plugins}  zoom={6} center={{longitude: 53,latitude: -6}}>\n//                     <Markers\n//                         markers={count.markers}\n//                     />\n//                 </Map>\n//             </div>\n//             <button onClick={randomMarkers.bind(this)}>Random Markers</button>\n//         </div>\n//         )\n// }\n//\n//\n//\n//\n// // import React, { Component } from 'react';\n// // import { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\n// //\n// // import CurrentLocation from './Map';\n// // import {Map} from \"react-amap\";\n// //\n// // export default function Test(){\n// //     const state = {\n// //         showingInfoWindow: false,\n// //         activeMarker: {},\n// //         selectedPlace: {}\n// //     };\n// //\n// //     const onMarkerClick = (props, marker, e) =>\n// //         this.setState({\n// //             selectedPlace: props,\n// //             activeMarker: marker,\n// //             showingInfoWindow: true\n// //         });\n// //\n// //     const onClose = props => {\n// //         if (this.state.showingInfoWindow) {\n// //             this.setState({\n// //                 showingInfoWindow: false,\n// //                 activeMarker: null\n// //             });\n// //         }\n// //     };\n// //\n// //         return (\n// //             <CurrentLocation\n// //                 centerAroundCurrentLocation\n// //                 google={this.props.google}\n// //             ><Map\n// //                 google={this.props.google}\n// //                 zoom={14}\n// //                 initialCenter={{\n// //                     lat: -1.2884,\n// //                     lng: 36.8233\n// //                 }}\n// //             />\n// //\n// //                 <Marker onClick={onMarkerClick} name={'current location'} />\n// //                 <InfoWindow\n// //                     marker={state.activeMarker}\n// //                     visible={state.showingInfoWindow}\n// //                     onClose={onClose}\n// //                 >\n// //                     <div>\n// //                         <h4>{state.selectedPlace.name}</h4>\n// //                     </div>\n// //                 </InfoWindow>\n// //             </CurrentLocation>\n// //         );\n// //   }\n// //\n\n\n//Create a new map\n\nvar locations = [\n    ['Liver Office - Liverpool Office', 53.40529, -2.988801, 1],\n    ['Lond office - London Office', 51.515026, -0.086811, 2],\n\n];\n\nexport default function test(loc) {\n    var map_container = document.getElementById('map');\n    if (!map_container.map) {\n        map_container.map = new window.google.maps.Map(map_container,\n\n            {\n                stylers: [{\n                    saturation: -100\n                }\n                ]\n            });\n        map_container.marker = new window.google.maps.Marker();\n        map_container.infowindow = new window.google.maps.InfoWindow();\n        window.google.maps.event.addListener(map_container.marker, 'click', function () {\n            map_container.infowindow.close();\n            map_container.infowindow.open(this.getMap(), this);\n        });\n        map_container.infowindow.bindTo('content', map_container.marker, 'content');\n    }\n    map_container.infowindow.close();\n    map_container.map.setOptions({\n        zoom: 17,\n        center: new window.google.maps.LatLng((locations[loc][1]), (locations[loc][2]))\n    });\n\n    //icon: 'marketICO.png',\n    map_container.marker.setOptions({\n        position: map_container.map.getCenter(),\n        map: map_container.map,\n        content: locations[loc][0],\n        title: locations[loc][0]\n    });\n}\n"]},"metadata":{},"sourceType":"module"}