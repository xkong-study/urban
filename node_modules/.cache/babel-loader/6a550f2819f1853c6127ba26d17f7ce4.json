{"ast":null,"code":"import _toConsumableArray from \"/Users/kong/Desktop/game-cloud-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/kong/Desktop/game-cloud-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kong/Desktop/game-cloud-frontend/src/pages/Means.jsx\";\nimport { DislikeFilled, DislikeOutlined, LikeFilled, LikeOutlined } from '@ant-design/icons';\nimport React, { createElement, useEffect, useState } from 'react';\nimport { Avatar, Comment, Tooltip, Button, Form, Input, List, Skeleton, Divider } from 'antd';\nimport moment from 'moment';\nimport { message } from 'antd';\nimport VirtualList from 'rc-virtual-list';\nimport { AddCommentDataApi, CommentListApi, GetCommentDataApi } from \"./request/api\";\nimport InfiniteScroll from 'react-infinite-scroll-component';\nexport default function Means() {\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([{\n    actions: [/*#__PURE__*/React.createElement(\"span\", {\n      key: \"comment-list-reply-to-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 23\n      }\n    }, \"Reply to\")],\n    author: 'Han Solo',\n    avatar: 'https://joeschmoe.io/api/v1/random',\n    comments: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }, \"We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.\"),\n    datetime: /*#__PURE__*/React.createElement(Tooltip, {\n      title: moment().subtract(1, 'days').format('YYYY-MM-DD HH:mm:ss'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }, moment().subtract(1, 'days').fromNow()))\n  }, {\n    actions: [/*#__PURE__*/React.createElement(\"span\", {\n      key: \"comment-list-reply-to-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 23\n      }\n    }, \"Reply to\")],\n    author: 'Han Solo',\n    avatar: 'https://joeschmoe.io/api/v1/random',\n    comments: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, \"We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.\"),\n    datetime: /*#__PURE__*/React.createElement(Tooltip, {\n      title: moment().subtract(2, 'days').format('YYYY-MM-DD HH:mm:ss'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, moment().subtract(2, 'days').fromNow()))\n  }]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      arr = _useState4[0],\n      setArr = _useState4[1];\n\n  var loadMoreData = function loadMoreData() {\n    if (loading) {\n      return;\n    }\n\n    setLoading(true);\n    GetCommentDataApi().then(function (res) {\n      return res.json();\n    }).then(function (body) {\n      setArr([].concat(_toConsumableArray(arr), _toConsumableArray(body.results)));\n      setLoading(false);\n    }).catch(function () {\n      setLoading(false);\n    });\n  }; // useEffect(()=>{\n  //     GetCommentDataApi().then(response=> {\n  //         let newArr = JSON.parse(JSON.stringify(response));//深拷贝\n  //         let myarr = []//用来获取自己想要的属性\n  //         newArr.map(item => {\n  //             let obj = {\n  //                 id: item.id,\n  //                 avatar: 'https://joeschmoe.io/api/v1/random',\n  //                 actions: [<span key=\"comment-list-reply-to-0\">Reply to</span>],\n  //                 author: item.author,\n  //                 comments: item.comments,\n  //                 value: item.value,\n  //                 datetime: (\n  //                     <Tooltip title={moment().subtract(2, 'days').format('YYYY-MM-DD HH:mm:ss')}>\n  //                         <span>{moment().subtract(2, 'days').fromNow()}</span>\n  //                     </Tooltip>\n  //                 ),\n  //             }\n  //             myarr.push(obj);\n  //         })\n  //         setArr(myarr)\n  //         console.log(myarr)\n  //     })\n  // },[])\n\n\n  useEffect(function () {\n    loadMoreData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"scrollableDiv\",\n    style: {\n      height: 400,\n      overflow: 'auto',\n      padding: '0 16px',\n      border: '1px solid rgba(140, 140, 140, 0.35)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n    dataLength: arr.length,\n    next: loadMoreData,\n    hasMore: arr.length < 50,\n    loader: /*#__PURE__*/React.createElement(Skeleton, {\n      avatar: true,\n      paragraph: {\n        rows: 1\n      },\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 20\n      }\n    }),\n    endMessage: /*#__PURE__*/React.createElement(Divider, {\n      plain: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 28\n      }\n    }, \"It is all, nothing more \\uD83E\\uDD10\"),\n    scrollableTarget: \"scrollableDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    className: \"comment-list\",\n    header: \"\".concat(arr.length, \" replies\"),\n    itemLayout: \"horizontal\",\n    dataSource: arr,\n    renderItem: function renderItem(item) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(Comment, {\n        actions: item.actions,\n        author: item.author,\n        avatar: item.avatar,\n        content: item.comments,\n        datetime: item.datetime,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 20\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 8\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/kong/Desktop/game-cloud-frontend/src/pages/Means.jsx"],"names":["DislikeFilled","DislikeOutlined","LikeFilled","LikeOutlined","React","createElement","useEffect","useState","Avatar","Comment","Tooltip","Button","Form","Input","List","Skeleton","Divider","moment","message","VirtualList","AddCommentDataApi","CommentListApi","GetCommentDataApi","InfiniteScroll","Means","loading","setLoading","actions","author","avatar","comments","datetime","subtract","format","fromNow","arr","setArr","loadMoreData","then","res","json","body","results","catch","height","overflow","padding","border","length","rows","item"],"mappings":"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","sourcesContent":["import { DislikeFilled, DislikeOutlined, LikeFilled, LikeOutlined } from '@ant-design/icons';\nimport React, {createElement, useEffect, useState} from 'react';\nimport {Avatar, Comment, Tooltip, Button, Form, Input, List, Skeleton, Divider} from 'antd';\nimport moment from 'moment';\nimport { message } from 'antd';\nimport VirtualList from 'rc-virtual-list';\nimport {AddCommentDataApi, CommentListApi, GetCommentDataApi} from \"./request/api\";\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\n\nexport default function Means() {\n    const [loading, setLoading] = useState(false);\n    const[arr,setArr]=useState([\n        {\n            actions: [<span key=\"comment-list-reply-to-0\">Reply to</span>],\n            author: 'Han Solo',\n            avatar: 'https://joeschmoe.io/api/v1/random',\n            comments: (\n                <p>\n                    We supply a series of design principles, practical patterns and high quality design\n                    resources (Sketch and Axure), to help people create their product prototypes beautifully and\n                    efficiently.\n                </p>\n            ),\n            datetime: (\n                <Tooltip title={moment().subtract(1, 'days').format('YYYY-MM-DD HH:mm:ss')}>\n                    <span>{moment().subtract(1, 'days').fromNow()}</span>\n                </Tooltip>\n            ),\n        },\n        {\n            actions: [<span key=\"comment-list-reply-to-0\">Reply to</span>],\n            author: 'Han Solo',\n            avatar: 'https://joeschmoe.io/api/v1/random',\n            comments: (\n                <p>\n                    We supply a series of design principles, practical patterns and high quality design\n                    resources (Sketch and Axure), to help people create their product prototypes beautifully and\n                    efficiently.\n                </p>\n            ),\n            datetime: (\n                <Tooltip title={moment().subtract(2, 'days').format('YYYY-MM-DD HH:mm:ss')}>\n                    <span>{moment().subtract(2, 'days').fromNow()}</span>\n                </Tooltip>\n            ),\n        },\n    ]);\n    const loadMoreData = () => {\n        if (loading) {\n            return;\n        }\n\n        setLoading(true);\n        GetCommentDataApi()\n            .then((res) => res.json())\n            .then((body) => {\n                setArr([...arr, ...body.results]);\n                setLoading(false);\n            })\n            .catch(() => {\n                setLoading(false);\n            });\n    };\n\n\n    // useEffect(()=>{\n    //     GetCommentDataApi().then(response=> {\n    //         let newArr = JSON.parse(JSON.stringify(response));//深拷贝\n    //         let myarr = []//用来获取自己想要的属性\n    //         newArr.map(item => {\n    //             let obj = {\n    //                 id: item.id,\n    //                 avatar: 'https://joeschmoe.io/api/v1/random',\n    //                 actions: [<span key=\"comment-list-reply-to-0\">Reply to</span>],\n    //                 author: item.author,\n    //                 comments: item.comments,\n    //                 value: item.value,\n    //                 datetime: (\n    //                     <Tooltip title={moment().subtract(2, 'days').format('YYYY-MM-DD HH:mm:ss')}>\n    //                         <span>{moment().subtract(2, 'days').fromNow()}</span>\n    //                     </Tooltip>\n    //                 ),\n    //             }\n    //             myarr.push(obj);\n    //         })\n    //         setArr(myarr)\n    //         console.log(myarr)\n    //     })\n    // },[])\n    useEffect(() => {\n        loadMoreData();\n    }, []);\n   return(\n       <div  id=\"scrollableDiv\"\n             style={{\n                 height: 400,\n                 overflow: 'auto',\n                 padding: '0 16px',\n                 border: '1px solid rgba(140, 140, 140, 0.35)',\n             }}\n       >\n           <InfiniteScroll\n               dataLength={arr.length}\n               next={loadMoreData}\n               hasMore={arr.length < 50}\n               loader={\n                   <Skeleton\n                       avatar\n                       paragraph={{\n                           rows: 1,\n                       }}\n                       active\n                   />\n               }\n               endMessage={<Divider plain>It is all, nothing more 🤐</Divider>}\n               scrollableTarget=\"scrollableDiv\"\n           >\n       <List\n           className=\"comment-list\"\n           header={`${arr.length} replies`}\n           itemLayout=\"horizontal\"\n           dataSource={arr}\n           renderItem={(item) => (\n               <li>\n                   <Comment\n                       actions={item.actions}\n                       author={item.author}\n                       avatar={item.avatar}\n                       content={item.comments}\n                       datetime={item.datetime}\n                   />\n               </li>\n           )}\n       />\n       </InfiniteScroll>\n       </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}