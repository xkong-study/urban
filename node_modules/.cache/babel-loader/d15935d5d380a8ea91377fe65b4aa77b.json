{"ast":null,"code":"import _toConsumableArray from \"/Users/kong/Desktop/game-cloud-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/kong/Desktop/game-cloud-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kong/Desktop/game-cloud-frontend/src/pages/Means.jsx\";\nimport { DislikeFilled, DislikeOutlined, LikeFilled, LikeOutlined } from '@ant-design/icons';\nimport React, { createElement, useEffect, useState } from 'react';\nimport { Avatar, Comment, Tooltip, Button, Form, Input, List } from 'antd';\nimport moment from 'moment';\nimport { message } from 'antd';\nimport VirtualList from 'rc-virtual-list';\nvar TextArea = Input.TextArea;\nvar fakeDataUrl = '';\nvar ContainerHeight = 400;\nexport default function Means() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      comments = _useState2[0],\n      setComments = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      submitting = _useState4[0],\n      setSubmitting = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      value = _useState6[0],\n      setValue = _useState6[1];\n\n  var CommentList = function CommentList(_ref) {\n    var comments = _ref.comments;\n    return /*#__PURE__*/React.createElement(List, {\n      dataSource: comments,\n      header: \"\".concat(comments.length, \" \").concat(comments.length > 1 ? 'replies' : 'reply'),\n      itemLayout: \"horizontal\",\n      renderItem: function renderItem(props) {\n        return /*#__PURE__*/React.createElement(Comment, Object.assign({}, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 36\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    });\n  };\n\n  var Editor = function Editor(_ref2) {\n    var onChange = _ref2.onChange,\n        onSubmit = _ref2.onSubmit,\n        submitting = _ref2.submitting,\n        value = _ref2.value;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Item, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextArea, {\n      rows: 4,\n      onChange: onChange,\n      value: value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      htmlType: \"submit\",\n      loading: submitting,\n      onClick: onSubmit,\n      type: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, \"Add Comment\")));\n  };\n\n  var handleSubmit = function handleSubmit() {\n    if (!value) return;\n    setSubmitting(true);\n    setTimeout(function () {\n      setSubmitting(false);\n      setValue('');\n      setComments([].concat(_toConsumableArray(comments), [{\n        author: 'Han Solo',\n        avatar: 'https://joeschmoe.io/api/v1/random',\n        content: /*#__PURE__*/React.createElement(\"p\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 30\n          }\n        }, value),\n        datetime: moment().fromNow()\n      }]));\n    }, 1000);\n  };\n\n  var handleChange = function handleChange(e) {\n    setValue(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, comments.length > 0 && /*#__PURE__*/React.createElement(CommentList, {\n    comments: comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Comment, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: \"https://joeschmoe.io/api/v1/random\",\n      alt: \"Han Solo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }),\n    content: /*#__PURE__*/React.createElement(Editor, {\n      onChange: handleChange,\n      onSubmit: handleSubmit,\n      submitting: submitting,\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }));\n}\n;","map":{"version":3,"sources":["/Users/kong/Desktop/game-cloud-frontend/src/pages/Means.jsx"],"names":["DislikeFilled","DislikeOutlined","LikeFilled","LikeOutlined","React","createElement","useEffect","useState","Avatar","Comment","Tooltip","Button","Form","Input","List","moment","message","VirtualList","TextArea","fakeDataUrl","ContainerHeight","Means","comments","setComments","submitting","setSubmitting","value","setValue","CommentList","length","props","Editor","onChange","onSubmit","handleSubmit","setTimeout","author","avatar","content","datetime","fromNow","handleChange","e","target"],"mappings":"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","sourcesContent":["import { DislikeFilled, DislikeOutlined, LikeFilled, LikeOutlined } from '@ant-design/icons';\nimport React, {createElement, useEffect, useState} from 'react';\nimport { Avatar, Comment, Tooltip, Button, Form, Input, List } from 'antd';\nimport moment from 'moment';\nimport { message } from 'antd';\nimport VirtualList from 'rc-virtual-list';\nconst { TextArea } = Input;\nconst fakeDataUrl =\n    '';\nconst ContainerHeight = 400;\nexport default function Means() {\n    const [comments, setComments] = useState([]);\n    const [submitting, setSubmitting] = useState(false);\n    const [value, setValue] = useState('');\n    const CommentList = ({ comments }) => (\n        <List\n            dataSource={comments}\n            header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\n            itemLayout=\"horizontal\"\n            renderItem={(props) => <Comment {...props} />}\n        />\n    );\n\n    const Editor = ({ onChange, onSubmit, submitting, value }) => (\n        <>\n            <Form.Item>\n                <TextArea rows={4} onChange={onChange} value={value} />\n            </Form.Item>\n            <Form.Item>\n                <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit} type=\"primary\">\n                    Add Comment\n                </Button>\n            </Form.Item>\n        </>\n    );\n    const handleSubmit = () => {\n        if (!value) return;\n        setSubmitting(true);\n        setTimeout(() => {\n            setSubmitting(false);\n            setValue('');\n            setComments([\n                ...comments,\n                {\n                    author: 'Han Solo',\n                    avatar: 'https://joeschmoe.io/api/v1/random',\n                    content: <p>{value}</p>,\n                    datetime: moment().fromNow(),\n                },\n            ]);\n        }, 1000);\n    };\n\n    const handleChange = (e) => {\n        setValue(e.target.value);\n    };\n    return (\n        <>\n            {comments.length > 0 && <CommentList comments={comments} />}\n            <Comment\n                avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" alt=\"Han Solo\" />}\n                content={\n                    <Editor\n                        onChange={handleChange}\n                        onSubmit={handleSubmit}\n                        submitting={submitting}\n                        value={value}\n                    />\n                }\n            />\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}