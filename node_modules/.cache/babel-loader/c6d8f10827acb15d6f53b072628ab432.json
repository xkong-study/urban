{"ast":null,"code":"import _slicedToArray from \"/Users/kong/Desktop/urban_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kong/Desktop/urban_react/src/pages/map.jsx\";\n\n/* jshint esversion: 6 */\nimport React from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api'; // Import the functions you need from the SDKs you need\n\nimport firebase from \"firebase/compat\";\nimport axios from \"axios\";\nvar containerStyle = {\n  width: '800px',\n  height: '400px'\n};\nexport default function map() {\n  var firebaseConfig = {\n    apiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\",\n    authDomain: \"urban-computing-cb07c.firebaseapp.com\",\n    databaseURL: \"https://urban-computing-cb07c-default-rtdb.firebaseio.com\",\n    projectId: \"urban-computing-cb07c\",\n    storageBucket: \"urban-computing-cb07c.appspot.com\",\n    messagingSenderId: \"293478437107\",\n    appId: \"1:293478437107:web:4cd5199b68f68eac542786\",\n    measurementId: \"G-3Z5DD1SJYQ\"\n  };\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      count = _React$useState2[0],\n      setCount = _React$useState2[1];\n\n  React.useEffect(function () {\n    setTimeout(function () {\n      firebase.initializeApp(firebaseConfig);\n      firebase.database().ref('/').on('value', function (snap) {\n        var obj = snap.val();\n\n        if (obj !== null) {\n          for (var key in obj) {\n            setCount(obj[key]);\n          }\n        }\n      });\n    }, 1000);\n  }, []); // console.log(count);\n\n  var _useJsApiLoader = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\"\n  }),\n      isLoaded = _useJsApiLoader.isLoaded;\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      map = _React$useState4[0],\n      setMap = _React$useState4[1];\n\n  var myLatlng = {\n    lat: 53.49332,\n    lng: -6.31718\n  };\n  var onLoad = React.useCallback(function callback(map) {\n    var bounds = new window.google.maps.LatLngBounds(count);\n    map.fitBounds(bounds);\n    var marker = new window.google.maps.Marker({\n      position: myLatlng,\n      title: \"starting\"\n    });\n    marker.setMap(map);\n  }, []);\n  var onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n\n  var getApi = function getApi() {\n    axios.get('https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=53.49332,-6.31718&radius=1000000&types=cafe&key=AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c').then(function (response) {\n      //handle success data\n      var result = response.data;\n      console.log(result);\n    }).catch(function (error) {\n      //handle error satuation\n      console.log(error);\n    });\n  };\n\n  getApi();\n  return isLoaded ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: count,\n    zoom: 10,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \" \")) : /*#__PURE__*/React.createElement(React.Fragment, null);\n}","map":{"version":3,"sources":["/Users/kong/Desktop/urban_react/src/pages/map.jsx"],"names":["React","GoogleMap","useJsApiLoader","firebase","axios","containerStyle","width","height","map","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","useState","count","setCount","useEffect","setTimeout","initializeApp","database","ref","on","snap","obj","val","key","id","googleMapsApiKey","isLoaded","setMap","myLatlng","lat","lng","onLoad","useCallback","callback","bounds","window","google","maps","LatLngBounds","fitBounds","marker","Marker","position","title","onUnmount","getApi","get","then","response","result","data","console","log","catch","error"],"mappings":"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","sourcesContent":["/* jshint esversion: 6 */\n\nimport React from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\n// Import the functions you need from the SDKs you need\nimport firebase from \"firebase/compat\";\nimport axios from \"axios\";\n\n\nconst containerStyle = {\n    width: '800px',\n    height: '400px'\n};\n\n\n\nexport default function map() {\n\n    const firebaseConfig = {\n        apiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\",\n        authDomain: \"urban-computing-cb07c.firebaseapp.com\",\n        databaseURL: \"https://urban-computing-cb07c-default-rtdb.firebaseio.com\",\n        projectId: \"urban-computing-cb07c\",\n        storageBucket: \"urban-computing-cb07c.appspot.com\",\n        messagingSenderId: \"293478437107\",\n        appId: \"1:293478437107:web:4cd5199b68f68eac542786\",\n        measurementId: \"G-3Z5DD1SJYQ\"\n    };\n\n    const [count, setCount] =React.useState(0);\n    React.useEffect(()=>{\n        setTimeout(()=>{\n        firebase.initializeApp(firebaseConfig);\n        firebase.database().ref('/').on('value',(snap)=> {\n            let obj = snap.val();\n            if (obj !== null) {\n                for (var key in obj) {\n                    setCount(obj[key]);\n                }\n            }\n        });\n        },1000);\n    },[]);\n\n    // console.log(count);\n\n    const { isLoaded } = useJsApiLoader({\n        id: 'google-map-script',\n        googleMapsApiKey: \"AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c\"\n    });\n\n    const [map, setMap] = React.useState(null);\n\n    const myLatlng = {lat: 53.49332, lng: -6.31718};\n    const onLoad = React.useCallback(function callback(map) {\n        const bounds = new window.google.maps.LatLngBounds(count);\n        map.fitBounds(bounds);\n        const marker = new window.google.maps.Marker({\n            position:myLatlng,\n            title:\"starting\"\n        });\n        marker.setMap(map);\n    }, []);\n    const onUnmount = React.useCallback(function callback(map) {\n        setMap(null);\n    }, []);\n\n    const getApi = () => {\n        axios.get('https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=53.49332,-6.31718&radius=1000000&types=cafe&key=AIzaSyDSR-cgFYuYuXoDo4jvjxL0FbTfEN4me2c')\n            .then(function (response) {\n                //handle success data\n                const result = response.data;\n                console.log(result);\n            })\n            .catch(function (error) {\n                //handle error satuation\n                console.log(error);\n            });\n    };\n    getApi();\n    return isLoaded ? (\n        <div>\n        <GoogleMap  mapContainerStyle={containerStyle}  center={count}  zoom={10}  onLoad={onLoad}  onUnmount={onUnmount}> </GoogleMap>\n        </div>\n    ) : <></>\n}\n\n"]},"metadata":{},"sourceType":"module"}